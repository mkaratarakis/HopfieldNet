{"name":"Mathlib.FieldTheory.Galois.Profinite","instances":[{"typeNames":["AlgEquiv"],"name":"InfiniteGalois.instCompactSpaceAlgEquivOfIsGalois","className":"CompactSpace"}],"imports":["Init","Mathlib.FieldTheory.KrullTopology","Mathlib.FieldTheory.Galois.GaloisClosure","Mathlib.Topology.Algebra.Category.ProfiniteGrp.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L324-L328","name":"InfiniteGalois.profiniteGalGrpIsoLimit","line":324,"kind":"def","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.profiniteGalGrpIsoLimit","doc":"The categorical isomorphism between `profiniteGalGrp` and `lim Gal(L/k)` where `L` is a\n`FiniteGaloisIntermediateField` ordered by inverse inclusion "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.profiniteGalGrpIsoLimit\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">profiniteGalGrpIsoLimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.profiniteGalGrp\">profiniteGalGrp</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">ProfiniteGrp.limit</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\">asProfiniteGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L319-L322","name":"InfiniteGalois.profiniteGalGrp","line":319,"kind":"def","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.profiniteGalGrp","doc":"`Gal(K/k)` as a profinite group as there is\na `ContinuousMulEquiv` to a `ProfiniteGrp` given above "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.profiniteGalGrp\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">profiniteGalGrp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_4}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L316-L317","name":"InfiniteGalois.instCompactSpaceAlgEquivOfIsGalois","line":316,"kind":"instance","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.instCompactSpaceAlgEquivOfIsGalois","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.instCompactSpaceAlgEquivOfIsGalois\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">instCompactSpaceAlgEquivOfIsGalois</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> (<span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">K</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L307-L314","name":"InfiniteGalois.continuousMulEquivToLimit","line":307,"kind":"def","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.continuousMulEquivToLimit","doc":"The `ContinuousMulEquiv` between `K ≃ₐ[k] K` and `lim Gal(L/k)` where `L` is a\n`FiniteGaloisIntermediateField` ordered by inverse inclusion, obtained\nfrom `InfiniteGalois.mulEquivToLimit` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.continuousMulEquivToLimit\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">continuousMulEquivToLimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">K</span>) <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMulEquiv\">≃ₜ*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">ProfiniteGrp.limit</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\">asProfiniteGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L295-L303","name":"InfiniteGalois.mulEquivToLimit_symm_continuous","line":295,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.mulEquivToLimit_symm_continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.mulEquivToLimit_symm_continuous\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">mulEquivToLimit_symm_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.mulEquivToLimit\">mulEquivToLimit</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv.symm\">symm</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L285-L293","name":"InfiniteGalois.isOpen_mulEquivToLimit_image_fixingSubgroup","line":285,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.isOpen_mulEquivToLimit_image_fixingSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.isOpen_mulEquivToLimit_image_fixingSubgroup\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">isOpen_mulEquivToLimit_image_fixingSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> (<span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.mulEquivToLimit\">mulEquivToLimit</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IntermediateField.fixingSubgroup\">fixingSubgroup</a></span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L279-L283","name":"InfiniteGalois.krullTopology_mem_nhds_one_iff_of_isGalois","line":279,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.krullTopology_mem_nhds_one_iff_of_isGalois","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.krullTopology_mem_nhds_one_iff_of_isGalois\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">krullTopology_mem_nhds_one_iff_of_isGalois</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">K</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>), <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IntermediateField.fixingSubgroup\">fixingSubgroup</a></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L260-L276","name":"InfiniteGalois.mulEquivToLimit","line":260,"kind":"def","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.mulEquivToLimit","doc":"`algEquivToLimit` as a `MulEquiv`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.mulEquivToLimit\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">mulEquivToLimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">K</span>) <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">ProfiniteGrp.limit</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\">asProfiniteGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L227-L227","name":"InfiniteGalois.limitToAlgEquiv_symm_apply","line":227,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.limitToAlgEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.limitToAlgEquiv_symm_apply\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">limitToAlgEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">ProfiniteGrp.limit</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\">asProfiniteGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.limitToAlgEquiv\">limitToAlgEquiv</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv.symm\">symm</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#_private.Mathlib.FieldTheory.Galois.Profinite.0.InfiniteGalois.toAlgEquivAux\">InfiniteGalois.toAlgEquivAux✝</a> <span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L227-L227","name":"InfiniteGalois.limitToAlgEquiv_apply","line":227,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.limitToAlgEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.limitToAlgEquiv_apply\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">limitToAlgEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">ProfiniteGrp.limit</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\">asProfiniteGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.limitToAlgEquiv\">limitToAlgEquiv</a> <span class=\"fn\">g</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#_private.Mathlib.FieldTheory.Galois.Profinite.0.InfiniteGalois.toAlgEquivAux\">InfiniteGalois.toAlgEquivAux✝</a> <span class=\"fn\">g</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L225-L257","name":"InfiniteGalois.limitToAlgEquiv","line":225,"kind":"def","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.limitToAlgEquiv","doc":"`toAlgEquivAux` as an `AlgEquiv`.\nIt is done by using above lifting lemmas on bigger `FiniteGaloisIntermediateField`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.limitToAlgEquiv\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">limitToAlgEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">ProfiniteGrp.limit</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\">asProfiniteGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">K</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L219-L223","name":"InfiniteGalois.toAlgEquivAux_eq_liftNormal","line":219,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.toAlgEquivAux_eq_liftNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.toAlgEquivAux_eq_liftNormal\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">toAlgEquivAux_eq_liftNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">ProfiniteGrp.limit</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\">asProfiniteGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField.toIntermediateField\">toIntermediateField</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#_private.Mathlib.FieldTheory.Galois.Profinite.0.InfiniteGalois.toAlgEquivAux\">InfiniteGalois.toAlgEquivAux✝</a> <span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj\">proj</a> <span class=\"fn\">L</span>)</span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/FieldTheory/Normal/Basic.html#AlgEquiv.liftNormal\">liftNormal</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L213-L217","name":"InfiniteGalois.mk_toAlgEquivAux","line":213,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.mk_toAlgEquivAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.mk_toAlgEquivAux\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">mk_toAlgEquivAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">ProfiniteGrp.limit</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\">asProfiniteGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx'</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#_private.Mathlib.FieldTheory.Galois.Profinite.0.InfiniteGalois.toAlgEquivAux\">InfiniteGalois.toAlgEquivAux✝</a> <span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField.toIntermediateField\">toIntermediateField</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField.toIntermediateField\">toIntermediateField</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#_private.Mathlib.FieldTheory.Galois.Profinite.0.InfiniteGalois.toAlgEquivAux\">InfiniteGalois.toAlgEquivAux✝</a> <span class=\"fn\">g</span> <span class=\"fn\">x</span></span>, <span class=\"fn\">hx'</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj\">proj</a> <span class=\"fn\">L</span>)</span> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">x</span>, <span class=\"fn\">hx</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L208-L211","name":"InfiniteGalois.toAlgEquivAux_eq_proj_of_mem","line":208,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.toAlgEquivAux_eq_proj_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.toAlgEquivAux_eq_proj_of_mem\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">toAlgEquivAux_eq_proj_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">ProfiniteGrp.limit</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\">asProfiniteGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField.toIntermediateField\">toIntermediateField</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#_private.Mathlib.FieldTheory.Galois.Profinite.0.InfiniteGalois.toAlgEquivAux\">InfiniteGalois.toAlgEquivAux✝</a> <span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj\">proj</a> <span class=\"fn\">L</span>)</span> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">x</span>, <span class=\"fn\">hx</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L196-L200","name":"InfiniteGalois.proj_adjoin_singleton_val","line":196,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj_adjoin_singleton_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj_adjoin_singleton_val\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">proj_adjoin_singleton_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Basic.html#IsGalois\">IsGalois</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">ProfiniteGrp.limit</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\">asProfiniteGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField.adjoin\">FiniteGaloisIntermediateField.adjoin</a> <span class=\"fn\">k</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">x</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span>.<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField.toIntermediateField\">toIntermediateField</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField.toIntermediateField\">toIntermediateField</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj\">proj</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField.adjoin\">FiniteGaloisIntermediateField.adjoin</a> <span class=\"fn\">k</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">x</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span>)</span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj\">proj</a> <span class=\"fn\">L</span>)</span> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">↑<span class=\"fn\">y</span></span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L183-L194","name":"InfiniteGalois.proj_of_le","line":183,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj_of_le\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">proj_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">ProfiniteGrp.limit</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\">asProfiniteGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField.toIntermediateField\">toIntermediateField</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L'</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">L</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj\">proj</a> <span class=\"fn\">L</span>)</span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj\">proj</a> <span class=\"fn\">L'</span>)</span> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L178-L181","name":"InfiniteGalois.finGaloisGroupFunctor_map_proj_eq_proj","line":178,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.finGaloisGroupFunctor_map_proj_eq_proj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.finGaloisGroupFunctor_map_proj_eq_proj\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">finGaloisGroupFunctor_map_proj_eq_proj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">ProfiniteGrp.limit</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\">asProfiniteGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₁ </span><span class=\"fn\">L₂</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#finGaloisGroupFunctor\">finGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj\">proj</a> <span class=\"fn\">L₂</span>)</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj\">proj</a> <span class=\"fn\">L₁</span>)</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L171-L176","name":"InfiniteGalois.proj","line":171,"kind":"def","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj","doc":"The projection map from `lim Gal(L/k)` to a specific `Gal(L/k)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.proj\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">proj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">ProfiniteGrp.limit</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\">asProfiniteGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a>   <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField.toIntermediateField\">toIntermediateField</a></span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField.toIntermediateField\">toIntermediateField</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L165-L169","name":"InfiniteGalois.algEquivToLimit_continuous","line":165,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.algEquivToLimit_continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.algEquivToLimit_continuous\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">algEquivToLimit_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.algEquivToLimit\">algEquivToLimit</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L145-L163","name":"InfiniteGalois.restrictNormalHom_continuous","line":145,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.restrictNormalHom_continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.restrictNormalHom_continuous\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">restrictNormalHom_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Normal/Defs.html#Normal\">Normal</a> <span class=\"fn\">k</span> <span class=\"fn\">↥<span class=\"fn\">L</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Normal/Defs.html#AlgEquiv.restrictNormalHom\">AlgEquiv.restrictNormalHom</a> <span class=\"fn\">↥<span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L125-L143","name":"InfiniteGalois.algEquivToLimit","line":125,"kind":"def","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.algEquivToLimit","doc":"The homomorphism from `Gal(K/k)` to `lim Gal(L/k)` where `L` is a\n`FiniteGaloisIntermediateField k K` ordered by inverse inclusion. It is induced by the\ncanonical projections from `Gal(K/k)` to `Gal(L/k)`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.algEquivToLimit\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">algEquivToLimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">K</span>) <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">ProfiniteGrp.limit</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\">asProfiniteGaloisGroupFunctor</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L118-L122","name":"InfiniteGalois.asProfiniteGaloisGroupFunctor","line":118,"kind":"def","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor","doc":"The composition of `finGaloisGroupFunctor` with\nthe forgetful functor from `FiniteGrp` to `ProfiniteGrp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#InfiniteGalois.asProfiniteGaloisGroupFunctor\"><span class=\"name\">InfiniteGalois</span>.<span class=\"name\">asProfiniteGaloisGroupFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_4}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L103-L109","name":"finGaloisGroupFunctor","line":103,"kind":"def","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#finGaloisGroupFunctor","doc":"The functor from `FiniteGaloisIntermediateField` (ordered by reverse inclusion) to `FiniteGrp`,\nmapping each `FiniteGaloisIntermediateField` `L` to `Gal (L/k)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#finGaloisGroupFunctor\"><span class=\"name\">finGaloisGroupFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./Mathlib/Algebra/Category/Grp/FiniteGrp.html#FiniteGrp\">FiniteGrp.{u_2}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L84-L98","name":"finGaloisGroupMap.map_comp","line":84,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#finGaloisGroupMap.map_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#finGaloisGroupMap.map_comp\"><span class=\"name\">finGaloisGroupMap</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₁ </span><span class=\"fn\">L₂ </span><span class=\"fn\">L₃</span> : <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">L₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₃</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#finGaloisGroupMap\">finGaloisGroupMap</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#finGaloisGroupMap\">finGaloisGroupMap</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#finGaloisGroupMap\">finGaloisGroupMap</a> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L79-L82","name":"finGaloisGroupMap.map_id","line":79,"kind":"theorem","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#finGaloisGroupMap.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#finGaloisGroupMap.map_id\"><span class=\"name\">finGaloisGroupMap</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#finGaloisGroupMap\">finGaloisGroupMap</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">L</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">L</span>)</span>.<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#FiniteGaloisIntermediateField.finGaloisGroup\">finGaloisGroup</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L68-L75","name":"finGaloisGroupMap","line":68,"kind":"def","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#finGaloisGroupMap","doc":"For `FiniteGaloisIntermediateField` s `L₁` and `L₂` with `L₂ ≤ L₁`\nthe restriction homomorphism from `Gal(L₁/k)` to `Gal(L₂/k)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#finGaloisGroupMap\"><span class=\"name\">finGaloisGroupMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₁ </span><span class=\"fn\">L₂</span> : <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">le</span> : <span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">L₁</span>)</span>.<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#FiniteGaloisIntermediateField.finGaloisGroup\">finGaloisGroup</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">L₂</span>)</span>.<a href=\"./Mathlib/FieldTheory/Galois/Profinite.html#FiniteGaloisIntermediateField.finGaloisGroup\">finGaloisGroup</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/FieldTheory/Galois/Profinite.lean#L61-L66","name":"FiniteGaloisIntermediateField.finGaloisGroup","line":61,"kind":"def","docLink":"./Mathlib/FieldTheory/Galois/Profinite.html#FiniteGaloisIntermediateField.finGaloisGroup","doc":"The (finite) Galois group `Gal(L / k)` associated to a\n`L : FiniteGaloisIntermediateField k K` `L`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/Galois/Profinite.html#FiniteGaloisIntermediateField.finGaloisGroup\"><span class=\"name\">FiniteGaloisIntermediateField</span>.<span class=\"name\">finGaloisGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Galois/GaloisClosure.html#FiniteGaloisIntermediateField\">FiniteGaloisIntermediateField</a> <span class=\"fn\">k</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/Grp/FiniteGrp.html#FiniteGrp\">FiniteGrp.{u_2}</a></div></div>"}]}