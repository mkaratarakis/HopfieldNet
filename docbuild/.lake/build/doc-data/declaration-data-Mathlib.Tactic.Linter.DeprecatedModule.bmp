{"name":"Mathlib.Tactic.Linter.DeprecatedModule","instances":[],"imports":["Init","Std.Time.Format","Mathlib.Init"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Tactic/Linter/DeprecatedModule.lean#L127-L153","name":"Mathlib.Linter.DeprecatedModule.deprecated.moduleLinter","line":127,"kind":"def","docLink":"./Mathlib/Tactic/Linter/DeprecatedModule.html#Mathlib.Linter.DeprecatedModule.deprecated.moduleLinter","doc":"The `deprecated.module` linter emits a warning when a file that has been renamed or split\nis imported.\nThe default value is `true`, since this linter is designed to warn projects downstream of `Mathlib`\nof refactors and deprecations in `Mathlib` itself.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/DeprecatedModule.html#Mathlib.Linter.DeprecatedModule.deprecated.moduleLinter\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">DeprecatedModule</span>.<span class=\"name\">deprecated</span>.<span class=\"name\">moduleLinter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter\">Lean.Linter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Tactic/Linter/DeprecatedModule.lean#L113-L125","name":"Mathlib.Linter.DeprecatedModule.IsLaterCommand","line":113,"kind":"opaque","docLink":"./Mathlib/Tactic/Linter/DeprecatedModule.html#Mathlib.Linter.DeprecatedModule.IsLaterCommand","doc":"`IsLaterCommand` is an `IO.Ref` that starts out being `false`.\nAs soon as a (non-import) command in a file is processed, the `deprecated.module` linter`\nsets it to `true`.\nIf it is `false`, then the `deprecated.module` linter will check for deprecated modules.\n\nThis is used to ensure that the linter performs the deprecation checks only once per file.\nThere are possible concurrency issues, but they should not be particularly worrying:\n* the linter check should be relatively quick;\n* the only way in which the linter could change what it reports is if the imports are changed\n  and a change in imports triggers a rebuild of the whole file anyway, resetting the `IO.Ref`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/DeprecatedModule.html#Mathlib.Linter.DeprecatedModule.IsLaterCommand\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">DeprecatedModule</span>.<span class=\"name\">IsLaterCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Tactic/Linter/DeprecatedModule.lean#L92-L109","name":"Mathlib.Linter.«command#show_deprecated_modules»","line":92,"kind":"def","docLink":"./Mathlib/Tactic/Linter/DeprecatedModule.html#Mathlib.Linter.«command#show_deprecated_modules»","doc":"A utility command to show the current entries of the `deprecatedModuleExt` in the format:\n```\nDeprecated modules\n\n'MathlibTest.DeprecatedModule' deprecates to\n#[Mathlib.Tactic.Linter.DocPrime, Mathlib.Tactic.Linter.DocString]\nwith message 'We can also give more details about the deprecation'\n\n...\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/DeprecatedModule.html#Mathlib.Linter.«command#show_deprecated_modules»\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">«command#show_deprecated_modules»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Tactic/Linter/DeprecatedModule.lean#L77-L90","name":"Mathlib.Linter.deprecated_modules","line":77,"kind":"def","docLink":"./Mathlib/Tactic/Linter/DeprecatedModule.html#Mathlib.Linter.deprecated_modules","doc":"`deprecated_module \"Optional string\" (since := \"yyyy-mm-dd\")` deprecates the current module `A`\nin favour of its direct imports.\nThis means that any file that directly imports `A` will get a notification on the `import A` line\nsuggesting to instead import the *direct imports* of `A`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/DeprecatedModule.html#Mathlib.Linter.deprecated_modules\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">deprecated_modules</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Tactic/Linter/DeprecatedModule.lean#L59-L75","name":"Mathlib.Linter.addModuleDeprecation","line":59,"kind":"def","docLink":"./Mathlib/Tactic/Linter/DeprecatedModule.html#Mathlib.Linter.addModuleDeprecation","doc":"`addModuleDeprecation` adds to the `deprecatedModuleExt` extension the pair consisting of the\ncurrent module name and the array of its direct imports.\n\nIt ignores the `Init` import, since this is a special module that is expected to be imported\nby all files.\n\nIt also ignores the `Mathlib.Tactic.Linter.DeprecatedModule` import (namely, the current file),\nsince there is no need to import this module.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/DeprecatedModule.html#Mathlib.Linter.addModuleDeprecation\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">addModuleDeprecation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Tactic/Linter/DeprecatedModule.lean#L43-L57","name":"Mathlib.Linter.deprecatedModuleExt","line":43,"kind":"opaque","docLink":"./Mathlib/Tactic/Linter/DeprecatedModule.html#Mathlib.Linter.deprecatedModuleExt","doc":"Defines the `deprecatedModuleExt` extension for adding a `HashSet` of triples of\n* a module `Name` that has been deprecated and\n* an array of `Name`s of modules that should be imported instead\n* an optional `String` containing further messages to be displayed with the deprecation\n\nto the environment.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/DeprecatedModule.html#Mathlib.Linter.deprecatedModuleExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">deprecatedModuleExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)\n  <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Tactic/Linter/DeprecatedModule.lean#L32-L41","name":"Mathlib.Linter.linter.deprecated.module","line":32,"kind":"opaque","docLink":"./Mathlib/Tactic/Linter/DeprecatedModule.html#Mathlib.Linter.linter.deprecated.module","doc":"The `deprecated.module` linter emits a warning when a file that has been renamed or split\nis imported.\nThe default value is `true`, since this linter is designed to warn projects downstream of `Mathlib`\nof refactors and deprecations in `Mathlib` itself.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/DeprecatedModule.html#Mathlib.Linter.linter.deprecated.module\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">linter</span>.<span class=\"name\">deprecated</span>.<span class=\"name\">module</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"}]}