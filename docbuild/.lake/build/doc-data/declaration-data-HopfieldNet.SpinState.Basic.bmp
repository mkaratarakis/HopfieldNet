{"name":"HopfieldNet.SpinState.Basic","instances":[{"typeNames":["Eq"],"name":"instDecidableEqSpinState","className":"Decidable"},{"typeNames":["SpinState"],"name":"instInhabitedSpinState","className":"Inhabited"},{"typeNames":["SpinState"],"name":"instFintypeSpinState","className":"Fintype"},{"typeNames":["SpinState"],"name":"SpinState.instCommGroup","className":"CommGroup"},{"typeNames":["Eq"],"name":"HopfieldState.instDecidableEq","className":"Decidable"},{"typeNames":["HopfieldState"],"name":"HopfieldState.instMetricSpace","className":"MetricSpace"},{"typeNames":["HopfieldState.UpdateSeq.isFixedPoint"],"name":"HopfieldState.UpdateSeq.instDecidableIsFixedPoint","className":"Decidable"},{"typeNames":["HopfieldState.UpdateSeq.convergesToBounded"],"name":"HopfieldState.UpdateSeq.instDecidableConvergesToBounded","className":"Decidable"},{"typeNames":["HopfieldState.UpdateSeq.ContentAddressableMemory","HopfieldState.HopfieldNetwork"],"name":"HopfieldState.UpdateSeq.contentAddressableMemoryToHopfieldNetwork","className":"Coe"}],"imports":["Init","Mathlib.LinearAlgebra.Matrix.BilinearForm","Mathlib.LinearAlgebra.Matrix.Hermitian","Mathlib.LinearAlgebra.QuadraticForm.Basic","Mathlib.Data.Real.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L479-L485","name":"HopfieldState.UpdateSeq.contentAddressableMemoryToHopfieldNetwork","line":479,"kind":"instance","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.contentAddressableMemoryToHopfieldNetwork","doc":"Convenience coercion from `ContentAddressableMemory` to its underlying `HopfieldNetwork`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.contentAddressableMemoryToHopfieldNetwork\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">contentAddressableMemoryToHopfieldNetwork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory\">ContentAddressableMemory</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L473-L473","name":"HopfieldState.UpdateSeq.ContentAddressableMemory.completes","line":473,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory.completes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory.completes\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">ContentAddressableMemory</span>.<span class=\"name\">completes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory\">ContentAddressableMemory</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory.patterns\">patterns</a></span> →\n  <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>),\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap\">overlap</a> <span class=\"fn\">x</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory.threshold\">threshold</a></span> → <span class=\"fn\">∃ (<span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.isFixedPoint\">isFixedPoint</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory.network\">network</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap\">overlap</a> <span class=\"fn\">y</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L472-L472","name":"HopfieldState.UpdateSeq.ContentAddressableMemory.threshold","line":472,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory.threshold","doc":"The overlap threshold required for pattern completion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory.threshold\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">ContentAddressableMemory</span>.<span class=\"name\">threshold</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory\">ContentAddressableMemory</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L470-L470","name":"HopfieldState.UpdateSeq.ContentAddressableMemory.patterns","line":470,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory.patterns","doc":"The set of stored patterns that can be recalled. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory.patterns\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">ContentAddressableMemory</span>.<span class=\"name\">patterns</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory\">ContentAddressableMemory</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L468-L468","name":"HopfieldState.UpdateSeq.ContentAddressableMemory.network","line":468,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory.network","doc":"The underlying Hopfield network used for pattern storage and recall. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory.network\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">ContentAddressableMemory</span>.<span class=\"name\">network</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory\">ContentAddressableMemory</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L465-L465","name":"HopfieldState.UpdateSeq.ContentAddressableMemory.mk","line":465,"kind":"ctor","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory.mk\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">ContentAddressableMemory</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">network</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">patterns</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">threshold</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">completes</span> :\n  <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\">patterns</span>,\n    <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>),\n      <span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap\">overlap</a> <span class=\"fn\">x</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">threshold</span> → <span class=\"fn\">∃ (<span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.isFixedPoint\">isFixedPoint</a> <span class=\"fn\">network</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap\">overlap</a> <span class=\"fn\">y</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory\">ContentAddressableMemory</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L465-L477","name":"HopfieldState.UpdateSeq.ContentAddressableMemory","line":465,"kind":"structure","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.ContentAddressableMemory\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">ContentAddressableMemory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L448-L457","name":"HopfieldState.UpdateSeq.randomUpdate","line":448,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.randomUpdate","doc":"A random update rule that uses a selector to choose which neuron to update.\nReturns None if no update is needed or possible.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.randomUpdate\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">randomUpdate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">selector</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.NeuronSelector\">NeuronSelector</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L443-L446","name":"HopfieldState.UpdateSeq.NeuronSelector","line":443,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.NeuronSelector","doc":"A type representing a selection function that chooses which neuron to update next.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.NeuronSelector\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">NeuronSelector</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L418-L441","name":"HopfieldState.UpdateSeq.overlap_and_distance","line":418,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap_and_distance","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap_and_distance\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">overlap_and_distance</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap\">overlap</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L412-L413","name":"HopfieldState.UpdateSeq.overlap_comm","line":412,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap_comm\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">overlap_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap\">overlap</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap\">overlap</a> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L401-L407","name":"HopfieldState.UpdateSeq.overlap_self","line":401,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap_self\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">overlap_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap\">overlap</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L398-L399","name":"HopfieldState.UpdateSeq.real_vector_sq_one","line":398,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.real_vector_sq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.real_vector_sq_one\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">real_vector_sq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">i</span>)</span>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">i</span>)</span>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L391-L396","name":"HopfieldState.UpdateSeq.overlap","line":391,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap","doc":"The overlap measures similarity between two states by taking\nthe dot product of their corresponding ±1 vectors.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.overlap\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">overlap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L385-L389","name":"HopfieldState.UpdateSeq.instDecidableConvergesToBounded","line":385,"kind":"instance","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.instDecidableConvergesToBounded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.instDecidableConvergesToBounded\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">instDecidableConvergesToBounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">maxSteps</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.convergesToBounded\">convergesToBounded</a> <span class=\"fn\">net</span> <span class=\"fn\">x</span> <span class=\"fn\">p</span> <span class=\"fn\">maxSteps</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L372-L380","name":"HopfieldState.UpdateSeq.convergesToBounded","line":372,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.convergesToBounded","doc":"Bounded convergence: There exists an update sequence from `x` that terminates at `p`,\n`p` is a fixed point, and the sequence length is at most `maxSteps`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.convergesToBounded\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">convergesToBounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">maxSteps</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L363-L369","name":"HopfieldState.UpdateSeq.convergesTo","line":363,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.convergesTo","doc":"A state `x` converges to a fixed point `p` if there is an update\nsequence from `x` that terminates at `p`, and `p` is a fixed point.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.convergesTo\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">convergesTo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L352-L362","name":"HopfieldState.UpdateSeq.instDecidableIsFixedPoint","line":352,"kind":"instance","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.instDecidableIsFixedPoint","doc":"Decidability of fixed points.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.instDecidableIsFixedPoint\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">instDecidableIsFixedPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.isFixedPoint\">isFixedPoint</a> <span class=\"fn\">net</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L346-L351","name":"HopfieldState.UpdateSeq.isFixedPoint","line":346,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.isFixedPoint","doc":"A state `x` is a fixed point under `net` if no single-neuron update changes the state.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.isFixedPoint\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">isFixedPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L338-L345","name":"HopfieldState.UpdateSeq.target","line":338,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.target","doc":"Extract the final state from an update sequence.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.target\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">target</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq\">UpdateSeq</a> <span class=\"fn\">net</span> <span class=\"fn\">x</span></span> → <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L331-L337","name":"HopfieldState.UpdateSeq.length","line":331,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.length","doc":"Get the length of an update sequence.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.length\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">length</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq\">UpdateSeq</a> <span class=\"fn\">net</span> <span class=\"fn\">x</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L321-L328","name":"HopfieldState.updateSeqOfList","line":321,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.updateSeqOfList","doc":"Defines a function to generate a specific UpdateSeq\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.updateSeqOfList\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">updateSeqOfList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq\">UpdateSeq</a> <span class=\"fn\">net</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L320-L320","name":"HopfieldState.UpdateSeq.cons","line":320,"kind":"ctor","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.cons\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq\">UpdateSeq</a> <span class=\"fn\">net</span> <span class=\"fn\">(<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.updateState\">updateState</a> <span class=\"fn\">net</span> <span class=\"fn\">x</span> <span class=\"fn\">i</span>)</span></span> → <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq\">UpdateSeq</a> <span class=\"fn\">net</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L319-L319","name":"HopfieldState.UpdateSeq.nil","line":319,"kind":"ctor","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq.nil\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span>.<span class=\"name\">nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq\">UpdateSeq</a> <span class=\"fn\">net</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L313-L320","name":"HopfieldState.UpdateSeq","line":313,"kind":"inductive","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq","doc":"`UpdateSeq net x` is an inductive type representing a sequence of\nasynchronous updates on the Hopfield network `net` starting from state `x`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.UpdateSeq\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">UpdateSeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L301-L311","name":"HopfieldState.updateState","line":301,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.updateState","doc":"Asynchronous update rule for neuron `i` in state `x`: flips the spin\naccording to the sign of the local field.\nIf the local field is zero, no change is made.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.updateState\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">updateState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L294-L299","name":"HopfieldState.localField","line":294,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.localField","doc":"Local field (net input) for neuron `i` in state `x`,\n`(Wx)_i - threshold[i]`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.localField\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">localField</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L283-L292","name":"HopfieldState.energy_eq_energy'","line":283,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.energy_eq_energy'","doc":"Proof that the two energy functions are equivalent\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.energy_eq_energy'\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">energy_eq_energy'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.energy\">energy</a> <span class=\"fn\">net</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.energy'\">energy'</a> <span class=\"fn\">net</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L272-L281","name":"HopfieldState.energy'","line":272,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.energy'","doc":"Equivalent definition aimed at making the energy function more computationally friendly\n(using the vector dot product ⬝ᵥ)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.energy'\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">energy'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L260-L270","name":"HopfieldState.energy","line":260,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.energy","doc":"Energy function of the Hopfield network for a given state `x`.\nTypical Hopfield energy: `E(x) = -1/2 xᵀWx - bᵀx`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.energy\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">energy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L256-L258","name":"HopfieldState.weights_diag_zero","line":256,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.weights_diag_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.weights_diag_zero\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">weights_diag_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.weightsMatrix\">weightsMatrix</a> <span class=\"fn\">net</span>)</span>.<a href=\"./Mathlib/Data/Matrix/Diagonal.html#Matrix.diag\">diag</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L252-L254","name":"HopfieldState.weights_hermitian","line":252,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.weights_hermitian","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.weights_hermitian\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">weights_hermitian</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.weightsMatrix\">weightsMatrix</a> <span class=\"fn\">net</span>)</span>.<a href=\"./Mathlib/LinearAlgebra/Matrix/Hermitian.html#Matrix.IsHermitian\">IsHermitian</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L236-L250","name":"HopfieldState.weights_symmetric","line":236,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.weights_symmetric","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.weights_symmetric\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">weights_symmetric</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar\">InvolutiveStar</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_star_triv</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star.star\">star</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.weightsMatrix\">weightsMatrix</a> <span class=\"fn\">net</span>)</span>.<a href=\"./Mathlib/LinearAlgebra/Matrix/Symmetric.html#Matrix.IsSymm\">IsSymm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L231-L234","name":"HopfieldState.weightsMatrix","line":231,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.weightsMatrix","doc":"Convenience accessor for the underlying weights matrix.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.weightsMatrix\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">weightsMatrix</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">net</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L229-L229","name":"HopfieldState.HopfieldNetwork.thresholds","line":229,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork.thresholds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork.thresholds\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">HopfieldNetwork</span>.<span class=\"name\">thresholds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L228-L228","name":"HopfieldState.HopfieldNetwork.weights","line":228,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork.weights","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork.weights\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">HopfieldNetwork</span>.<span class=\"name\">weights</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/LinearAlgebra/Matrix/Hermitian.html#Matrix.IsHermitian\">IsHermitian</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matrix/Diagonal.html#Matrix.diag\">diag</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L227-L227","name":"HopfieldState.HopfieldNetwork.mk","line":227,"kind":"ctor","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork.mk\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">HopfieldNetwork</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weights</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/LinearAlgebra/Matrix/Hermitian.html#Matrix.IsHermitian\">IsHermitian</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matrix/Diagonal.html#Matrix.diag\">diag</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thresholds</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L221-L229","name":"HopfieldState.HopfieldNetwork","line":221,"kind":"structure","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork","doc":"`HopfieldNetwork` consists of:\n1. A real-valued weight matrix `weights` of size `n × n`, which is Hermitian (symmetric in ℝ)\n   and has zero diagonal.\n2. A threshold vector `thresholds` with one real value per neuron.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.HopfieldNetwork\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">HopfieldNetwork</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L217-L219","name":"HopfieldState.toRealVector_apply","line":217,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.toRealVector_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.toRealVector_apply\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">toRealVector_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.toRealVector\">toRealVector</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">i</span>)</span>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toReal\">toReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L210-L215","name":"HopfieldState.toRealVector","line":210,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.toRealVector","doc":"Convert a Hopfield state to a real vector of dimension `n`, where\neach coordinate is either `+1` or `-1`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.toRealVector\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">toRealVector</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L159-L208","name":"HopfieldState.instMetricSpace","line":159,"kind":"instance","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.instMetricSpace","doc":"We endow `HopfieldState n` with the Hamming distance as a `MetricSpace`.\n`dist x y` is the number of coordinates in which `x` and `y` differ.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.instMetricSpace\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">instMetricSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">(<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L154-L155","name":"HopfieldState.instDecidableEq","line":154,"kind":"instance","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.instDecidableEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.instDecidableEq\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">instDecidableEq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L151-L151","name":"HopfieldState.hopfieldState_ext_iff","line":151,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.hopfieldState_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.hopfieldState_ext_iff\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">hopfieldState_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L151-L152","name":"HopfieldState.hopfieldState_ext","line":151,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState.hopfieldState_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState.hopfieldState_ext\"><span class=\"name\">HopfieldState</span>.<span class=\"name\">hopfieldState_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\">HopfieldState</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L142-L145","name":"HopfieldState","line":142,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#HopfieldState","doc":"A Hopfield state for `n` neurons is a function from `Fin n` to `SpinState`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#HopfieldState\"><span class=\"name\">HopfieldState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L129-L138","name":"SpinState.spinStateEquivZmod2","line":129,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.spinStateEquivZmod2","doc":"Equivalence between `SpinState` and `ZMod 2`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.spinStateEquivZmod2\"><span class=\"name\">SpinState</span>.<span class=\"name\">spinStateEquivZmod2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./HopfieldNet/SpinState/Basic.html#SpinState\">SpinState</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L122-L127","name":"SpinState.spinStateEquivBool","line":122,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.spinStateEquivBool","doc":"Equivalence between `SpinState` and `Bool`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.spinStateEquivBool\"><span class=\"name\">SpinState</span>.<span class=\"name\">spinStateEquivBool</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./HopfieldNet/SpinState/Basic.html#SpinState\">SpinState</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L112-L120","name":"SpinState.eq_of_toReal_eq","line":112,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.eq_of_toReal_eq","doc":"If two spin states have the same real value, they must be equal.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.eq_of_toReal_eq\"><span class=\"name\">SpinState</span>.<span class=\"name\">eq_of_toReal_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <a href=\"./HopfieldNet/SpinState/Basic.html#SpinState\">SpinState</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s₂</span>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toReal\">toReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L100-L110","name":"SpinState.mul_toBool","line":100,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.mul_toBool","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.mul_toBool\"><span class=\"name\">SpinState</span>.<span class=\"name\">mul_toBool</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <a href=\"./HopfieldNet/SpinState/Basic.html#SpinState\">SpinState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">(<span class=\"fn\">s₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">s₂</span>).<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toBool\">toBool</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>) <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toBool\">toBool</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s₂</span>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toBool\">toBool</a></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L96-L98","name":"SpinState.down_up_diff","line":96,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.down_up_diff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.down_up_diff\"><span class=\"name\">SpinState</span>.<span class=\"name\">down_up_diff</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.down\">down</a>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.up\">up</a>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L92-L94","name":"SpinState.up_down_diff","line":92,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.up_down_diff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.up_down_diff\"><span class=\"name\">SpinState</span>.<span class=\"name\">up_down_diff</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.up\">up</a>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.down\">down</a>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L88-L90","name":"SpinState.up_down_distinct","line":88,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.up_down_distinct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.up_down_distinct\"><span class=\"name\">SpinState</span>.<span class=\"name\">up_down_distinct</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.up\">up</a>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toReal\">toReal</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.down\">down</a>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toReal\">toReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L84-L86","name":"SpinState.toBool_ofBool","line":84,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.toBool_ofBool","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toBool_ofBool\"><span class=\"name\">SpinState</span>.<span class=\"name\">toBool_ofBool</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./HopfieldNet/SpinState/Basic.html#SpinState\">SpinState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.ofBool\">ofBool</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toBool\">toBool</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L80-L82","name":"SpinState.ofBool_toBool","line":80,"kind":"theorem","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.ofBool_toBool","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.ofBool_toBool\"><span class=\"name\">SpinState</span>.<span class=\"name\">ofBool_toBool</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.ofBool\">ofBool</a> <span class=\"fn\">b</span>)</span>.<a href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toBool\">toBool</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L74-L78","name":"SpinState.ofBool","line":74,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.ofBool","doc":"Inverse of `toBool`: `true ↦ up`, `false ↦ down`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.ofBool\"><span class=\"name\">SpinState</span>.<span class=\"name\">ofBool</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./HopfieldNet/SpinState/Basic.html#SpinState\">SpinState</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L67-L72","name":"SpinState.toBool","line":67,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.toBool","doc":"Interpret `up` as `true` and `down` as `false`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toBool\"><span class=\"name\">SpinState</span>.<span class=\"name\">toBool</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/SpinState/Basic.html#SpinState\">SpinState</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L46-L65","name":"SpinState.instCommGroup","line":46,"kind":"instance","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.instCommGroup","doc":"`SpinState` forms a commutative group under multiplication,\nwith `up` as the identity element. This group is isomorphic to `ℤ₂`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.instCommGroup\"><span class=\"name\">SpinState</span>.<span class=\"name\">instCommGroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <a href=\"./HopfieldNet/SpinState/Basic.html#SpinState\">SpinState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L41-L44","name":"SpinState.toReal","line":41,"kind":"def","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.toReal","doc":"Map `SpinState` to real numbers: `up ↦ 1`, `down ↦ -1`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.toReal\"><span class=\"name\">SpinState</span>.<span class=\"name\">toReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./HopfieldNet/SpinState/Basic.html#SpinState\">SpinState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L37-L37","name":"instFintypeSpinState","line":37,"kind":"instance","docLink":"./HopfieldNet/SpinState/Basic.html#instFintypeSpinState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#instFintypeSpinState\"><span class=\"name\">instFintypeSpinState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <a href=\"./HopfieldNet/SpinState/Basic.html#SpinState\">SpinState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L37-L37","name":"instInhabitedSpinState","line":37,"kind":"instance","docLink":"./HopfieldNet/SpinState/Basic.html#instInhabitedSpinState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#instInhabitedSpinState\"><span class=\"name\">instInhabitedSpinState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./HopfieldNet/SpinState/Basic.html#SpinState\">SpinState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L37-L37","name":"instDecidableEqSpinState","line":37,"kind":"instance","docLink":"./HopfieldNet/SpinState/Basic.html#instDecidableEqSpinState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#instDecidableEqSpinState\"><span class=\"name\">instDecidableEqSpinState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./HopfieldNet/SpinState/Basic.html#SpinState\">SpinState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L36-L36","name":"SpinState.down","line":36,"kind":"ctor","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.down","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.down\"><span class=\"name\">SpinState</span>.<span class=\"name\">down</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./HopfieldNet/SpinState/Basic.html#SpinState\">SpinState</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L35-L35","name":"SpinState.up","line":35,"kind":"ctor","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState.up","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState.up\"><span class=\"name\">SpinState</span>.<span class=\"name\">up</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./HopfieldNet/SpinState/Basic.html#SpinState\">SpinState</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/SpinState/Basic.lean#L28-L37","name":"SpinState","line":28,"kind":"inductive","docLink":"./HopfieldNet/SpinState/Basic.html#SpinState","doc":"`SpinState` represents a binary spin, either up or down.\nWe interpret this as `+1` or `-1`, respectively, in `toReal`.\nThis structure is isomorphic to `Bool` and `Fin 2`, and also admits\na commutative group structure isomorphic to `ℤ₂` under multiplication.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/SpinState/Basic.html#SpinState\"><span class=\"name\">SpinState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}