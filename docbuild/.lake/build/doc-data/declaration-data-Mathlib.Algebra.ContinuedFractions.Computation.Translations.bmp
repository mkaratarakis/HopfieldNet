{"name":"Mathlib.Algebra.ContinuedFractions.Computation.Translations","instances":[],"imports":["Init","Mathlib.Algebra.ContinuedFractions.Computation.Basic","Mathlib.Algebra.ContinuedFractions.Translations","Mathlib.Algebra.Order.Floor.Ring"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L318-L328","name":"GenContFract.convs'_succ","line":318,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.convs'_succ","doc":"The recurrence relation for the `convs'` of the continued fraction expansion\nof an element `v` of `K` in terms of the convergents of the inverse of its fractional part.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.convs'_succ\"><span class=\"name\">GenContFract</span>.<span class=\"name\">convs'_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.convs'\">convs'</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.floor\">⌊</a><span class=\"fn\">v</span><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.floor\">⌋</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.fract\">Int.fract</a> <span class=\"fn\">v</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.convs'\">convs'</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L306-L314","name":"GenContFract.convs'_of_int","line":306,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.convs'_of_int","doc":"If `a` is an integer, then the `convs'` of its continued fraction expansion\nare all equal to `a`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.convs'_of_int\"><span class=\"name\">GenContFract</span>.<span class=\"name\">convs'_of_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.convs'\">convs'</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L298-L302","name":"GenContFract.of_s_tail","line":298,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_s_tail","doc":"This expresses the tail of the coefficient sequence of the `GenContFract.of` an element `v` of\n`K` as the coefficient sequence of that of the inverse of the fractional part of `v`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_s_tail\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_s_tail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.s\">s</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.tail\">tail</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.fract\">Int.fract</a> <span class=\"fn\">v</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.s\">s</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L280-L296","name":"GenContFract.of_s_succ","line":280,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_s_succ","doc":"Recurrence for the `GenContFract.of` an element `v` of `K` in terms of that of the inverse of\nthe fractional part of `v`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_s_succ\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_s_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.s\">s</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.fract\">Int.fract</a> <span class=\"fn\">v</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.s\">s</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L268-L276","name":"GenContFract.of_s_of_int","line":268,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_s_of_int","doc":"If `a` is an integer, then the coefficient sequence of its continued fraction is empty.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_s_of_int\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_s_of_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.s\">s</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.nil\">Stream'.Seq.nil</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L258-L263","name":"GenContFract.of_s_head","line":258,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_s_head","doc":"This gives the first pair of coefficients of the continued fraction of a non-integer `v`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_s_head\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_s_head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.fract\">Int.fract</a> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.s\">s</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.mk\">{</a> <span class=\"fn\">a</span> := <span class=\"fn\">1</span>, <span class=\"fn\">b</span> := <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.floor\">⌊</a><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.fract\">Int.fract</a> <span class=\"fn\">v</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.floor\">⌋</a></span> <a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.mk\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L249-L256","name":"GenContFract.of_s_head_aux","line":249,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_s_head_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_s_head_aux\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_s_head_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.s\">s</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">1</span>)</span>.<a href=\"./Init/Data/Option/Basic.html#Option.bind\">bind</a></span> (<a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>) =&gt; <a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.mk\">{</a> <span class=\"fn\">a</span> := <span class=\"fn\">1</span>, <span class=\"fn\">b</span> := <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.b\">b</a></span></span> <a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.mk\">}</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L234-L245","name":"GenContFract.get?_of_eq_some_of_get?_intFractPair_stream_fr_ne_zero","line":234,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.get?_of_eq_some_of_get?_intFractPair_stream_fr_ne_zero","doc":"Shows how the entries of the sequence of the computed continued fraction can be obtained by the\nfractional parts of the stream of integer and fractional parts.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.get?_of_eq_some_of_get?_intFractPair_stream_fr_ne_zero\"><span class=\"name\">GenContFract</span>.<span class=\"name\">get?_of_eq_some_of_get?_intFractPair_stream_fr_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ifp_n</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stream_nth_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp_n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nth_fr_ne_zero</span> : <span class=\"fn\"><span class=\"fn\">ifp_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.s\">s</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.mk\">{</a> <span class=\"fn\">a</span> := <span class=\"fn\">1</span>, <span class=\"fn\">b</span> := <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.of\">IntFractPair.of</a> <span class=\"fn\"><span class=\"fn\">ifp_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.b\">b</a></span></span> <a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.mk\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L225-L232","name":"GenContFract.get?_of_eq_some_of_succ_get?_intFractPair_stream","line":225,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.get?_of_eq_some_of_succ_get?_intFractPair_stream","doc":"Shows how the entries of the sequence of the computed continued fraction can be obtained by the\ninteger parts of the stream of integer and fractional parts.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.get?_of_eq_some_of_succ_get?_intFractPair_stream\"><span class=\"name\">GenContFract</span>.<span class=\"name\">get?_of_eq_some_of_succ_get?_intFractPair_stream</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ifp_succ_n</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stream_succ_nth_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp_succ_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.s\">s</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.mk\">{</a> <span class=\"fn\">a</span> := <span class=\"fn\">1</span>, <span class=\"fn\">b</span> := <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">ifp_succ_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.b\">b</a></span></span> <a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.mk\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L215-L223","name":"GenContFract.IntFractPair.exists_succ_get?_stream_of_gcf_of_get?_eq_some","line":215,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.exists_succ_get?_stream_of_gcf_of_get?_eq_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.exists_succ_get?_stream_of_gcf_of_get?_eq_some\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">exists_succ_get?_stream_of_gcf_of_get?_eq_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">gp_n</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair\">Pair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s_nth_eq</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.s\">s</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">gp_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">ifp</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">ifp</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.b\">b</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">gp_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.b\">b</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L199-L202","name":"GenContFract.of_terminatedAt_n_iff_succ_nth_intFractPair_stream_eq_none","line":199,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_terminatedAt_n_iff_succ_nth_intFractPair_stream_eq_none","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_terminatedAt_n_iff_succ_nth_intFractPair_stream_eq_none\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_terminatedAt_n_iff_succ_nth_intFractPair_stream_eq_none</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.TerminatedAt\">TerminatedAt</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Option.none\">none</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L195-L197","name":"GenContFract.of_terminatedAt_iff_intFractPair_seq1_terminatedAt","line":195,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_terminatedAt_iff_intFractPair_seq1_terminatedAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_terminatedAt_iff_intFractPair_seq1_terminatedAt\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_terminatedAt_iff_intFractPair_seq1_terminatedAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.TerminatedAt\">TerminatedAt</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.seq1\">IntFractPair.seq1</a> <span class=\"fn\">v</span>)</span>.2</span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.TerminatedAt\">TerminatedAt</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L182-L184","name":"GenContFract.IntFractPair.get?_seq1_eq_succ_get?_stream","line":182,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.get?_seq1_eq_succ_get?_stream","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.get?_seq1_eq_succ_get?_stream\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">get?_seq1_eq_succ_get?_stream</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.seq1\">IntFractPair.seq1</a> <span class=\"fn\">v</span>)</span>.2</span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L161-L164","name":"GenContFract.of_h_eq_floor","line":161,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_h_eq_floor","doc":"The head term of the gcf of `v` is `⌊v⌋`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_h_eq_floor\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_h_eq_floor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.h\">h</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.floor\">⌊</a><span class=\"fn\">v</span><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.floor\">⌋</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L157-L159","name":"GenContFract.of_h_eq_intFractPair_seq1_fst_b","line":157,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_h_eq_intFractPair_seq1_fst_b","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.of_h_eq_intFractPair_seq1_fst_b\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_h_eq_intFractPair_seq1_fst_b</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.h\">h</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.seq1\">IntFractPair.seq1</a> <span class=\"fn\">v</span>)</span>.1</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.b\">b</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L152-L155","name":"GenContFract.IntFractPair.seq1_fst_eq_of","line":152,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.seq1_fst_eq_of","doc":"The head term of the sequence with head of `v` is just the integer part of `v`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.seq1_fst_eq_of\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">seq1_fst_eq_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.seq1\">IntFractPair.seq1</a> <span class=\"fn\">v</span>)</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.of\">IntFractPair.of</a> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L118-L137","name":"GenContFract.IntFractPair.stream_succ","line":118,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.stream_succ","doc":"A recurrence relation that expresses the `(n+1)`th term of the stream of `IntFractPair`s\nof `v` for non-integer `v` in terms of the `n`th term of the stream associated to\nthe inverse of the fractional part of `v`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.stream_succ\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">stream_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.fract\">Int.fract</a> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.fract\">Int.fract</a> <span class=\"fn\">v</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L107-L116","name":"GenContFract.IntFractPair.exists_succ_nth_stream_of_fr_zero","line":107,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.exists_succ_nth_stream_of_fr_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.exists_succ_nth_stream_of_fr_zero\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">exists_succ_nth_stream_of_fr_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ifp_succ_n</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stream_succ_nth_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp_succ_n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">succ_nth_fr_eq_zero</span> : <span class=\"fn\"><span class=\"fn\">ifp_succ_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">ifp_n</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp_n</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">ifp_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">ifp_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#Int.floor\">⌋</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L97-L105","name":"GenContFract.IntFractPair.stream_succ_of_int","line":97,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.stream_succ_of_int","doc":"The stream of `IntFractPair`s of an integer stops after the first term.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.stream_succ_of_int\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">stream_succ_of_int</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">(↑<span class=\"fn\">a</span>)</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Option.none\">none</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L91-L95","name":"GenContFract.IntFractPair.stream_succ_of_some","line":91,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.stream_succ_of_some","doc":"An easier to use version of one direction of\n`GenContFract.IntFractPair.succ_nth_stream_eq_some_iff`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.stream_succ_of_some\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">stream_succ_of_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'</span> : <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.of\">IntFractPair.of</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L81-L89","name":"GenContFract.IntFractPair.succ_nth_stream_eq_some_iff","line":81,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.succ_nth_stream_eq_some_iff","doc":"Gives a recurrence to compute the `n + 1`th value of the sequence of integer and fractional\nparts of a value in case of non-termination.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.succ_nth_stream_eq_some_iff\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">succ_nth_stream_eq_some_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ifp_succ_n</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp_succ_n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">ifp_n</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp_n</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">ifp_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.of\">IntFractPair.of</a> <span class=\"fn\"><span class=\"fn\">ifp_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ifp_succ_n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L72-L79","name":"GenContFract.IntFractPair.succ_nth_stream_eq_none_iff","line":72,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.succ_nth_stream_eq_none_iff","doc":"Gives a recurrence to compute the `n + 1`th value of the sequence of integer and fractional\nparts of a value in case of termination.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.succ_nth_stream_eq_none_iff\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">succ_nth_stream_eq_none_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Option.none\">none</a> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Option.none\">none</a> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">ifp</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">ifp</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L65-L70","name":"GenContFract.IntFractPair.stream_eq_none_of_fr_eq_zero","line":65,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.stream_eq_none_of_fr_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.stream_eq_none_of_fr_eq_zero\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">stream_eq_none_of_fr_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ifp_n</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stream_nth_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp_n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nth_fr_eq_zero</span> : <span class=\"fn\"><span class=\"fn\">ifp_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Option.none\">none</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean#L60-L61","name":"GenContFract.IntFractPair.stream_zero","line":60,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.stream_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Translations.html#GenContFract.IntFractPair.stream_zero\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">stream_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.of\">IntFractPair.of</a> <span class=\"fn\">v</span>)</span></span></div></div>"}]}