{"name":"Mathlib.SetTheory.Ordinal.NaturalOps","instances":[{"typeNames":["NatOrdinal"],"name":"instNatOrdinalZero","className":"Zero"},{"typeNames":["NatOrdinal"],"name":"instNatOrdinalInhabited","className":"Inhabited"},{"typeNames":["NatOrdinal"],"name":"instNatOrdinalOne","className":"One"},{"typeNames":["NatOrdinal"],"name":"instNatOrdinalWellFoundedRelation","className":"WellFoundedRelation"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instLinearOrder","className":"LinearOrder"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instSuccOrder","className":"SuccOrder"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instOrderBot","className":"OrderBot"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instNoMaxOrder","className":"NoMaxOrder"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instZeroLEOneClass","className":"ZeroLEOneClass"},{"typeNames":["OfNat.ofNat"],"name":"NatOrdinal.instNeZeroOne","className":"NeZero"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.uncountable","className":"Uncountable"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instWellFoundedLT","className":"IsWellFounded"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instConditionallyCompleteLinearOrderBot","className":"ConditionallyCompleteLinearOrderBot"},{"typeNames":["Set.Elem"],"name":"NatOrdinal.small_Iio","className":"Small"},{"typeNames":["Set.Elem"],"name":"NatOrdinal.small_Iic","className":"Small"},{"typeNames":["Set.Elem"],"name":"NatOrdinal.small_Ico","className":"Small"},{"typeNames":["Set.Elem"],"name":"NatOrdinal.small_Icc","className":"Small"},{"typeNames":["Set.Elem"],"name":"NatOrdinal.small_Ioo","className":"Small"},{"typeNames":["Set.Elem"],"name":"NatOrdinal.small_Ioc","className":"Small"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instAdd","className":"Add"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instSuccAddOrder","className":"SuccAddOrder"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instAddLeftStrictMono","className":"CovariantClass"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instAddLeftMono","className":"CovariantClass"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instAddLeftReflectLE","className":"ContravariantClass"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instAddCommMonoid","className":"AddCommMonoid"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instIsOrderedCancelAddMonoid","className":"IsOrderedCancelAddMonoid"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instAddMonoidWithOne","className":"AddMonoidWithOne"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instCharZero","className":"CharZero"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instMul","className":"Mul"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instCommSemiring","className":"CommSemiring"},{"typeNames":["NatOrdinal"],"name":"NatOrdinal.instIsOrderedRing","className":"IsOrderedRing"}],"imports":["Init","Mathlib.SetTheory.Ordinal.Family","Mathlib.Tactic.Abel"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L728-L739","name":"Ordinal.mul_le_nmul","line":728,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.mul_le_nmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.mul_le_nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_le_nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L725-L726","name":"Ordinal.add_one_nmul","line":725,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.add_one_nmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.add_one_nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_one_nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L722-L723","name":"Ordinal.nmul_add_one","line":722,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_add_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L720-L720","name":"Ordinal.succ_nmul","line":720,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.succ_nmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.succ_nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">succ_nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L718-L718","name":"Ordinal.nmul_succ","line":718,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L715-L716","name":"Ordinal.nadd_one_nmul","line":715,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_one_nmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_one_nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_one_nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L712-L713","name":"Ordinal.nmul_nadd_one","line":712,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L709-L710","name":"Ordinal.nmul_eq_mul","line":709,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_eq_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_eq_mul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_eq_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> (<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">b</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L701-L703","name":"NatOrdinal.instIsOrderedRing","line":701,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instIsOrderedRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instIsOrderedRing\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instIsOrderedRing</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsOrderedRing\">IsOrderedRing</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L688-L699","name":"NatOrdinal.instCommSemiring","line":688,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instCommSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instCommSemiring\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instCommSemiring</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L684-L686","name":"NatOrdinal.nmul_nadd_le","line":684,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.nmul_nadd_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.nmul_nadd_le\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">nmul_nadd_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">a' </span><span class=\"fn\">b'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L680-L682","name":"NatOrdinal.mul_add_lt","line":680,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.mul_add_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.mul_add_lt\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">mul_add_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">a' </span><span class=\"fn\">b'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L676-L678","name":"NatOrdinal.mul_le_iff","line":676,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.mul_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.mul_le_iff\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">mul_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">a'</span> &lt; <span class=\"fn\">a</span>, <span class=\"fn\">∀ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L672-L674","name":"NatOrdinal.lt_mul_iff","line":672,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.lt_mul_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.lt_mul_iff\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">lt_mul_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">a'</span> &lt; <span class=\"fn\">a</span>, <span class=\"fn\">∃ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L669-L670","name":"NatOrdinal.instMul","line":669,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instMul\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instMul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L651-L661","name":"Ordinal.nmul_assoc","line":651,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_assoc\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L645-L649","name":"Ordinal.lt_nmul_iff₃'","line":645,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nmul_iff₃'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nmul_iff₃'\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_nmul_iff₃'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ <span class=\"fn\">a'</span> &lt; <span class=\"fn\">a</span>,\n    <span class=\"fn\">∃ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>,\n      <span class=\"fn\">∃ <span class=\"fn\">c'</span> &lt; <span class=\"fn\">c</span>,\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>           <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L632-L635","name":"Ordinal.nmul_le_iff₃","line":632,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_iff₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_iff₃\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_le_iff₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">a'</span> &lt; <span class=\"fn\">a</span>,\n    <span class=\"fn\">∀ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>,\n      <span class=\"fn\">∀ <span class=\"fn\">c'</span> &lt; <span class=\"fn\">c</span>,\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a>           <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L615-L630","name":"Ordinal.lt_nmul_iff₃","line":615,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nmul_iff₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nmul_iff₃\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_nmul_iff₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ <span class=\"fn\">a'</span> &lt; <span class=\"fn\">a</span>,\n    <span class=\"fn\">∃ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>,\n      <span class=\"fn\">∃ <span class=\"fn\">c'</span> &lt; <span class=\"fn\">c</span>,\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>           <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L607-L613","name":"Ordinal.nmul_nadd_le₃'","line":607,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_le₃'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_le₃'\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd_le₃'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">a' </span><span class=\"fn\">b' </span><span class=\"fn\">c'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L595-L598","name":"Ordinal.nmul_nadd_le₃","line":595,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_le₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_le₃\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd_le₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">a' </span><span class=\"fn\">b' </span><span class=\"fn\">c'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L590-L593","name":"Ordinal.nmul_nadd_lt₃","line":590,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_lt₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_lt₃\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd_lt₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">a' </span><span class=\"fn\">b' </span><span class=\"fn\">c'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c'</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L587-L588","name":"Ordinal.nadd_nmul","line":587,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_nmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L551-L585","name":"Ordinal.nmul_nadd","line":551,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L547-L549","name":"Ordinal.nmul_le_nmul_right","line":547,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_nmul_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_nmul_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_le_nmul_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L542-L545","name":"Ordinal.nmul_le_nmul_left","line":542,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_nmul_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_nmul_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_le_nmul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L539-L540","name":"Ordinal.nmul_lt_nmul_of_pos_right","line":539,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_lt_nmul_of_pos_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_lt_nmul_of_pos_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_lt_nmul_of_pos_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L536-L537","name":"Ordinal.nmul_lt_nmul_of_pos_left","line":536,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_lt_nmul_of_pos_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_lt_nmul_of_pos_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_lt_nmul_of_pos_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L533-L534","name":"Ordinal.one_nmul","line":533,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.one_nmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.one_nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">one_nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a> <span class=\"fn\">1</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L521-L531","name":"Ordinal.nmul_one","line":521,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L518-L519","name":"Ordinal.zero_nmul","line":518,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.zero_nmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.zero_nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">zero_nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L513-L516","name":"Ordinal.nmul_zero","line":513,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L504-L511","name":"Ordinal.nmul_comm","line":504,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_comm\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L501-L502","name":"Ordinal.nmul_le_iff","line":501,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_le_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">a'</span> &lt; <span class=\"fn\">a</span>, <span class=\"fn\">∀ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L493-L499","name":"Ordinal.lt_nmul_iff","line":493,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nmul_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nmul_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_nmul_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">a'</span> &lt; <span class=\"fn\">a</span>, <span class=\"fn\">∃ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L485-L491","name":"Ordinal.nmul_nadd_le","line":485,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">a' </span><span class=\"fn\">b'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L480-L483","name":"Ordinal.nmul_nadd_lt","line":480,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_nadd_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_nadd_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">a' </span><span class=\"fn\">b'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L467-L470","name":"Ordinal.nmul_def","line":467,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul_def\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#InfSet.sInf\">sInf</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">c</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">∀ <span class=\"fn\">a'</span> &lt; <span class=\"fn\">a</span>, <span class=\"fn\">∀ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\">nmul</a></span> <span class=\"fn\">b'</span>)</span></span></span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L460-L461","name":"Ordinal.nadd_right_comm","line":460,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_right_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_right_comm\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_right_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L457-L458","name":"Ordinal.nadd_left_comm","line":457,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_left_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_left_comm\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_left_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L454-L455","name":"Ordinal.le_nadd_right","line":454,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_nadd_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_nadd_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_nadd_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L452-L452","name":"Ordinal.le_self_nadd","line":452,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_self_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_self_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_self_nadd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L449-L450","name":"Ordinal.le_nadd_left","line":449,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_nadd_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_nadd_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_nadd_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L447-L447","name":"Ordinal.le_nadd_self","line":447,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_nadd_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_nadd_self\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_nadd_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L443-L445","name":"Ordinal.nadd_right_cancel_iff","line":443,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_right_cancel_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_right_cancel_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_right_cancel_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L439-L441","name":"Ordinal.nadd_left_cancel_iff","line":439,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_left_cancel_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_left_cancel_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_left_cancel_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L436-L437","name":"Ordinal.nadd_right_cancel","line":436,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_right_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_right_cancel\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_right_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L433-L434","name":"Ordinal.nadd_left_cancel","line":433,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_left_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_left_cancel\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_left_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> → <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L430-L431","name":"Ordinal.nadd_lt_nadd_of_le_of_lt","line":430,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_of_le_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_of_le_of_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_lt_nadd_of_le_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">d</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L427-L428","name":"Ordinal.nadd_lt_nadd_of_lt_of_le","line":427,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_of_lt_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_of_lt_of_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_lt_nadd_of_lt_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L424-L425","name":"Ordinal.nadd_lt_nadd","line":424,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_lt_nadd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">d</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L421-L422","name":"Ordinal.nadd_le_nadd","line":421,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_le_nadd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L417-L419","name":"Ordinal.nadd_le_nadd_iff_right","line":417,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_iff_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_le_nadd_iff_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L413-L415","name":"Ordinal.nadd_le_nadd_iff_left","line":413,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_iff_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_iff_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_le_nadd_iff_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L409-L411","name":"Ordinal.nadd_lt_nadd_iff_right","line":409,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_iff_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_lt_nadd_iff_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L405-L407","name":"Ordinal.nadd_lt_nadd_iff_left","line":405,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_iff_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_iff_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_lt_nadd_iff_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L402-L403","name":"Ordinal.le_of_nadd_le_nadd_right","line":402,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_of_nadd_le_nadd_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_of_nadd_le_nadd_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_of_nadd_le_nadd_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span> → <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L399-L400","name":"Ordinal.le_of_nadd_le_nadd_left","line":399,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_of_nadd_le_nadd_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.le_of_nadd_le_nadd_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_of_nadd_le_nadd_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> → <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L396-L397","name":"Ordinal.lt_of_nadd_lt_nadd_right","line":396,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_of_nadd_lt_nadd_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_of_nadd_lt_nadd_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_of_nadd_lt_nadd_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span> → <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L393-L394","name":"Ordinal.lt_of_nadd_lt_nadd_left","line":393,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_of_nadd_lt_nadd_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_of_nadd_lt_nadd_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_of_nadd_lt_nadd_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> → <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L388-L391","name":"Ordinal.toNatOrdinal_natCast","line":388,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_natCast\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L385-L386","name":"Ordinal.nadd_eq_add","line":385,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_eq_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_eq_add\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_eq_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> (<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">b</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L372-L375","name":"NatOrdinal.instCharZero","line":372,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instCharZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instCharZero\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instCharZero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L365-L370","name":"NatOrdinal.toOrdinal_natCast","line":365,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_natCast\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">toOrdinal</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L362-L363","name":"NatOrdinal.instAddMonoidWithOne","line":362,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instAddMonoidWithOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instAddMonoidWithOne\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instAddMonoidWithOne</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L358-L360","name":"NatOrdinal.instIsOrderedCancelAddMonoid","line":358,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instIsOrderedCancelAddMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instIsOrderedCancelAddMonoid\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instIsOrderedCancelAddMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#IsOrderedCancelAddMonoid\">IsOrderedCancelAddMonoid</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L349-L356","name":"NatOrdinal.instAddCommMonoid","line":349,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instAddCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instAddCommMonoid\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instAddCommMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L344-L347","name":"NatOrdinal.instAddLeftReflectLE","line":344,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instAddLeftReflectLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instAddLeftReflectLE\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instAddLeftReflectLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Unbundled/Defs.html#AddLeftReflectLE\">AddLeftReflectLE</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L341-L342","name":"NatOrdinal.instAddLeftMono","line":341,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instAddLeftMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instAddLeftMono\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instAddLeftMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Unbundled/Defs.html#AddLeftMono\">AddLeftMono</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L338-L339","name":"NatOrdinal.instAddLeftStrictMono","line":338,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instAddLeftStrictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instAddLeftStrictMono\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instAddLeftStrictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Unbundled/Defs.html#AddLeftStrictMono\">AddLeftStrictMono</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L334-L336","name":"NatOrdinal.add_le_iff","line":334,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.add_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.add_le_iff\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">add_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">(∀ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ <span class=\"fn\">c'</span> &lt; <span class=\"fn\">c</span>, <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L330-L332","name":"NatOrdinal.lt_add_iff","line":330,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.lt_add_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.lt_add_iff\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">lt_add_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">(∃ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ <span class=\"fn\">c'</span> &lt; <span class=\"fn\">c</span>, <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L328-L328","name":"NatOrdinal.instSuccAddOrder","line":328,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instSuccAddOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instSuccAddOrder\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instSuccAddOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/SuccPred.html#SuccAddOrder\">SuccAddOrder</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L327-L327","name":"NatOrdinal.instAdd","line":327,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instAdd\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L311-L319","name":"Ordinal.add_le_nadd","line":311,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.add_le_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.add_le_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_le_nadd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L308-L309","name":"Ordinal.nat_nadd","line":308,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nat_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nat_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nat_nadd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L302-L306","name":"Ordinal.nadd_nat","line":302,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_nat\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L300-L300","name":"Ordinal.succ_nadd","line":300,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.succ_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.succ_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">succ_nadd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L298-L298","name":"Ordinal.nadd_succ","line":298,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L295-L296","name":"Ordinal.one_nadd","line":295,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.one_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.one_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">one_nadd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a> <span class=\"fn\">1</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L287-L293","name":"Ordinal.nadd_one","line":287,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L284-L285","name":"Ordinal.zero_nadd","line":284,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.zero_nadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.zero_nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">zero_nadd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L275-L282","name":"Ordinal.nadd_zero","line":275,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L266-L273","name":"Ordinal.nadd_assoc","line":266,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_assoc\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L236-L250","name":"Ordinal.blsub_nadd_of_mono","line":236,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.blsub_nadd_of_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.blsub_nadd_of_mono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">blsub_nadd_of_mono</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) → <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">∀ {<span class=\"fn\">i </span><span class=\"fn\">j</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>} (<span class=\"fn\">hi</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span>) (<span class=\"fn\">hj</span> : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span>), <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">hj</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Family.html#Ordinal.blsub\">blsub</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Family.html#Ordinal.blsub\">blsub</a></span> <span class=\"fn\">fun (<span class=\"fn\">a'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">ha'</span> : <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">⋯</span></span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Family.html#Ordinal.blsub\">blsub</a></span> <span class=\"fn\">fun (<span class=\"fn\">b'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) (<span class=\"fn\">hb'</span> : <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b'</span>)</span> <span class=\"fn\">⋯</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L231-L234","name":"Ordinal.nadd_comm","line":231,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_comm\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L224-L227","name":"Ordinal.nadd_le_nadd_right","line":224,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_le_nadd_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L219-L222","name":"Ordinal.nadd_le_nadd_left","line":219,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_nadd_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_le_nadd_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L216-L217","name":"Ordinal.nadd_lt_nadd_right","line":216,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_lt_nadd_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L213-L214","name":"Ordinal.nadd_lt_nadd_left","line":213,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_lt_nadd_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_lt_nadd_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L209-L211","name":"Ordinal.nadd_le_iff","line":209,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd_le_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">(∀ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ <span class=\"fn\">c'</span> &lt; <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c'</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L205-L207","name":"Ordinal.lt_nadd_iff","line":205,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nadd_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.lt_nadd_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_nadd_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">(∃ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b'</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ <span class=\"fn\">c'</span> &lt; <span class=\"fn\">c</span>, <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\">nadd</a></span> <span class=\"fn\">c'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L200-L201","name":"NaturalOps.«term_⨳_»","line":200,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NaturalOps.«term_⨳_»","doc":"Natural multiplication on ordinals `a ⨳ b`, also known as the Hessenberg product, is recursively\ndefined as the least ordinal such that `a ⨳ b ♯ a' ⨳ b'` is greater than `a' ⨳ b ♯ a ⨳ b'` for all\n`a' < a` and `b < b'`. In contrast to normal ordinal multiplication, it is commutative and\ndistributive (over natural addition).\n\nNatural multiplication can equivalently be characterized as the ordinal resulting from multiplying\nthe Cantor normal forms of `a` and `b` as if they were polynomials in `ω`. Addition of exponents is\ndone via natural addition. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NaturalOps.«term_⨳_»\"><span class=\"name\">NaturalOps</span>.<span class=\"name\">«term_⨳_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L188-L198","name":"Ordinal.nmul","line":188,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul","doc":"Natural multiplication on ordinals `a ⨳ b`, also known as the Hessenberg product, is recursively\ndefined as the least ordinal such that `a ⨳ b ♯ a' ⨳ b'` is greater than `a' ⨳ b ♯ a ⨳ b'` for all\n`a' < a` and `b < b'`. In contrast to normal ordinal multiplication, it is commutative and\ndistributive (over natural addition).\n\nNatural multiplication can equivalently be characterized as the ordinal resulting from multiplying\nthe Cantor normal forms of `a` and `b` as if they were polynomials in `ω`. Addition of exponents is\ndone via natural addition. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nmul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L183-L184","name":"NaturalOps.«term_♯_»","line":183,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NaturalOps.«term_♯_»","doc":"Natural addition on ordinals `a ♯ b`, also known as the Hessenberg sum, is recursively defined\nas the least ordinal greater than `a' ♯ b` and `a ♯ b'` for all `a' < a` and `b' < b`. In contrast\nto normal ordinal addition, it is commutative.\n\nNatural addition can equivalently be characterized as the ordinal resulting from adding up\ncorresponding coefficients in the Cantor normal forms of `a` and `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NaturalOps.«term_♯_»\"><span class=\"name\">NaturalOps</span>.<span class=\"name\">«term_♯_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L172-L181","name":"Ordinal.nadd","line":172,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd","doc":"Natural addition on ordinals `a ♯ b`, also known as the Hessenberg sum, is recursively defined\nas the least ordinal greater than `a' ♯ b` and `a ♯ b'` for all `a' < a` and `b' < b`. In contrast\nto normal ordinal addition, it is commutative.\n\nNatural addition can equivalently be characterized as the ordinal resulting from adding up\ncorresponding coefficients in the Cantor normal forms of `a` and `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.nadd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nadd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L164-L167","name":"Ordinal.toNatOrdinal_min","line":164,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_min","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_min\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_min</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L159-L162","name":"Ordinal.toNatOrdinal_max","line":159,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_max","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_max\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_max</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L157-L157","name":"Ordinal.toNatOrdinal_eq_one","line":157,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_eq_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_eq_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L156-L156","name":"Ordinal.toNatOrdinal_eq_zero","line":156,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_eq_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_eq_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L154-L154","name":"Ordinal.toNatOrdinal_one","line":154,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L153-L153","name":"Ordinal.toNatOrdinal_zero","line":153,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L151-L151","name":"Ordinal.toNatOrdinal_toOrdinal","line":151,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_toOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_toOrdinal\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_toOrdinal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L149-L149","name":"Ordinal.toNatOrdinal_symm_eq","line":149,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_symm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal_symm_eq\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal_symm_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">toNatOrdinal</a>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">NatOrdinal.toOrdinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L141-L141","name":"NatOrdinal.small_Ioc","line":141,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.small_Ioc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.small_Ioc\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">small_Ioc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{u, u + 1}</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L140-L140","name":"NatOrdinal.small_Ioo","line":140,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.small_Ioo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.small_Ioo\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">small_Ioo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{u, u + 1}</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L139-L139","name":"NatOrdinal.small_Icc","line":139,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.small_Icc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.small_Icc\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">small_Icc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{u, u + 1}</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L138-L138","name":"NatOrdinal.small_Ico","line":138,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.small_Ico","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.small_Ico\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">small_Ico</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{u, u + 1}</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ico\">Set.Ico</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L137-L137","name":"NatOrdinal.small_Iic","line":137,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.small_Iic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.small_Iic\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">small_Iic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{u, u + 1}</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">a</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L136-L136","name":"NatOrdinal.small_Iio","line":136,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.small_Iio","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.small_Iio\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">small_Iio</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{u, u + 1}</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">a</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L132-L134","name":"NatOrdinal.induction","line":132,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.induction","doc":"`Ordinal.induction` but for `NatOrdinal`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.induction\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">induction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">j</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>), <span class=\"fn\"><span class=\"fn\">(∀ <span class=\"fn\">k</span> &lt; <span class=\"fn\">j</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">k</span></span>)</span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">j</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L127-L130","name":"NatOrdinal.rec","line":127,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.rec","doc":"A recursor for `NatOrdinal`. Use as `induction x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.rec\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">rec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>) → <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L123-L125","name":"NatOrdinal.lt_one_iff_zero","line":123,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.lt_one_iff_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.lt_one_iff_zero\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">lt_one_iff_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L120-L121","name":"NatOrdinal.not_lt_zero","line":120,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.not_lt_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.not_lt_zero\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">not_lt_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L116-L118","name":"NatOrdinal.zero_le","line":116,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.zero_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.zero_le\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">zero_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L113-L114","name":"NatOrdinal.succ_def","line":113,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.succ_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.succ_def\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">succ_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> (<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">toOrdinal</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L109-L111","name":"NatOrdinal.toOrdinal_min","line":109,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_min","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_min\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_min</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">toOrdinal</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">toOrdinal</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">toOrdinal</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L105-L107","name":"NatOrdinal.toOrdinal_max","line":105,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_max","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_max\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_max</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">toOrdinal</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">toOrdinal</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">toOrdinal</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L103-L103","name":"NatOrdinal.toOrdinal_eq_one","line":103,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_eq_one\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">toOrdinal</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L102-L102","name":"NatOrdinal.toOrdinal_eq_zero","line":102,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_eq_zero\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">toOrdinal</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L100-L100","name":"NatOrdinal.toOrdinal_one","line":100,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_one\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">toOrdinal</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L99-L99","name":"NatOrdinal.toOrdinal_zero","line":99,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_zero\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">toOrdinal</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L97-L97","name":"NatOrdinal.bot_eq_zero","line":97,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.bot_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.bot_eq_zero\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">bot_eq_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L94-L95","name":"NatOrdinal.instConditionallyCompleteLinearOrderBot","line":94,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instConditionallyCompleteLinearOrderBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instConditionallyCompleteLinearOrderBot\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instConditionallyCompleteLinearOrderBot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/ConditionallyCompleteLattice/Defs.html#ConditionallyCompleteLinearOrderBot\">ConditionallyCompleteLinearOrderBot</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L91-L92","name":"NatOrdinal.instWellFoundedLT","line":91,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instWellFoundedLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instWellFoundedLT\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instWellFoundedLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedLT\">WellFoundedLT</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L88-L89","name":"NatOrdinal.lt_wf","line":88,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.lt_wf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.lt_wf\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">lt_wf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/WF.html#WellFounded\">WellFounded</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L84-L86","name":"NatOrdinal.toOrdinal_toNatOrdinal","line":84,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_toNatOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_toNatOrdinal\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_toNatOrdinal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">toOrdinal</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L80-L82","name":"NatOrdinal.toOrdinal_symm_eq","line":80,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_symm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal_symm_eq\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal_symm_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\">toOrdinal</a>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\">Ordinal.toNatOrdinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L71-L74","name":"NatOrdinal.toOrdinal","line":71,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal","doc":"The identity function between `NatOrdinal` and `Ordinal`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.toOrdinal\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">toOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L66-L69","name":"Ordinal.toNatOrdinal","line":66,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal","doc":"The identity function between `Ordinal` and `NatOrdinal`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#Ordinal.toNatOrdinal\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toNatOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L63-L64","name":"NatOrdinal.uncountable","line":63,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.uncountable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.uncountable\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">uncountable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Uncountable\">Uncountable</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L61-L61","name":"NatOrdinal.instNeZeroOne","line":61,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instNeZeroOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instNeZeroOne\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instNeZeroOne</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L60-L60","name":"NatOrdinal.instZeroLEOneClass","line":60,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instZeroLEOneClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instZeroLEOneClass\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instZeroLEOneClass</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/ZeroLEOne.html#ZeroLEOneClass\">ZeroLEOneClass</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L59-L59","name":"NatOrdinal.instNoMaxOrder","line":59,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instNoMaxOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instNoMaxOrder\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instNoMaxOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#NoMaxOrder\">NoMaxOrder</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L58-L58","name":"NatOrdinal.instOrderBot","line":58,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instOrderBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instOrderBot\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instOrderBot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L57-L57","name":"NatOrdinal.instSuccOrder","line":57,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instSuccOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instSuccOrder\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instSuccOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#SuccOrder\">SuccOrder</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L56-L56","name":"NatOrdinal.instLinearOrder","line":56,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instLinearOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal.instLinearOrder\"><span class=\"name\">NatOrdinal</span>.<span class=\"name\">instLinearOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L52-L52","name":"instNatOrdinalWellFoundedRelation","line":52,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#instNatOrdinalWellFoundedRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#instNatOrdinalWellFoundedRelation\"><span class=\"name\">instNatOrdinalWellFoundedRelation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/WF.html#WellFoundedRelation\">WellFoundedRelation</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L52-L52","name":"instNatOrdinalOne","line":52,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#instNatOrdinalOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#instNatOrdinalOne\"><span class=\"name\">instNatOrdinalOne</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#One\">One</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L52-L52","name":"instNatOrdinalInhabited","line":52,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#instNatOrdinalInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#instNatOrdinalInhabited\"><span class=\"name\">instNatOrdinalInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L52-L52","name":"instNatOrdinalZero","line":52,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#instNatOrdinalZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#instNatOrdinalZero\"><span class=\"name\">instNatOrdinalZero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <a href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\">NatOrdinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/NaturalOps.lean#L50-L52","name":"NatOrdinal","line":50,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal","doc":"A type synonym for ordinals with natural addition and multiplication. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/NaturalOps.html#NatOrdinal\"><span class=\"name\">NatOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}