{"name":"Mathlib.NumberTheory.NumberField.InfinitePlace.Basic","instances":[{"typeNames":["NumberField.InfinitePlace"],"name":"instNonemptyInfinitePlaceOfNumberField","className":"Nonempty"},{"typeNames":["NumberField.InfinitePlace","Real"],"name":"NumberField.InfinitePlace.instFunLikeReal","className":"DFunLike"},{"typeNames":["NumberField.InfinitePlace","Real"],"name":"NumberField.InfinitePlace.instMonoidWithZeroHomClassReal","className":"MonoidWithZeroHomClass"},{"typeNames":["NumberField.InfinitePlace","Real"],"name":"NumberField.InfinitePlace.instNonnegHomClassReal","className":"NonnegHomClass"},{"typeNames":["NumberField.InfinitePlace"],"name":"NumberField.InfinitePlace.NumberField.InfinitePlace.fintype","className":"Fintype"},{"typeNames":["NumberField.InfinitePlace"],"name":"Rat.instSubsingletonInfinitePlace","className":"Subsingleton"}],"imports":["Init","Mathlib.NumberTheory.NumberField.InfinitePlace.Embeddings","Mathlib.NumberTheory.NumberField.Norm","Mathlib.RingTheory.RootsOfUnity.PrimitiveRoots","Mathlib.Topology.Instances.Complex"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L495-L496","name":"Rat.isReal_infinitePlace","line":495,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#Rat.isReal_infinitePlace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#Rat.isReal_infinitePlace\"><span class=\"name\">Rat</span>.<span class=\"name\">isReal_infinitePlace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#Rat.infinitePlace\">infinitePlace</a>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L492-L493","name":"Rat.instSubsingletonInfinitePlace","line":492,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#Rat.instSubsingletonInfinitePlace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#Rat.instSubsingletonInfinitePlace\"><span class=\"name\">Rat</span>.<span class=\"name\">instSubsingletonInfinitePlace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L486-L490","name":"Rat.infinitePlace_apply","line":486,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#Rat.infinitePlace_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#Rat.infinitePlace_apply\"><span class=\"name\">Rat</span>.<span class=\"name\">infinitePlace_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L483-L484","name":"Rat.infinitePlace","line":483,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#Rat.infinitePlace","doc":"The infinite place of `ℚ`, coming from the canonical map `ℚ → ℂ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#Rat.infinitePlace\"><span class=\"name\">Rat</span>.<span class=\"name\">infinitePlace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L447-L467","name":"NumberField.InfinitePlace.IsPrimitiveRoot.nrRealPlaces_eq_zero_of_two_lt","line":447,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsPrimitiveRoot.nrRealPlaces_eq_zero_of_two_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsPrimitiveRoot.nrRealPlaces_eq_zero_of_two_lt\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">nrRealPlaces_eq_zero_of_two_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ζ</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hζ</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces\">nrRealPlaces</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L435-L441","name":"NumberField.InfinitePlace.nrRealPlaces_pos_of_odd_finrank","line":435,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces_pos_of_odd_finrank","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces_pos_of_odd_finrank\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">nrRealPlaces_pos_of_odd_finrank</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces\">nrRealPlaces</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L430-L433","name":"NumberField.InfinitePlace.nrRealPlaces_eq_one_of_finrank_eq_one","line":430,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces_eq_one_of_finrank_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces_eq_one_of_finrank_eq_one\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">nrRealPlaces_eq_one_of_finrank_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces\">nrRealPlaces</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L427-L428","name":"NumberField.InfinitePlace.nrComplexPlaces_eq_zero_of_finrank_eq_one","line":427,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrComplexPlaces_eq_zero_of_finrank_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrComplexPlaces_eq_zero_of_finrank_eq_one\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">nrComplexPlaces_eq_zero_of_finrank_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrComplexPlaces\">nrComplexPlaces</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L418-L423","name":"NumberField.InfinitePlace.card_add_two_mul_card_eq_rank","line":418,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.card_add_two_mul_card_eq_rank","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.card_add_two_mul_card_eq_rank\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">card_add_two_mul_card_eq_rank</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces\">nrRealPlaces</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrComplexPlaces\">nrComplexPlaces</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L401-L416","name":"NumberField.InfinitePlace.card_complex_embeddings","line":401,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.card_complex_embeddings","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.card_complex_embeddings\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">card_complex_embeddings</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.IsReal\">ComplexEmbedding.IsReal</a> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrComplexPlaces\">nrComplexPlaces</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L393-L398","name":"NumberField.InfinitePlace.card_eq_nrRealPlaces_add_nrComplexPlaces","line":393,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.card_eq_nrRealPlaces_add_nrComplexPlaces","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.card_eq_nrRealPlaces_add_nrComplexPlaces\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">card_eq_nrRealPlaces_add_nrComplexPlaces</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces\">nrRealPlaces</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrComplexPlaces\">nrComplexPlaces</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L390-L391","name":"NumberField.InfinitePlace.card_real_embeddings","line":390,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.card_real_embeddings","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.card_real_embeddings\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">card_real_embeddings</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.IsReal\">ComplexEmbedding.IsReal</a> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces\">nrRealPlaces</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L387-L387","name":"NumberField.InfinitePlace.NrComplexPlaces","line":387,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.NrComplexPlaces","doc":"**Alias** of `NumberField.InfinitePlace.nrComplexPlaces`.\n\n---\n\nThe number of infinite complex places of the number field `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.NrComplexPlaces\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">NrComplexPlaces</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L384-L385","name":"NumberField.InfinitePlace.nrComplexPlaces","line":384,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrComplexPlaces","doc":"The number of infinite complex places of the number field `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrComplexPlaces\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">nrComplexPlaces</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L381-L381","name":"NumberField.InfinitePlace.NrRealPlaces","line":381,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.NrRealPlaces","doc":"**Alias** of `NumberField.InfinitePlace.nrRealPlaces`.\n\n---\n\nThe number of infinite real places of the number field `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.NrRealPlaces\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">NrRealPlaces</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L378-L379","name":"NumberField.InfinitePlace.nrRealPlaces","line":378,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces","doc":"The number of infinite real places of the number field `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">nrRealPlaces</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L368-L373","name":"NumberField.adjoin_eq_top_of_infinitePlace_lt","line":368,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.adjoin_eq_top_of_infinitePlace_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.adjoin_eq_top_of_infinitePlace_lt\"><span class=\"name\">NumberField</span>.<span class=\"name\">adjoin_eq_top_of_infinitePlace_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">RingOfIntegers</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">w'</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>⦄, <span class=\"fn\"><span class=\"fn\">w'</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">w</span> → <span class=\"fn\"><span class=\"fn\">w'</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₃</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding\">embedding</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Subalgebra/Lattice.html#Algebra.adjoin\">Algebra.adjoin</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L340-L366","name":"NumberField.is_primitive_element_of_infinitePlace_lt","line":340,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.is_primitive_element_of_infinitePlace_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.is_primitive_element_of_infinitePlace_lt\"><span class=\"name\">NumberField</span>.<span class=\"name\">is_primitive_element_of_infinitePlace_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">RingOfIntegers</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">w'</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>⦄, <span class=\"fn\"><span class=\"fn\">w'</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">w</span> → <span class=\"fn\"><span class=\"fn\">w'</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₃</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding\">embedding</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>⟮<span class=\"fn\">↑<span class=\"fn\">x</span></span>⟯</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L325-L337","name":"NumberField.InfinitePlace.one_le_of_lt_one","line":325,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.one_le_of_lt_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.one_le_of_lt_one\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">one_le_of_lt_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">RingOfIntegers</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">z</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>⦄, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">w</span> → <span class=\"fn\"><span class=\"fn\">z</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L311-L323","name":"NumberField.InfinitePlace.prod_eq_abs_norm","line":311,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.prod_eq_abs_norm","doc":"The infinite part of the product formula : for `x ∈ K`, we have `Π_w ‖x‖_w = |norm(x)|` where\n`‖·‖_w` is the normalized absolute value for `w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.prod_eq_abs_norm\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">prod_eq_abs_norm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>, <span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult\">mult</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Norm/Defs.html#Algebra.norm\">Algebra.norm</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L305-L307","name":"NumberField.InfinitePlace.mkComplex_coe","line":305,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mkComplex_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mkComplex_coe\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">mkComplex_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.IsReal\">ComplexEmbedding.IsReal</a> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mkComplex\">mkComplex</a> <span class=\"fn\">φ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">↑<span class=\"fn\">φ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L301-L303","name":"NumberField.InfinitePlace.mkReal_coe","line":301,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mkReal_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mkReal_coe\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">mkReal_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.IsReal\">ComplexEmbedding.IsReal</a> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mkReal\">mkReal</a> <span class=\"fn\">φ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">↑<span class=\"fn\">φ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L296-L299","name":"NumberField.InfinitePlace.mkComplex","line":296,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mkComplex","doc":"The map from nonreal embeddings to complex infinite places "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mkComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">mkComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.IsReal\">ComplexEmbedding.IsReal</a> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> → <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L287-L294","name":"NumberField.InfinitePlace.mkReal","line":287,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mkReal","doc":"The map from real embeddings to real infinite places as an equiv "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mkReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">mkReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.IsReal\">ComplexEmbedding.IsReal</a> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L279-L285","name":"NumberField.InfinitePlace.sum_mult_eq","line":279,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.sum_mult_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.sum_mult_eq\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">sum_mult_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>, <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult\">mult</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L273-L273","name":"NumberField.InfinitePlace.sum_eq_sum_add_sum","line":273,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.sum_eq_sum_add_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.sum_eq_sum_add_sum\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">sum_eq_sum_add_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">∑ <span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">w</span></span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">∑ <span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">w</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L273-L277","name":"NumberField.InfinitePlace.prod_eq_prod_mul_prod","line":273,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.prod_eq_prod_mul_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.prod_eq_prod_mul_prod\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">prod_eq_prod_mul_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(∏ <span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">w</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∏ <span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">w</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L269-L270","name":"NumberField.InfinitePlace.NumberField.InfinitePlace.fintype","line":269,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.NumberField.InfinitePlace.fintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.NumberField.InfinitePlace.fintype\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">fintype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L255-L266","name":"NumberField.InfinitePlace.card_filter_mk_eq","line":255,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.card_filter_mk_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.card_filter_mk_eq\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">card_filter_mk_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> | <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span>}</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult\">mult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L250-L252","name":"NumberField.InfinitePlace.one_le_mult","line":250,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.one_le_mult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.one_le_mult\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">one_le_mult</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult\">mult</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L247-L248","name":"NumberField.InfinitePlace.mult_coe_ne_zero","line":247,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult_coe_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult_coe_ne_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">mult_coe_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult\">mult</a></span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L244-L245","name":"NumberField.InfinitePlace.mult_ne_zero","line":244,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult_ne_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">mult_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult\">mult</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L240-L242","name":"NumberField.InfinitePlace.mult_pos","line":240,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult_pos\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">mult_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult\">mult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L235-L238","name":"NumberField.InfinitePlace.mult_isComplex","line":235,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult_isComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">mult_isComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">w</span>)</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult\">mult</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L230-L233","name":"NumberField.InfinitePlace.mult_isReal","line":230,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult_isReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">mult_isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">w</span>)</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult\">mult</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L226-L228","name":"NumberField.InfinitePlace.mult","line":226,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult","doc":"The multiplicity of an infinite place, that is the number of distinct complex embeddings that\ndefine it, see `card_filter_mk_eq`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mult\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">mult</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L221-L223","name":"NumberField.InfinitePlace.not_isReal_of_mk_isComplex","line":221,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.not_isReal_of_mk_isComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.not_isReal_of_mk_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">not_isReal_of_mk_isComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.IsReal\">ComplexEmbedding.IsReal</a> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L217-L219","name":"NumberField.InfinitePlace.isComplex_mk_iff","line":217,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.isComplex_mk_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.isComplex_mk_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">isComplex_mk_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.IsReal\">ComplexEmbedding.IsReal</a> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L213-L215","name":"NumberField.InfinitePlace.isReal_mk_iff","line":213,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.isReal_mk_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.isReal_mk_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">isReal_mk_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.IsReal\">ComplexEmbedding.IsReal</a> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L206-L211","name":"NumberField.InfinitePlace.isReal_of_mk_isReal","line":206,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.isReal_of_mk_isReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.isReal_of_mk_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">isReal_of_mk_isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.IsReal\">ComplexEmbedding.IsReal</a> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L202-L204","name":"NumberField.InfinitePlace.norm_embedding_of_isReal","line":202,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.norm_embedding_of_isReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.norm_embedding_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">norm_embedding_of_isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hw</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding_of_isReal\">embedding_of_isReal</a> <span class=\"fn\">hw</span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L197-L200","name":"NumberField.InfinitePlace.embedding_of_isReal_apply","line":197,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding_of_isReal_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding_of_isReal_apply\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">embedding_of_isReal_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hw</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding_of_isReal\">embedding_of_isReal</a> <span class=\"fn\">hw</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding\">embedding</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L193-L195","name":"NumberField.InfinitePlace.embedding_of_isReal","line":193,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding_of_isReal","doc":"The real embedding associated to a real infinite place. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">embedding_of_isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hw</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L189-L191","name":"NumberField.InfinitePlace.disjoint_isReal_isComplex","line":189,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.disjoint_isReal_isComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.disjoint_isReal_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">disjoint_isReal_isComplex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">w</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">w</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L185-L186","name":"NumberField.InfinitePlace.ne_of_isReal_isComplex","line":185,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.ne_of_isReal_isComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.ne_of_isReal_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">ne_of_isReal_isComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w </span><span class=\"fn\">w'</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'</span> : <span class=\"fn\"><span class=\"fn\">w'</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">w</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">w'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L182-L183","name":"NumberField.InfinitePlace.isReal_or_isComplex","line":182,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.isReal_or_isComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.isReal_or_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">isReal_or_isComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L178-L180","name":"NumberField.InfinitePlace.not_isComplex_iff_isReal","line":178,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.not_isComplex_iff_isReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.not_isComplex_iff_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">not_isComplex_iff_isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L174-L176","name":"NumberField.InfinitePlace.not_isReal_iff_isComplex","line":174,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.not_isReal_iff_isComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.not_isReal_iff_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">not_isReal_iff_isComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L169-L172","name":"NumberField.InfinitePlace.conjugate_embedding_eq_of_isReal","line":169,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.conjugate_embedding_eq_of_isReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.conjugate_embedding_eq_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">conjugate_embedding_eq_of_isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.conjugate\">ComplexEmbedding.conjugate</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding\">embedding</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding\">embedding</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L160-L167","name":"NumberField.InfinitePlace.isComplex_iff","line":160,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.isComplex_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.isComplex_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">isComplex_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.IsReal\">ComplexEmbedding.IsReal</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding\">embedding</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L154-L158","name":"NumberField.InfinitePlace.isReal_iff","line":154,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.isReal_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.isReal_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">isReal_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.IsReal\">ComplexEmbedding.IsReal</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding\">embedding</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L148-L152","name":"NumberField.InfinitePlace.embedding_mk_eq_of_isReal","line":148,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding_mk_eq_of_isReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding_mk_eq_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">embedding_mk_eq_of_isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.IsReal\">ComplexEmbedding.IsReal</a> <span class=\"fn\">φ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding\">embedding</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L144-L146","name":"NumberField.InfinitePlace.embedding_mk_eq","line":144,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding_mk_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding_mk_eq\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">embedding_mk_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding\">embedding</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding\">embedding</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.conjugate\">ComplexEmbedding.conjugate</a> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L141-L142","name":"NumberField.InfinitePlace.IsComplex","line":141,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex","doc":"An infinite place is complex if it is defined by a complex (ie. not real) embedding. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">IsComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L138-L139","name":"NumberField.InfinitePlace.IsReal","line":138,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal","doc":"An infinite place is real if it is defined by a real embedding. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">IsReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L104-L136","name":"NumberField.InfinitePlace.mk_eq_iff","line":104,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk_eq_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">mk_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">ψ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ψ</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.conjugate\">ComplexEmbedding.conjugate</a> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ψ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L102-L102","name":"NumberField.InfinitePlace.pos_iff","line":102,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.pos_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.pos_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">pos_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L99-L100","name":"NumberField.InfinitePlace.le_iff_le","line":99,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.le_iff_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.le_iff_le\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">le_iff_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>), <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L96-L97","name":"NumberField.InfinitePlace.eq_iff_eq","line":96,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.eq_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.eq_iff_eq\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">eq_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>), <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L91-L94","name":"NumberField.InfinitePlace.norm_embedding_eq","line":91,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.norm_embedding_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.norm_embedding_eq\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">norm_embedding_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding\">embedding</a></span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L86-L89","name":"NumberField.InfinitePlace.mk_conjugate_eq","line":86,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk_conjugate_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk_conjugate_eq\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">mk_conjugate_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.html#NumberField.ComplexEmbedding.conjugate\">ComplexEmbedding.conjugate</a> <span class=\"fn\">φ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L83-L84","name":"NumberField.InfinitePlace.mk_embedding","line":83,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk_embedding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk_embedding\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">mk_embedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding\">embedding</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L80-L81","name":"NumberField.InfinitePlace.embedding","line":80,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding","doc":"For an infinite place `w`, return an embedding `φ` such that `w = infinite_place φ` . "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.embedding\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">embedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L77-L78","name":"NumberField.InfinitePlace.apply","line":77,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.apply\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\">mk</a> <span class=\"fn\">φ</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L74-L75","name":"NumberField.InfinitePlace.instNonnegHomClassReal","line":74,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.instNonnegHomClassReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.instNonnegHomClassReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">instNonnegHomClassReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Hom/Basic.html#NonnegHomClass\">NonnegHomClass</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">K</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L69-L72","name":"NumberField.InfinitePlace.instMonoidWithZeroHomClassReal","line":69,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.instMonoidWithZeroHomClassReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.instMonoidWithZeroHomClassReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">instMonoidWithZeroHomClassReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Hom.html#MonoidWithZeroHomClass\">MonoidWithZeroHomClass</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">K</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L65-L65","name":"NumberField.InfinitePlace.ext_iff","line":65,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.ext_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v₁ </span><span class=\"fn\">v₂</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">v₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">k</span> : <span class=\"fn\">K</span>), <span class=\"fn\"><span class=\"fn\">v₁</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">v₂</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L65-L67","name":"NumberField.InfinitePlace.ext","line":65,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.ext\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v₁ </span><span class=\"fn\">v₂</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">k</span> : <span class=\"fn\">K</span>), <span class=\"fn\"><span class=\"fn\">v₁</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">v₂</span> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">v₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L62-L63","name":"NumberField.InfinitePlace.coe_apply","line":62,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.coe_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.coe_apply\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">coe_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">v</span></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L58-L60","name":"NumberField.InfinitePlace.instFunLikeReal","line":58,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.instFunLikeReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.instFunLikeReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">instFunLikeReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">K</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L52-L54","name":"NumberField.InfinitePlace.mk","line":52,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk","doc":"Return the infinite place defined by a complex embedding `φ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.mk\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L48-L48","name":"instNonemptyInfinitePlaceOfNumberField","line":48,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#instNonemptyInfinitePlaceOfNumberField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#instNonemptyInfinitePlaceOfNumberField\"><span class=\"name\">instNonemptyInfinitePlaceOfNumberField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean#L45-L46","name":"NumberField.InfinitePlace","line":45,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace","doc":"An infinite place of a number field `K` is a place associated to a complex embedding. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_2</div></div>"}]}