{"name":"Mathlib.NumberTheory.NumberField.InfinitePlace.TotallyRealComplex","instances":[{"typeNames":["Rat"],"name":"NumberField.instIsTotallyRealRat","className":"NumberField.IsTotallyReal"}],"imports":["Init","Mathlib.NumberTheory.NumberField.InfinitePlace.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L94-L96","name":"NumberField.IsTotallyComplex.finrank","line":94,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex.finrank","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex.finrank\"><span class=\"name\">NumberField</span>.<span class=\"name\">IsTotallyComplex</span>.<span class=\"name\">finrank</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex\">IsTotallyComplex</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrComplexPlaces\">InfinitePlace.nrComplexPlaces</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L89-L92","name":"NumberField.IsTotallyComplex.nrRealPlaces_eq_zero","line":89,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex.nrRealPlaces_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex.nrRealPlaces_eq_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">IsTotallyComplex</span>.<span class=\"name\">nrRealPlaces_eq_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex\">IsTotallyComplex</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces\">InfinitePlace.nrRealPlaces</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L83-L85","name":"NumberField.nrRealPlaces_eq_zero_iff","line":83,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.nrRealPlaces_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.nrRealPlaces_eq_zero_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">nrRealPlaces_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces\">InfinitePlace.nrRealPlaces</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex\">IsTotallyComplex</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L79-L79","name":"NumberField.IsTotallyComplex.isComplex","line":79,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex.isComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex.isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">IsTotallyComplex</span>.<span class=\"name\">isComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex\">IsTotallyComplex</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L78-L78","name":"NumberField.IsTotallyComplex.mk","line":78,"kind":"ctor","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex.mk\"><span class=\"name\">NumberField</span>.<span class=\"name\">IsTotallyComplex</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isComplex</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex\">IsTotallyComplex</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L78-L78","name":"NumberField.isTotallyComplex_iff","line":78,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.isTotallyComplex_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.isTotallyComplex_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">isTotallyComplex_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex\">IsTotallyComplex</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L75-L79","name":"NumberField.IsTotallyComplex","line":75,"kind":"class","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex","doc":"A number field `K` is totally complex if all of its infinite places are complex.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">IsTotallyComplex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L60-L63","name":"NumberField.instIsTotallyRealRat","line":60,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.instIsTotallyRealRat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.instIsTotallyRealRat\"><span class=\"name\">NumberField</span>.<span class=\"name\">instIsTotallyRealRat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal\">IsTotallyReal</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L56-L58","name":"NumberField.IsTotallyReal.finrank","line":56,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal.finrank","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal.finrank\"><span class=\"name\">NumberField</span>.<span class=\"name\">IsTotallyReal</span>.<span class=\"name\">finrank</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal\">IsTotallyReal</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrRealPlaces\">InfinitePlace.nrRealPlaces</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L51-L54","name":"NumberField.IsTotallyReal.nrComplexPlaces_eq_zero","line":51,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal.nrComplexPlaces_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal.nrComplexPlaces_eq_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">IsTotallyReal</span>.<span class=\"name\">nrComplexPlaces_eq_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal\">IsTotallyReal</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrComplexPlaces\">InfinitePlace.nrComplexPlaces</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L45-L47","name":"NumberField.nrComplexPlaces_eq_zero_iff","line":45,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.nrComplexPlaces_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.nrComplexPlaces_eq_zero_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">nrComplexPlaces_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.nrComplexPlaces\">InfinitePlace.nrComplexPlaces</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal\">IsTotallyReal</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L41-L41","name":"NumberField.IsTotallyReal.isReal","line":41,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal.isReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal.isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">IsTotallyReal</span>.<span class=\"name\">isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal\">IsTotallyReal</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L40-L40","name":"NumberField.IsTotallyReal.mk","line":40,"kind":"ctor","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal.mk\"><span class=\"name\">NumberField</span>.<span class=\"name\">IsTotallyReal</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isReal</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal\">IsTotallyReal</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L40-L40","name":"NumberField.isTotallyReal_iff","line":40,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.isTotallyReal_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.isTotallyReal_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">isTotallyReal_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal\">IsTotallyReal</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean#L37-L41","name":"NumberField.IsTotallyReal","line":37,"kind":"class","docLink":"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal","doc":"A number field `K` is totally real if all of its infinite places\nare real. In other words, the image of every ring homomorphism `K → ℂ`\nis a subset of `ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.html#NumberField.IsTotallyReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">IsTotallyReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}