{"name":"Mathlib.Data.Matroid.Minor.Contract","instances":[{"typeNames":["Matroid.contract"],"name":"Matroid.contract_finite","className":"Matroid.Finite"},{"typeNames":["Matroid.contract"],"name":"Matroid.contract_rankFinite","className":"Matroid.RankFinite"},{"typeNames":["Matroid.contract"],"name":"Matroid.contract_finitary","className":"Matroid.Finitary"}],"imports":["Init","Mathlib.Data.Matroid.Minor.Delete","Mathlib.Tactic.TautoSet"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L564-L566","name":"Matroid.delete_contract_delete","line":564,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.delete_contract_delete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.delete_contract_delete\"><span class=\"name\">Matroid</span>.<span class=\"name\">delete_contract_delete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D </span><span class=\"fn\">C </span><span class=\"fn\">D'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">D'</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L558-L562","name":"Matroid.delete_contract_delete'","line":558,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.delete_contract_delete'","doc":"A version of `delete_contract_delete` without the disjointness hypothesis,\nand hence a less simple RHS. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.delete_contract_delete'\"><span class=\"name\">Matroid</span>.<span class=\"name\">delete_contract_delete'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D </span><span class=\"fn\">C </span><span class=\"fn\">D'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> (<span class=\"fn\">C</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">D</span>))</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">D'</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L554-L556","name":"Matroid.contract_delete_contract_delete","line":554,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_delete_contract_delete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_delete_contract_delete\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_delete_contract_delete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C </span><span class=\"fn\">D </span><span class=\"fn\">C' </span><span class=\"fn\">D'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">C'</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C'</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> (<span class=\"fn\">C</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">C'</span>))</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">D'</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L548-L552","name":"Matroid.contract_delete_contract_delete'","line":548,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_delete_contract_delete'","doc":"A version of `contract_delete_contract_delete` without the disjointness hypothesis,\nand hence a less simple RHS. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_delete_contract_delete'\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_delete_contract_delete'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C </span><span class=\"fn\">D </span><span class=\"fn\">C' </span><span class=\"fn\">D'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C'</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> (<span class=\"fn\">C</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">C'</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">D</span>))</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">D'</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L545-L546","name":"Matroid.contract_delete_contract","line":545,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_delete_contract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_delete_contract\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_delete_contract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C </span><span class=\"fn\">D </span><span class=\"fn\">C'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">C'</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> (<span class=\"fn\">C</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">C'</span>))</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L539-L543","name":"Matroid.contract_delete_contract'","line":539,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_delete_contract'","doc":"A version of `contract_delete_contract` without the disjointness hypothesis,\nand hence a less simple RHS. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_delete_contract'\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_delete_contract'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C </span><span class=\"fn\">D </span><span class=\"fn\">C'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> (<span class=\"fn\">C</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">C'</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">D</span>))</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L534-L537","name":"Matroid.delete_contract_comm'","line":534,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.delete_contract_comm'","doc":"A version of `delete_contract_comm'` without the disjointness hypothesis,\nand hence a less simple RHS. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.delete_contract_comm'\"><span class=\"name\">Matroid</span>.<span class=\"name\">delete_contract_comm'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> (<span class=\"fn\">C</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">D</span>))</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L530-L532","name":"Matroid.delete_contract_eq_diff","line":530,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.delete_contract_eq_diff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.delete_contract_eq_diff\"><span class=\"name\">Matroid</span>.<span class=\"name\">delete_contract_eq_diff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> (<span class=\"fn\">C</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">D</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L525-L528","name":"Matroid.contract_delete_comm'","line":525,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_delete_comm'","doc":"A version of `contract_delete_comm` without the disjointness hypothesis,\nand hence a less simple RHS. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_delete_comm'\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_delete_comm'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span>))</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L516-L523","name":"Matroid.contract_delete_comm","line":516,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_delete_comm","doc":"Contraction and deletion commute for disjoint sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_delete_comm\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_delete_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hCD</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L511-L514","name":"Matroid.restrict_contract_eq_contract_restrict","line":511,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.restrict_contract_eq_contract_restrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.restrict_contract_eq_contract_restrict\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict_contract_eq_contract_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hCR</span> : <span class=\"fn\">C</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Restrict.html#Matroid.restrict\">restrict</a></span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Restrict.html#Matroid.restrict\">restrict</a></span> (<span class=\"fn\">R</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L501-L509","name":"Matroid.contract_restrict_eq_restrict_contract","line":501,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_restrict_eq_restrict_contract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_restrict_eq_restrict_contract\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_restrict_eq_restrict_contract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">C</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Restrict.html#Matroid.restrict\">restrict</a></span> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Restrict.html#Matroid.restrict\">restrict</a></span> (<span class=\"fn\">R</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">C</span>))</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L497-L499","name":"Matroid.contract_delete_diff","line":497,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_delete_diff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_delete_diff\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_delete_diff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L490-L493","name":"Matroid.IsCocircuit.delete_diff_isCocircuit","line":490,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCocircuit.delete_diff_isCocircuit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCocircuit.delete_diff_isCocircuit\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsCocircuit</span>.<span class=\"name\">delete_diff_isCocircuit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hK</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCocircuit\">IsCocircuit</a></span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hXK</span> : <span class=\"fn\">X</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> (<span class=\"fn\">K</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span>))</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCocircuit\">IsCocircuit</a></span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L485-L488","name":"Matroid.IsCocircuit.delete_isCocircuit","line":485,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCocircuit.delete_isCocircuit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCocircuit.delete_isCocircuit\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsCocircuit</span>.<span class=\"name\">delete_isCocircuit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hK</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCocircuit\">IsCocircuit</a></span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hD</span> : <span class=\"fn\">D</span> <a href=\"./Init/Core.html#HasSSubset.SSubset\">⊂</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCocircuit\">IsCocircuit</a></span> (<span class=\"fn\">K</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">D</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L481-L483","name":"Matroid.IsCocircuit.of_contract","line":481,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCocircuit.of_contract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCocircuit.of_contract\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsCocircuit</span>.<span class=\"name\">of_contract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hK</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCocircuit\">IsCocircuit</a></span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCocircuit\">IsCocircuit</a></span> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L464-L479","name":"Matroid.IsCircuit.exists_subset_isCircuit_of_contract","line":464,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCircuit.exists_subset_isCircuit_of_contract","doc":"If `C` is a circuit of `M ／ K`, then `M` has a circuit in the interval `[C, C ∪ K]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCircuit.exists_subset_isCircuit_of_contract\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsCircuit</span>.<span class=\"name\">exists_subset_isCircuit_of_contract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCircuit\">IsCircuit</a></span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">C'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCircuit\">IsCircuit</a></span> <span class=\"fn\">C'</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">C</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C'</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">C'</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L459-L462","name":"Matroid.IsCircuit.contract_diff_isCircuit","line":459,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCircuit.contract_diff_isCircuit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCircuit.contract_diff_isCircuit\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsCircuit</span>.<span class=\"name\">contract_diff_isCircuit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCircuit\">IsCircuit</a></span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hK</span> : <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hKC</span> : <span class=\"fn\">K</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> (<span class=\"fn\">C</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">K</span>))</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCircuit\">IsCircuit</a></span> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L452-L457","name":"Matroid.IsCircuit.contract_dep_of_not_subset","line":452,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCircuit.contract_dep_of_not_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCircuit.contract_dep_of_not_subset\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsCircuit</span>.<span class=\"name\">contract_dep_of_not_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hK</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCircuit\">IsCircuit</a></span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hKC</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">K</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Dep\">Dep</a></span> (<span class=\"fn\">K</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L445-L450","name":"Matroid.IsCircuit.contract_dep","line":445,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCircuit.contract_dep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCircuit.contract_dep\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsCircuit</span>.<span class=\"name\">contract_dep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hK</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCircuit\">IsCircuit</a></span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hCK</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">C</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Dep\">Dep</a></span> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L441-L443","name":"Matroid.IsCircuit.contractElem_isCircuit","line":441,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCircuit.contractElem_isCircuit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCircuit.contractElem_isCircuit\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsCircuit</span>.<span class=\"name\">contractElem_isCircuit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCircuit\">IsCircuit</a></span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnt</span> : <span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/Set/Subsingleton.html#Set.Nontrivial\">Nontrivial</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">heC</span> : <span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">e</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCircuit\">IsCircuit</a></span> (<span class=\"fn\">C</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">e</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L432-L439","name":"Matroid.IsCircuit.contract_isCircuit","line":432,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCircuit.contract_isCircuit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsCircuit.contract_isCircuit\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsCircuit</span>.<span class=\"name\">contract_isCircuit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hK</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCircuit\">IsCircuit</a></span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\">C</span> <a href=\"./Init/Core.html#HasSSubset.SSubset\">⊂</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCircuit\">IsCircuit</a></span> (<span class=\"fn\">K</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L426-L428","name":"Matroid.Spanning.contract_eq_loopyOn","line":426,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Spanning.contract_eq_loopyOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Spanning.contract_eq_loopyOn\"><span class=\"name\">Matroid</span>.<span class=\"name\">Spanning</span>.<span class=\"name\">contract_eq_loopyOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Closure.html#Matroid.Spanning\">Spanning</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Constructions.html#Matroid.loopyOn\">loopyOn</a> (<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.E\">E</a></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L421-L424","name":"Matroid.Spanning.contract","line":421,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Spanning.contract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Spanning.contract\"><span class=\"name\">Matroid</span>.<span class=\"name\">Spanning</span>.<span class=\"name\">contract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Closure.html#Matroid.Spanning\">Spanning</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Closure.html#Matroid.Spanning\">Spanning</a></span> (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L414-L419","name":"Matroid.contract_spanning_iff'","line":414,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_spanning_iff'","doc":"A version of `Matroid.contract_spanning_iff` without the supportedness hypothesis. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_spanning_iff'\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_spanning_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Closure.html#Matroid.Spanning\">Spanning</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Closure.html#Matroid.Spanning\">Spanning</a></span> (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">C</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.E\">E</a></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">X</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L405-L412","name":"Matroid.contract_spanning_iff","line":405,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_spanning_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_spanning_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_spanning_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\">C</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.E\">E</a></span> := by aesop_mat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Closure.html#Matroid.Spanning\">Spanning</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Closure.html#Matroid.Spanning\">Spanning</a></span> (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">C</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">X</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L394-L403","name":"Matroid.contract_closure_eq","line":394,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_closure_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_closure_eq\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_closure_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Closure.html#Matroid.closure\">closure</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Closure.html#Matroid.closure\">closure</a></span> (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">C</span>)</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L383-L392","name":"Matroid.contract_closure_eq_contract_delete","line":383,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_closure_eq_contract_delete","doc":"Contracting the closure of a set is the same as contracting the set,\nand then deleting the rest of its elements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_closure_eq_contract_delete\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_closure_eq_contract_delete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Closure.html#Matroid.closure\">closure</a></span> <span class=\"fn\">C</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Closure.html#Matroid.closure\">closure</a></span> <span class=\"fn\">C</span></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L376-L379","name":"Matroid.IsBasis.diff_subset_loops_contract","line":376,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.diff_subset_loops_contract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.diff_subset_loops_contract\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis</span>.<span class=\"name\">diff_subset_loops_contract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hIX</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Loop.html#Matroid.loops\">loops</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L368-L374","name":"Matroid.contract_isNonloop_iff","line":368,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_isNonloop_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_isNonloop_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_isNonloop_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Loop.html#Matroid.IsNonloop\">IsNonloop</a></span> <span class=\"fn\">e</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.E\">E</a></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Closure.html#Matroid.closure\">closure</a></span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L364-L366","name":"Matroid.IsNonloop.of_contract","line":364,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsNonloop.of_contract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsNonloop.of_contract\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsNonloop</span>.<span class=\"name\">of_contract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Loop.html#Matroid.IsNonloop\">IsNonloop</a></span> <span class=\"fn\">e</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Loop.html#Matroid.IsNonloop\">IsNonloop</a></span> <span class=\"fn\">e</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L360-L362","name":"Matroid.contract_isColoop_iff","line":360,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_isColoop_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_isColoop_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_isColoop_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Loop.html#Matroid.IsColoop\">IsColoop</a></span> <span class=\"fn\">e</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Loop.html#Matroid.IsColoop\">IsColoop</a></span> <span class=\"fn\">e</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L356-L358","name":"Matroid.contract_coloops_eq","line":356,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_coloops_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_coloops_eq\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_coloops_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Loop.html#Matroid.coloops\">coloops</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Loop.html#Matroid.coloops\">coloops</a></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L352-L354","name":"Matroid.contract_loops_eq","line":352,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_loops_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_loops_eq\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_loops_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Loop.html#Matroid.loops\">loops</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Closure.html#Matroid.closure\">closure</a></span> <span class=\"fn\">C</span></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L343-L350","name":"Matroid.contract_isLoop_iff_mem_closure","line":343,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_isLoop_iff_mem_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_isLoop_iff_mem_closure\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_isLoop_iff_mem_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Loop.html#Matroid.IsLoop\">IsLoop</a></span> <span class=\"fn\">e</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Closure.html#Matroid.closure\">closure</a></span> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L340-L341","name":"Matroid.contract_eq_delete_of_subset_coloops","line":340,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_eq_delete_of_subset_coloops","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_eq_delete_of_subset_coloops\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_eq_delete_of_subset_coloops</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\">X</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Loop.html#Matroid.coloops\">coloops</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L337-L338","name":"Matroid.contract_eq_delete_of_subset_loops","line":337,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_eq_delete_of_subset_loops","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_eq_delete_of_subset_loops\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_eq_delete_of_subset_loops</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\">X</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Loop.html#Matroid.loops\">loops</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L324-L333","name":"Matroid.contract_finitary","line":324,"kind":"instance","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_finitary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_finitary\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_finitary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Finitary\">Finitary</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Finitary\">Finitary</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L320-L322","name":"Matroid.contract_rankFinite","line":320,"kind":"instance","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_rankFinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_rankFinite\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_rankFinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.RankFinite\">RankFinite</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.RankFinite\">RankFinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L316-L318","name":"Matroid.contract_finite","line":316,"kind":"instance","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_finite\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Finite\">Finite</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Finite\">Finite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L307-L312","name":"Matroid.Dep.of_contract","line":307,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Dep.of_contract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Dep.of_contract\"><span class=\"name\">Matroid</span>.<span class=\"name\">Dep</span>.<span class=\"name\">of_contract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Dep\">Dep</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\">C</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.E\">E</a></span> := by aesop_mat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Dep\">Dep</a></span> (<span class=\"fn\">C</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">X</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L304-L305","name":"Matroid.Indep.of_contract","line":304,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Indep.of_contract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Indep.of_contract\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">of_contract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L299-L302","name":"Matroid.IsBasis.contract_isBasis_of_disjoint_indep","line":299,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_isBasis_of_disjoint_indep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_isBasis_of_disjoint_indep\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis</span>.<span class=\"name\">contract_isBasis_of_disjoint_indep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hdj</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">J</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ind</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">J</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L295-L297","name":"Matroid.IsBasis.contract_isBasis_of_indep","line":295,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_isBasis_of_indep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_isBasis_of_indep\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis</span>.<span class=\"name\">contract_isBasis_of_indep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ind</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">J</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">J</span>) (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">J</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L291-L293","name":"Matroid.IsBasis'.contract_isBasis_of_indep","line":291,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_isBasis_of_indep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_isBasis_of_indep\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis'</span>.<span class=\"name\">contract_isBasis_of_indep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ind</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">J</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">J</span>) (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">J</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L286-L289","name":"Matroid.IsBasis.contract_isBasis_of_disjoint","line":286,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_isBasis_of_disjoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_isBasis_of_disjoint\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis</span>.<span class=\"name\">contract_isBasis_of_disjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJC</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hdj</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ind</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">J</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L282-L284","name":"Matroid.IsBasis.contract_isBasis","line":282,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_isBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_isBasis\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis</span>.<span class=\"name\">contract_isBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJC</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ind</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">J</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span>) (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L277-L280","name":"Matroid.IsBasis'.contract_isBasis'","line":277,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_isBasis'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_isBasis'\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis'</span>.<span class=\"name\">contract_isBasis'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJC</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ind</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">J</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span>) (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L264-L275","name":"Matroid.IsBasis.contract_isBasis_of_isBasis'","line":264,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_isBasis_of_isBasis'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_isBasis_of_isBasis'\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis</span>.<span class=\"name\">contract_isBasis_of_isBasis'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJC</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ind</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">J</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span>) (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L260-L262","name":"Matroid.IsBasis'.contract_indep_diff_iff","line":260,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_indep_diff_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_indep_diff_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis'</span>.<span class=\"name\">contract_indep_diff_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L256-L258","name":"Matroid.IsBasis.contract_indep_diff_iff","line":256,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_indep_diff_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_indep_diff_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis</span>.<span class=\"name\">contract_indep_diff_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L252-L254","name":"Matroid.IsBasis.contract_indep_iff_of_disjoint","line":252,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_indep_iff_of_disjoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_indep_iff_of_disjoint\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis</span>.<span class=\"name\">contract_indep_iff_of_disjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hdj</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">X</span> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L248-L250","name":"Matroid.IsBasis.contract_dep_iff","line":248,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_dep_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_dep_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis</span>.<span class=\"name\">contract_dep_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Dep\">Dep</a></span> <span class=\"fn\">D</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Dep\">Dep</a></span> (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">X</span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L243-L246","name":"Matroid.IsBasis'.contract_dep_iff","line":243,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_dep_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_dep_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis'</span>.<span class=\"name\">contract_dep_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Dep\">Dep</a></span> <span class=\"fn\">D</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Dep\">Dep</a></span> (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">X</span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L239-L241","name":"Matroid.IsBasis.contract_indep_iff","line":239,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_indep_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_indep_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis</span>.<span class=\"name\">contract_indep_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">X</span> <span class=\"fn\">J</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L233-L237","name":"Matroid.IsBasis'.contract_indep_iff","line":233,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_indep_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_indep_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis'</span>.<span class=\"name\">contract_indep_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">X</span> <span class=\"fn\">J</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L228-L231","name":"Matroid.IsBasis'.contract_eq_contract_delete","line":228,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_eq_contract_delete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_eq_contract_delete\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis'</span>.<span class=\"name\">contract_eq_contract_delete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L222-L226","name":"Matroid.IsBasis.contract_isBasis_union_union","line":222,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_isBasis_union_union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_isBasis_union_union\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis</span>.<span class=\"name\">contract_isBasis_union_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>) (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJI</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">J</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hXI</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">X</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">J</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L217-L220","name":"Matroid.IsBasis'.contract_isBasis_union_union","line":217,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_isBasis_union_union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_isBasis_union_union\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis'</span>.<span class=\"name\">contract_isBasis_union_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>) (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJI</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">J</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hXI</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">X</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> <span class=\"fn\">J</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L208-L215","name":"Matroid.IsBasis.contract_diff_isBasis_diff","line":208,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_diff_isBasis_diff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_diff_isBasis_diff\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis</span>.<span class=\"name\">contract_diff_isBasis_diff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hIX</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJY</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">J</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hIJ</span> : <span class=\"fn\">I</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span>) (<span class=\"fn\">Y</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">X</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L203-L206","name":"Matroid.IsBasis.contract_isBasis_diff_diff_of_subset","line":203,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_isBasis_diff_diff_of_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_isBasis_diff_diff_of_subset\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis</span>.<span class=\"name\">contract_isBasis_diff_diff_of_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hIX</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJI</span> : <span class=\"fn\">J</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">J</span>) (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">J</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L198-L201","name":"Matroid.IsBasis'.contract_isBasis'_diff_of_subset","line":198,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_isBasis'_diff_of_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_isBasis'_diff_of_subset\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis'</span>.<span class=\"name\">contract_isBasis'_diff_of_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hIX</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJI</span> : <span class=\"fn\">J</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">J</span>) <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L188-L196","name":"Matroid.IsBasis'.contract_isBasis'_diff_diff_of_subset","line":188,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_isBasis'_diff_diff_of_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis'.contract_isBasis'_diff_diff_of_subset\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis'</span>.<span class=\"name\">contract_isBasis'_diff_diff_of_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hIX</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJI</span> : <span class=\"fn\">J</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis'\">IsBasis'</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">J</span>) (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">J</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L177-L186","name":"Matroid.Indep.union_isBasis_union_of_contract_isBasis","line":177,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Indep.union_isBasis_union_of_contract_isBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Indep.union_isBasis_union_of_contract_isBasis\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">union_isBasis_union_of_contract_isBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hB</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">J</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>) (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L164-L175","name":"Matroid.IsBasis.contract_eq_contract_delete","line":164,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_eq_contract_delete","doc":"Contracting a set is the same as contracting a basis for the set, and deleting the rest. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsBasis.contract_eq_contract_delete\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsBasis</span>.<span class=\"name\">contract_eq_contract_delete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBasis\">IsBasis</a></span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L156-L160","name":"Matroid.Indep.contract_dep_iff","line":156,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Indep.contract_dep_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Indep.contract_dep_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">contract_dep_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Dep\">Dep</a></span> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">J</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Dep\">Dep</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L152-L154","name":"Matroid.Indep.diff_indep_contract_of_subset","line":152,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Indep.diff_indep_contract_of_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Indep.diff_indep_contract_of_subset\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">diff_indep_contract_of_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hIJ</span> : <span class=\"fn\">I</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L148-L150","name":"Matroid.Indep.union_indep_iff_contract_indep","line":148,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Indep.union_indep_iff_contract_indep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Indep.union_indep_iff_contract_indep\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">union_indep_iff_contract_indep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">I</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">J</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L144-L146","name":"Matroid.IsNonloop.contractElem_indep_iff","line":144,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsNonloop.contractElem_indep_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.IsNonloop.contractElem_indep_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">IsNonloop</span>.<span class=\"name\">contractElem_indep_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">he</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Loop.html#Matroid.IsNonloop\">IsNonloop</a></span> <span class=\"fn\">e</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">e</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> <span class=\"fn\">(<a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L136-L142","name":"Matroid.Indep.contract_indep_iff","line":136,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Indep.contract_indep_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Indep.contract_indep_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">contract_indep_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">J</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> (<span class=\"fn\">J</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L126-L134","name":"Matroid.Indep.contract_isBase_iff","line":126,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Indep.contract_isBase_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Indep.contract_isBase_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">contract_isBase_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.Indep\">Indep</a></span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBase\">IsBase</a></span> <span class=\"fn\">B</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.IsBase\">IsBase</a></span> (<span class=\"fn\">B</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">I</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">B</span> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L122-L124","name":"Matroid.contract_isCocircuit_iff","line":122,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_isCocircuit_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_isCocircuit_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_isCocircuit_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCocircuit\">IsCocircuit</a></span> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Circuit.html#Matroid.IsCocircuit\">IsCocircuit</a></span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">K</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L118-L120","name":"Matroid.Coindep.coindep_contract_of_disjoint","line":118,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Coindep.coindep_contract_of_disjoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.Coindep.coindep_contract_of_disjoint\"><span class=\"name\">Matroid</span>.<span class=\"name\">Coindep</span>.<span class=\"name\">coindep_contract_of_disjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\">Coindep</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hXC</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">X</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\">Coindep</a></span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L115-L116","name":"Matroid.coindep_contract_iff","line":115,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.coindep_contract_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.coindep_contract_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">coindep_contract_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\">Coindep</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.Coindep\">Coindep</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">X</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L109-L111","name":"Matroid.contract_ground_subset_ground","line":109,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_ground_subset_ground","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_ground_subset_ground\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_ground_subset_ground</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.E\">E</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.E\">E</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L106-L107","name":"Matroid.contract_inter_ground_eq","line":106,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_inter_ground_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_inter_ground_eq\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_inter_ground_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> (<span class=\"fn\">C</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.E\">E</a></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L103-L104","name":"Matroid.contract_eq_contract_iff","line":103,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_eq_contract_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_eq_contract_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_eq_contract_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C₁ </span><span class=\"fn\">C₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">C₁</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.E\">E</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C₂</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.E\">E</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L99-L101","name":"Matroid.contract_contract_eq_contract_diff","line":99,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_contract_eq_contract_diff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_contract_eq_contract_diff\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_contract_eq_contract_diff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C₁ </span><span class=\"fn\">C₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C₁</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C₁</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> (<span class=\"fn\">C₂</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C₁</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L96-L97","name":"Matroid.contract_empty","line":96,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_empty\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">M</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L93-L94","name":"Matroid.contractElem_eq_self","line":93,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contractElem_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contractElem_eq_self\"><span class=\"name\">Matroid</span>.<span class=\"name\">contractElem_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">he</span> : <span class=\"fn\"><span class=\"fn\">e</span> ∉ <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.E\">E</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">e</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">M</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L90-L91","name":"Matroid.contract_eq_self_iff","line":90,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_eq_self_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_eq_self_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_eq_self_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">M</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">C</span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.E\">E</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L87-L88","name":"Matroid.dual_delete_contract","line":87,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.dual_delete_contract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.dual_delete_contract\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_delete_contract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">Y</span>)</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">✶</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">✶</a>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L84-L85","name":"Matroid.dual_contract_delete","line":84,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.dual_contract_delete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.dual_contract_delete\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_contract_delete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">Y</span>)</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">✶</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">✶</a>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L81-L82","name":"Matroid.contract_comm","line":81,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_comm\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C₁ </span><span class=\"fn\">C₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C₁</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C₂</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L77-L79","name":"Matroid.contract_contract","line":77,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_contract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_contract\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_contract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C₁ </span><span class=\"fn\">C₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C₁</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> (<span class=\"fn\">C₁</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">C₂</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L74-L75","name":"Matroid.dual_contract_dual","line":74,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.dual_contract_dual","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.dual_contract_dual\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_contract_dual</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">✶</a>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span>)</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">✶</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L70-L72","name":"Matroid.dual_contract","line":70,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.dual_contract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.dual_contract\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_contract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span>)</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">✶</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">✶</a>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L66-L68","name":"Matroid.dual_delete","line":66,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.dual_delete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.dual_delete\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_delete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">X</span>)</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">✶</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">✶</a>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L64-L64","name":"Matroid.dual_delete_dual","line":64,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.dual_delete_dual","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.dual_delete_dual\"><span class=\"name\">Matroid</span>.<span class=\"name\">dual_delete_dual</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">✶</a>.<a href=\"./Mathlib/Data/Matroid/Minor/Delete.html#Matroid.delete\">delete</a></span> <span class=\"fn\">X</span>)</span><a href=\"./Mathlib/Data/Matroid/Dual.html#Matroid.dual\">✶</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L62-L62","name":"Matroid.contract_ground","line":62,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_ground","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract_ground\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract_ground</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\">contract</a></span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.E\">E</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid.E\">E</a></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L59-L60","name":"Matroid.«term_／_»","line":59,"kind":"def","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.«term_／_»","doc":"`M ／ C` refers to the contraction of a set `C` from the matroid `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.«term_／_»\"><span class=\"name\">Matroid</span>.<span class=\"name\">«term_／_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Matroid/Minor/Contract.lean#L53-L57","name":"Matroid.contract","line":53,"kind":"def","docLink":"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract","doc":"The contraction `M ／ C` is the matroid on `M.E \\ C` in which a set `I ⊆ M.E \\ C` is independent\nif and only if `I ∪ J` is independent, where `J` is an arbitrarily chosen basis for `C`.\nIt is also equal by definition to `(M✶ ＼ C)✶`; see `Matroid.IsBasis.contract_indep_iff` for\na proof that its independent sets are the claimed ones. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Minor/Contract.html#Matroid.contract\"><span class=\"name\">Matroid</span>.<span class=\"name\">contract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span></div></div>"}]}