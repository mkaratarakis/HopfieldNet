{"name":"Mathlib.MeasureTheory.Integral.Average","instances":[],"imports":["Init","Mathlib.MeasureTheory.Integral.Bochner.ContinuousLinearMap"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L757-L816","name":"MeasureTheory.tendsto_integral_smul_of_tendsto_average_norm_sub","line":757,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.tendsto_integral_smul_of_tendsto_average_norm_sub","doc":"If the average of a function `f` along a sequence of sets `aₙ` converges to `c` (more precisely,\nwe require that `⨍ y in a i, ‖f y - c‖ ∂μ` tends to `0`), then the integral of `gₙ • f` also tends\nto `c` if `gₙ` is supported in `aₙ`, has integral converging to one and supremum at most `K / μ aₙ`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.tendsto_integral_smul_of_tendsto_average_norm_sub\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">tendsto_integral_smul_of_tendsto_average_norm_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">y</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\"><span class=\"fn\">a</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_int</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">a</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">μ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">y</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span> <span class=\"fn\">y</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">1</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g_supp</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Support.html#Function.support\">Function.support</a> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">a</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g_bound</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <span class=\"fn\">(<span class=\"fn\">a</span> <span class=\"fn\">i</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">y</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span> <span class=\"fn\">y</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L747-L752","name":"MeasureTheory.exists_not_mem_null_lintegral_le","line":747,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_lintegral_le","doc":"**First moment method**. The maximum of a measurable function is greater than its integral,\nwhile avoiding a null set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_lintegral_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_not_mem_null_lintegral_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hN</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∉ <span class=\"fn\">N</span>, <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L740-L745","name":"MeasureTheory.exists_not_mem_null_le_lintegral","line":740,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_le_lintegral","doc":"**First moment method**. The minimum of a measurable function is smaller than its integral,\nwhile avoiding a null set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_le_lintegral\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_not_mem_null_le_lintegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hN</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∉ <span class=\"fn\">N</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L735-L738","name":"MeasureTheory.exists_lintegral_le","line":735,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_lintegral_le","doc":"**First moment method**. The maximum of a measurable function is greater than its integral. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_lintegral_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_lintegral_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L731-L733","name":"MeasureTheory.exists_le_lintegral","line":731,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_le_lintegral","doc":"**First moment method**. The minimum of a measurable function is smaller than its integral. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_le_lintegral\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_le_lintegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L725-L729","name":"MeasureTheory.measure_lintegral_le_pos","line":725,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_lintegral_le_pos","doc":"**First moment method**. A measurable function is greater than its integral on a set f\npositive measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_lintegral_le_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_lintegral_le_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L719-L723","name":"MeasureTheory.measure_le_lintegral_pos","line":719,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_le_lintegral_pos","doc":"**First moment method**. A measurable function is smaller than its integral on a set f\npositive measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_le_lintegral_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_le_lintegral_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L704-L711","name":"MeasureTheory.exists_not_mem_null_le_laverage","line":704,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_le_laverage","doc":"**First moment method**. The minimum of a measurable function is smaller than its mean, while\navoiding a null set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_le_laverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_not_mem_null_le_laverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hN</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∉ <span class=\"fn\">N</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L699-L702","name":"MeasureTheory.exists_le_laverage","line":699,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_le_laverage","doc":"**First moment method**. The minimum of a measurable function is smaller than its mean. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_le_laverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_le_laverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L692-L697","name":"MeasureTheory.measure_le_laverage_pos","line":692,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_le_laverage_pos","doc":"**First moment method**. A measurable function is smaller than its mean on a set of positive\nmeasure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_le_laverage_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_le_laverage_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L680-L687","name":"MeasureTheory.exists_not_mem_null_laverage_le","line":680,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_laverage_le","doc":"**First moment method**. The maximum of a measurable function is greater than its mean, while\navoiding a null set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_laverage_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_not_mem_null_laverage_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hN</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∉ <span class=\"fn\">N</span>, <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L675-L678","name":"MeasureTheory.exists_laverage_le","line":675,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_laverage_le","doc":"**First moment method**. The maximum of a measurable function is greater than its mean. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_laverage_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_laverage_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L668-L673","name":"MeasureTheory.measure_laverage_le_pos","line":668,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_laverage_le_pos","doc":"**First moment method**. A measurable function is greater than its mean on a set of positive\nmeasure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_laverage_le_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_laverage_le_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L666-L666","name":"MeasureTheory.exists_setLaverage_le","line":666,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_setLaverage_le","doc":"**Alias** of `MeasureTheory.exists_setLAverage_le`.\n\n---\n\n**First moment method**. The maximum of a measurable function is greater than its mean. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_setLaverage_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_setLaverage_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L660-L664","name":"MeasureTheory.exists_setLAverage_le","line":660,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_setLAverage_le","doc":"**First moment method**. The maximum of a measurable function is greater than its mean. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_setLAverage_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_setLAverage_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L658-L658","name":"MeasureTheory.exists_le_setLaverage","line":658,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_le_setLaverage","doc":"**Alias** of `MeasureTheory.exists_le_setLAverage`.\n\n---\n\n**First moment method**. The minimum of a measurable function is smaller than its mean. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_le_setLaverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_le_setLaverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ₁</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">s</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L652-L656","name":"MeasureTheory.exists_le_setLAverage","line":652,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_le_setLAverage","doc":"**First moment method**. The minimum of a measurable function is smaller than its mean. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_le_setLAverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_le_setLAverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ₁</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">s</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L650-L650","name":"MeasureTheory.measure_setLaverage_le_pos","line":650,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_setLaverage_le_pos","doc":"**Alias** of `MeasureTheory.measure_setLAverage_le_pos`.\n\n---\n\n**First moment method**. A measurable function is greater than its mean on a set of positive\nmeasure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_setLaverage_le_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_setLaverage_le_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L628-L648","name":"MeasureTheory.measure_setLAverage_le_pos","line":628,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_setLAverage_le_pos","doc":"**First moment method**. A measurable function is greater than its mean on a set of positive\nmeasure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_setLAverage_le_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_setLAverage_le_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L626-L626","name":"MeasureTheory.measure_le_setLaverage_pos","line":626,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_le_setLaverage_pos","doc":"**Alias** of `MeasureTheory.measure_le_setLAverage_pos`.\n\n---\n\n**First moment method**. A measurable function is smaller than its mean on a set of positive\nmeasure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_le_setLaverage_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_le_setLaverage_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ₁</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">s</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L607-L624","name":"MeasureTheory.measure_le_setLAverage_pos","line":607,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_le_setLAverage_pos","doc":"**First moment method**. A measurable function is smaller than its mean on a set of positive\nmeasure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_le_setLAverage_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_le_setLAverage_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ₁</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">s</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L594-L599","name":"MeasureTheory.exists_not_mem_null_integral_le","line":594,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_integral_le","doc":"**First moment method**. The maximum of an integrable function is greater than its integral,\nwhile avoiding a null set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_integral_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_not_mem_null_integral_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hN</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∉ <span class=\"fn\">N</span>, <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L587-L592","name":"MeasureTheory.exists_not_mem_null_le_integral","line":587,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_le_integral","doc":"**First moment method**. The minimum of an integrable function is smaller than its integral,\nwhile avoiding a null set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_le_integral\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_not_mem_null_le_integral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hN</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∉ <span class=\"fn\">N</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L583-L585","name":"MeasureTheory.exists_integral_le","line":583,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_integral_le","doc":"**First moment method**. The maximum of an integrable function is greater than its integral. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_integral_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_integral_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L579-L581","name":"MeasureTheory.exists_le_integral","line":579,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_le_integral","doc":"**First moment method**. The minimum of an integrable function is smaller than its integral. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_le_integral\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_le_integral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L573-L577","name":"MeasureTheory.measure_integral_le_pos","line":573,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_integral_le_pos","doc":"**First moment method**. An integrable function is greater than its integral on a set of\npositive measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_integral_le_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_integral_le_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L567-L571","name":"MeasureTheory.measure_le_integral_pos","line":567,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_le_integral_pos","doc":"**First moment method**. An integrable function is smaller than its integral on a set of\npositive measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_le_integral_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_le_integral_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L555-L559","name":"MeasureTheory.exists_not_mem_null_average_le","line":555,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_average_le","doc":"**First moment method**. The maximum of an integrable function is greater than its mean, while\navoiding a null set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_average_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_not_mem_null_average_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hN</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∉ <span class=\"fn\">N</span>, <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L546-L553","name":"MeasureTheory.exists_not_mem_null_le_average","line":546,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_le_average","doc":"**First moment method**. The minimum of an integrable function is smaller than its mean, while\navoiding a null set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_not_mem_null_le_average\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_not_mem_null_le_average</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hN</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∉ <span class=\"fn\">N</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L541-L544","name":"MeasureTheory.exists_average_le","line":541,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_average_le","doc":"**First moment method**. The maximum of an integrable function is greater than its mean. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_average_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_average_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L536-L539","name":"MeasureTheory.exists_le_average","line":536,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_le_average","doc":"**First moment method**. The minimum of an integrable function is smaller than its mean. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_le_average\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_le_average</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L529-L534","name":"MeasureTheory.measure_average_le_pos","line":529,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_average_le_pos","doc":"**First moment method**. An integrable function is greater than its mean on a set of positive\nmeasure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_average_le_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_average_le_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L522-L527","name":"MeasureTheory.measure_le_average_pos","line":522,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_le_average_pos","doc":"**First moment method**. An integrable function is smaller than its mean on a set of positive\nmeasure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_le_average_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_le_average_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L512-L516","name":"MeasureTheory.exists_setAverage_le","line":512,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_setAverage_le","doc":"**First moment method**. The maximum of an integrable function is greater than its mean. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_setAverage_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_setAverage_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ₁</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L506-L510","name":"MeasureTheory.exists_le_setAverage","line":506,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_le_setAverage","doc":"**First moment method**. The minimum of an integrable function is smaller than its mean. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.exists_le_setAverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_le_setAverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ₁</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L500-L504","name":"MeasureTheory.measure_setAverage_le_pos","line":500,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_setAverage_le_pos","doc":"**First moment method**. An integrable function is greater than its mean on a set of positive\nmeasure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_setAverage_le_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_setAverage_le_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ₁</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L481-L498","name":"MeasureTheory.measure_le_setAverage_pos","line":481,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_le_setAverage_pos","doc":"**First moment method**. An integrable function is smaller than its mean on a set of positive\nmeasure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_le_setAverage_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_le_setAverage_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ₁</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L474-L474","name":"MeasureTheory.toReal_setLaverage","line":474,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.toReal_setLaverage","doc":"**Alias** of `MeasureTheory.toReal_setLAverage`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.toReal_setLaverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">toReal_setLaverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">s</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf'</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">s</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L469-L472","name":"MeasureTheory.toReal_setLAverage","line":469,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.toReal_setLAverage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.toReal_setLAverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">toReal_setLAverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">s</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf'</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">s</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L464-L467","name":"MeasureTheory.toReal_laverage","line":464,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.toReal_laverage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.toReal_laverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">toReal_laverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf'</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L460-L462","name":"MeasureTheory.ofReal_setAverage","line":460,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.ofReal_setAverage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.ofReal_setAverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ofReal_setAverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf₀</span> : <span class=\"fn\">0</span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyLE\">≤ᶠ[</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/OuterMeasure/AE.html#MeasureTheory.ae\">ae</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">s</span>)</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyLE\">]</a> <span class=\"fn\">f</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L452-L458","name":"MeasureTheory.ofReal_average","line":452,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.ofReal_average","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.ofReal_average\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ofReal_average</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf₀</span> : <span class=\"fn\">0</span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyLE\">≤ᶠ[</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/OuterMeasure/AE.html#MeasureTheory.ae\">ae</a> <span class=\"fn\">μ</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyLE\">]</a> <span class=\"fn\">f</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L445-L448","name":"MeasureTheory.setIntegral_setAverage_sub","line":445,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setIntegral_setAverage_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setIntegral_setAverage_sub\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setIntegral_setAverage_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L441-L443","name":"MeasureTheory.integral_average_sub","line":441,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.integral_average_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.integral_average_sub\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">integral_average_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L436-L439","name":"MeasureTheory.setAverage_sub_setAverage","line":436,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setAverage_sub_setAverage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setAverage_sub_setAverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setAverage_sub_setAverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L428-L434","name":"MeasureTheory.integral_sub_average","line":428,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.integral_sub_average","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.integral_sub_average\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">integral_sub_average</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L424-L426","name":"MeasureTheory.setIntegral_setAverage","line":424,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setIntegral_setAverage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setIntegral_setAverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setIntegral_setAverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L421-L422","name":"MeasureTheory.integral_average","line":421,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.integral_average","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.integral_average\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">integral_average</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L417-L419","name":"MeasureTheory.setAverage_const","line":417,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setAverage_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setAverage_const\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setAverage_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs₀</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\">c</span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L412-L415","name":"MeasureTheory.average_const","line":412,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_const\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">_x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\">c</span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L403-L408","name":"MeasureTheory.average_mem_openSegment_compl_self","line":403,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_mem_openSegment_compl_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_mem_openSegment_compl_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average_mem_openSegment_compl_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs₀</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsc₀</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfi</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Segment.html#openSegment\">openSegment</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L387-L401","name":"MeasureTheory.average_union_mem_segment","line":387,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_union_mem_segment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_union_mem_segment\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average_union_mem_segment</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AEDisjoint.html#MeasureTheory.AEDisjoint\">AEDisjoint</a> <span class=\"fn\">μ</span> <span class=\"fn\">s</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">t</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">htμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hft</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">t</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Segment.html#segment\">segment</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L378-L385","name":"MeasureTheory.average_union_mem_openSegment","line":378,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_union_mem_openSegment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_union_mem_openSegment\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average_union_mem_openSegment</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AEDisjoint.html#MeasureTheory.AEDisjoint\">AEDisjoint</a> <span class=\"fn\">μ</span> <span class=\"fn\">s</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">t</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs₀</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht₀</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">htμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hft</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">t</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Segment.html#openSegment\">openSegment</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L369-L376","name":"MeasureTheory.average_union","line":369,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_union\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AEDisjoint.html#MeasureTheory.AEDisjoint\">AEDisjoint</a> <span class=\"fn\">μ</span> <span class=\"fn\">s</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">t</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">htμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hft</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">t</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <span class=\"fn\">t</span></span>)) <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <span class=\"fn\">t</span></span>)) <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L364-L367","name":"MeasureTheory.measure_smul_setAverage","line":364,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_smul_setAverage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_smul_setAverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_smul_setAverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <span class=\"fn\">s</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L359-L362","name":"MeasureTheory.average_pair","line":359,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_pair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_pair\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfi</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hgi</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">g</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L350-L357","name":"MeasureTheory.average_add_measure","line":350,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_add_measure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_add_measure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average_add_measure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ν</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">ν</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a>(<span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">ν</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ν</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span>)) <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ν</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ν</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span>)) <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">ν</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L347-L348","name":"MeasureTheory.setAverage_congr_fun","line":347,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setAverage_congr_fun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setAverage_congr_fun\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setAverage_congr_fun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L344-L345","name":"MeasureTheory.setAverage_congr","line":344,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setAverage_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setAverage_congr\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setAverage_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/OuterMeasure/AE.html#MeasureTheory.ae\">ae</a> <span class=\"fn\">μ</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L341-L342","name":"MeasureTheory.average_congr","line":341,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_congr\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/OuterMeasure/AE.html#MeasureTheory.ae\">ae</a> <span class=\"fn\">μ</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L335-L337","name":"MeasureTheory.setAverage_eq'","line":335,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setAverage_eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setAverage_eq'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setAverage_eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">(<span class=\"fn\">μ</span> <span class=\"fn\">s</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L331-L333","name":"MeasureTheory.setAverage_eq","line":331,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setAverage_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setAverage_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setAverage_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <span class=\"fn\">s</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L322-L329","name":"MeasureTheory.measure_smul_average","line":322,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_smul_average","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_smul_average\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_smul_average</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L319-L320","name":"MeasureTheory.average_eq_integral","line":319,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_eq_integral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_eq_integral\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average_eq_integral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L316-L317","name":"MeasureTheory.average_eq","line":316,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L313-L314","name":"MeasureTheory.average_eq'","line":313,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_eq'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average_eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner/Basic.html#MeasureTheory.integral\">∂</a><span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L309-L311","name":"MeasureTheory.average_neg","line":309,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_neg\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L305-L307","name":"MeasureTheory.average_zero_measure","line":305,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_zero_measure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_zero_measure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average_zero_measure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L302-L303","name":"MeasureTheory.average_zero","line":302,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average_zero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">⨍</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">,</a> <span class=\"fn\">0</span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L295-L300","name":"MeasureTheory.«term⨍_In_,_»","line":295,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_In_,_»","doc":"Average value of a function `f` w.r.t. to the standard measure on a set `s`.\n\nIt is equal to `(volume.real s)⁻¹ * ∫ x, f x`, so it takes value zero `f` is not integrable on `s`\nor if `s` has infinite measure. If `s` has measure `1`, then the average of any function is equal to\nits integral. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_In_,_»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍_In_,_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L295-L300","name":"MeasureTheory.«term⨍_In_,_».«delab_app.MeasureTheory.average»","line":295,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_In_,_».«delab_app.MeasureTheory.average»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_In_,_».«delab_app.MeasureTheory.average»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍_In_,_»</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">MeasureTheory</span>.<span class=\"name\">average»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L286-L293","name":"MeasureTheory.«term⨍_In_,_∂_»","line":286,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_In_,_∂_»","doc":"Average value of a function `f` w.r.t. a measure `μ` on a set `s`.\n\nIt is equal to `(μ.real s)⁻¹ * ∫ x, f x ∂μ`, so it takes value zero if `f` is not integrable on\n`s` or if `s` has infinite measure. If `s` has measure `1`, then the average of any function is\nequal to its integral.\n\nFor the average w.r.t. the volume, one can omit `∂volume`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_In_,_∂_»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍_In_,_∂_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L286-L293","name":"MeasureTheory.«term⨍_In_,_∂_».«delab_app.MeasureTheory.average»","line":286,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_In_,_∂_».«delab_app.MeasureTheory.average»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_In_,_∂_».«delab_app.MeasureTheory.average»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍_In_,_∂_»</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">MeasureTheory</span>.<span class=\"name\">average»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L277-L284","name":"MeasureTheory.«term⨍_,_».«delab_app.MeasureTheory.average»","line":277,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_,_».«delab_app.MeasureTheory.average»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_,_».«delab_app.MeasureTheory.average»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍_,_»</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">MeasureTheory</span>.<span class=\"name\">average»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L277-L284","name":"MeasureTheory.«term⨍_,_»","line":277,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_,_»","doc":"Average value of a function `f` w.r.t. to the standard measure.\n\nIt is equal to `(volume.real univ)⁻¹ * ∫ x, f x`, so it takes value zero if `f` is not integrable\nor if the space has infinite measure. In a probability space, the average of any function is equal\nto its integral.\n\nFor the average on a set, use `⨍ x in s, f x`, defined as `⨍ x, f x ∂(volume.restrict s)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_,_»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍_,_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L267-L275","name":"MeasureTheory.«term⨍_,_∂_»","line":267,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_,_∂_»","doc":"Average value of a function `f` w.r.t. a measure `μ`.\n\nIt is equal to `(μ.real univ)⁻¹ • ∫ x, f x ∂μ`, so it takes value zero if `f` is not integrable or\nif `μ` is an infinite measure. If `μ` is a probability measure, then the average of any function is\nequal to its integral.\n\nFor the average on a set, use `⨍ x in s, f x ∂μ`, defined as `⨍ x, f x ∂(μ.restrict s)`. For the\naverage w.r.t. the volume, one can omit `∂volume`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_,_∂_»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍_,_∂_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L267-L275","name":"MeasureTheory.«term⨍_,_∂_».«delab_app.MeasureTheory.average»","line":267,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_,_∂_».«delab_app.MeasureTheory.average»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍_,_∂_».«delab_app.MeasureTheory.average»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍_,_∂_»</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">MeasureTheory</span>.<span class=\"name\">average»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L256-L265","name":"MeasureTheory.average","line":256,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average","doc":"Average value of a function `f` w.r.t. a measure `μ`, denoted `⨍ x, f x ∂μ`.\n\nIt is equal to `(μ.real univ)⁻¹ • ∫ x, f x ∂μ`, so it takes value zero if `f` is not integrable or\nif `μ` is an infinite measure. If `μ` is a probability measure, then the average of any function is\nequal to its integral.\n\nFor the average on a set, use `⨍ x in s, f x ∂μ`, defined as `⨍ x, f x ∂(μ.restrict s)`. For the\naverage w.r.t. the volume, one can omit `∂volume`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">average</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">E</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L247-L247","name":"MeasureTheory.setLintegral_setLaverage","line":247,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLintegral_setLaverage","doc":"**Alias** of `MeasureTheory.setLIntegral_setLAverage`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLintegral_setLaverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLintegral_setLaverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">_x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L243-L245","name":"MeasureTheory.setLIntegral_setLAverage","line":243,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLIntegral_setLAverage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLIntegral_setLAverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLIntegral_setLAverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">_x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L239-L241","name":"MeasureTheory.lintegral_laverage","line":239,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.lintegral_laverage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.lintegral_laverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">lintegral_laverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">_x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L232-L237","name":"MeasureTheory.laverage_mul_measure_univ","line":232,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_mul_measure_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_mul_measure_univ\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_mul_measure_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L230-L230","name":"MeasureTheory.setLaverage_one","line":230,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLaverage_one","doc":"**Alias** of `MeasureTheory.setLAverage_one`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLaverage_one\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLaverage_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs₀</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">_x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\">1</span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L227-L228","name":"MeasureTheory.setLAverage_one","line":227,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLAverage_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLAverage_one\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLAverage_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs₀</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">_x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\">1</span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L224-L225","name":"MeasureTheory.laverage_one","line":224,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_one\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">_x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\">1</span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L222-L222","name":"MeasureTheory.setLaverage_const","line":222,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLaverage_const","doc":"**Alias** of `MeasureTheory.setLAverage_const`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLaverage_const\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLaverage_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs₀</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">_x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\">c</span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L218-L220","name":"MeasureTheory.setLAverage_const","line":218,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLAverage_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLAverage_const\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLAverage_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs₀</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">_x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\">c</span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L213-L216","name":"MeasureTheory.laverage_const","line":213,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_const\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">_x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\">c</span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L206-L211","name":"MeasureTheory.laverage_mem_openSegment_compl_self","line":206,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_mem_openSegment_compl_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_mem_openSegment_compl_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_mem_openSegment_compl_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs₀</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsc₀</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Segment.html#openSegment\">openSegment</a> <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L194-L204","name":"MeasureTheory.laverage_union_mem_segment","line":194,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_union_mem_segment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_union_mem_segment\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_union_mem_segment</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AEDisjoint.html#MeasureTheory.AEDisjoint\">AEDisjoint</a> <span class=\"fn\">μ</span> <span class=\"fn\">s</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">t</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">htμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Segment.html#segment\">segment</a> <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L185-L192","name":"MeasureTheory.laverage_union_mem_openSegment","line":185,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_union_mem_openSegment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_union_mem_openSegment\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_union_mem_openSegment</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AEDisjoint.html#MeasureTheory.AEDisjoint\">AEDisjoint</a> <span class=\"fn\">μ</span> <span class=\"fn\">s</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">t</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs₀</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht₀</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">htμ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Segment.html#openSegment\">openSegment</a> <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L180-L183","name":"MeasureTheory.laverage_union","line":180,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_union\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AEDisjoint.html#MeasureTheory.AEDisjoint\">AEDisjoint</a> <span class=\"fn\">μ</span> <span class=\"fn\">s</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">t</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">t</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">t</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L178-L178","name":"MeasureTheory.measure_mul_setLaverage","line":178,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_mul_setLaverage","doc":"**Alias** of `MeasureTheory.measure_mul_setLAverage`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_mul_setLaverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_mul_setLaverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L173-L176","name":"MeasureTheory.measure_mul_setLAverage","line":173,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_mul_setLAverage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_mul_setLAverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_mul_setLAverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L160-L171","name":"MeasureTheory.laverage_add_measure","line":160,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_add_measure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_add_measure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_add_measure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ </span><span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a>(<span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">ν</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">ν</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><span class=\"fn\">ν</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">ν</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">ν</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L158-L158","name":"MeasureTheory.setLaverage_lt_top","line":158,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLaverage_lt_top","doc":"**Alias** of `MeasureTheory.setLAverage_lt_top`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLaverage_lt_top\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLaverage_lt_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L155-L156","name":"MeasureTheory.setLAverage_lt_top","line":155,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLAverage_lt_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLAverage_lt_top\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLAverage_lt_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L149-L153","name":"MeasureTheory.laverage_lt_top","line":149,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_lt_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_lt_top\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_lt_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L147-L147","name":"MeasureTheory.setLaverage_congr_fun","line":147,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLaverage_congr_fun","doc":"**Alias** of `MeasureTheory.setLAverage_congr_fun`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLaverage_congr_fun\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLaverage_congr_fun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L143-L145","name":"MeasureTheory.setLAverage_congr_fun","line":143,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLAverage_congr_fun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLAverage_congr_fun\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLAverage_congr_fun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L141-L141","name":"MeasureTheory.setLaverage_congr","line":141,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLaverage_congr","doc":"**Alias** of `MeasureTheory.setLAverage_congr`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLaverage_congr\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLaverage_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/OuterMeasure/AE.html#MeasureTheory.ae\">ae</a> <span class=\"fn\">μ</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L138-L139","name":"MeasureTheory.setLAverage_congr","line":138,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLAverage_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLAverage_congr\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLAverage_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/OuterMeasure/AE.html#MeasureTheory.ae\">ae</a> <span class=\"fn\">μ</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L135-L136","name":"MeasureTheory.laverage_congr","line":135,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_congr\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/OuterMeasure/AE.html#MeasureTheory.ae\">ae</a> <span class=\"fn\">μ</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L131-L131","name":"MeasureTheory.setLaverage_eq'","line":131,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLaverage_eq'","doc":"**Alias** of `MeasureTheory.setLAverage_eq'`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLaverage_eq'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLaverage_eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">(<span class=\"fn\">μ</span> <span class=\"fn\">s</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L127-L129","name":"MeasureTheory.setLAverage_eq'","line":127,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLAverage_eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLAverage_eq'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLAverage_eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">(<span class=\"fn\">μ</span> <span class=\"fn\">s</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L125-L125","name":"MeasureTheory.setLaverage_eq","line":125,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLaverage_eq","doc":"**Alias** of `MeasureTheory.setLAverage_eq`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLaverage_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLaverage_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L122-L123","name":"MeasureTheory.setLAverage_eq","line":122,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLAverage_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.setLAverage_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">setLAverage_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L115-L120","name":"MeasureTheory.measure_mul_laverage","line":115,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_mul_laverage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.measure_mul_laverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">measure_mul_laverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L112-L113","name":"MeasureTheory.laverage_eq_lintegral","line":112,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_eq_lintegral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_eq_lintegral\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_eq_lintegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L109-L110","name":"MeasureTheory.laverage_eq","line":109,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">μ</span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L107-L107","name":"MeasureTheory.laverage_eq'","line":107,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_eq'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue/Basic.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L104-L105","name":"MeasureTheory.laverage_zero_measure","line":104,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_zero_measure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_zero_measure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_zero_measure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L101-L102","name":"MeasureTheory.laverage_zero","line":101,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage_zero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">⨍⁻</a> (<span class=\"fn\">_x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">,</a> <span class=\"fn\">0</span> <a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\">∂</a><span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L94-L99","name":"MeasureTheory.«term⨍⁻_In_,_»","line":94,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍⁻_In_,_»","doc":"Average value of an `ℝ≥0∞`-valued function `f` w.r.t. to the standard measure on a set `s`.\n\nIt is equal to `(volume s)⁻¹ * ∫⁻ x, f x`, so it takes value zero if `s` has infinite measure. If\n`s` has measure `1`, then the average of any function is equal to its integral. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍⁻_In_,_»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍⁻_In_,_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L86-L92","name":"MeasureTheory.«term⨍⁻_In_,_∂_»","line":86,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍⁻_In_,_∂_»","doc":"Average value of an `ℝ≥0∞`-valued function `f` w.r.t. a measure `μ` on a set `s`.\n\nIt is equal to `(μ s)⁻¹ * ∫⁻ x, f x ∂μ`, so it takes value zero if `s` has infinite measure. If `s`\nhas measure `1`, then the average of any function is equal to its integral.\n\nFor the average w.r.t. the volume, one can omit `∂volume`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍⁻_In_,_∂_»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍⁻_In_,_∂_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L86-L92","name":"MeasureTheory.«term⨍⁻_In_,_∂_».«delab_app.MeasureTheory.laverage»","line":86,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍⁻_In_,_∂_».«delab_app.MeasureTheory.laverage»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍⁻_In_,_∂_».«delab_app.MeasureTheory.laverage»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍⁻_In_,_∂_»</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L78-L84","name":"MeasureTheory.«term⨍⁻_,_».«delab_app.MeasureTheory.laverage»","line":78,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍⁻_,_».«delab_app.MeasureTheory.laverage»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍⁻_,_».«delab_app.MeasureTheory.laverage»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍⁻_,_»</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L78-L84","name":"MeasureTheory.«term⨍⁻_,_»","line":78,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍⁻_,_»","doc":"Average value of an `ℝ≥0∞`-valued function `f` w.r.t. to the standard measure.\n\nIt is equal to `(volume univ)⁻¹ * ∫⁻ x, f x`, so it takes value zero if the space has infinite\nmeasure. In a probability space, the average of any function is equal to its integral.\n\nFor the average on a set, use `⨍⁻ x in s, f x`, defined as `⨍⁻ x, f x ∂(volume.restrict s)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍⁻_,_»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍⁻_,_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L69-L76","name":"MeasureTheory.«term⨍⁻_,_∂_»","line":69,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍⁻_,_∂_»","doc":"Average value of an `ℝ≥0∞`-valued function `f` w.r.t. a measure `μ`.\n\nIt is equal to `(μ univ)⁻¹ * ∫⁻ x, f x ∂μ`, so it takes value zero if `μ` is an infinite measure. If\n`μ` is a probability measure, then the average of any function is equal to its integral.\n\nFor the average on a set, use `⨍⁻ x in s, f x ∂μ`, defined as `⨍⁻ x, f x ∂(μ.restrict s)`. For the\naverage w.r.t. the volume, one can omit `∂volume`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍⁻_,_∂_»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍⁻_,_∂_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L69-L76","name":"MeasureTheory.«term⨍⁻_,_∂_».«delab_app.MeasureTheory.laverage»","line":69,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍⁻_,_∂_».«delab_app.MeasureTheory.laverage»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.«term⨍⁻_,_∂_».«delab_app.MeasureTheory.laverage»\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">«term⨍⁻_,_∂_»</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/MeasureTheory/Integral/Average.lean#L60-L67","name":"MeasureTheory.laverage","line":60,"kind":"def","docLink":"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage","doc":"Average value of an `ℝ≥0∞`-valued function `f` w.r.t. a measure `μ`, denoted `⨍⁻ x, f x ∂μ`.\n\nIt is equal to `(μ univ)⁻¹ * ∫⁻ x, f x ∂μ`, so it takes value zero if `μ` is an infinite measure. If\n`μ` is a probability measure, then the average of any function is equal to its integral.\n\nFor the average on a set, use `⨍⁻ x in s, f x ∂μ`, defined as `⨍⁻ x, f x ∂(μ.restrict s)`. For the\naverage w.r.t. the volume, one can omit `∂volume`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.laverage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">laverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></div></div>"}]}