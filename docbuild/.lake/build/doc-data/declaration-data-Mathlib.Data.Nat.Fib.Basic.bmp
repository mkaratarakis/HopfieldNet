{"name":"Mathlib.Data.Nat.Fib.Basic","instances":[],"imports":["Init","Mathlib.Data.Finset.NatAntidiagonal","Mathlib.Data.Nat.GCD.Basic","Mathlib.Data.Nat.BinaryRec","Mathlib.Logic.Function.Iterate","Mathlib.Tactic.Ring","Mathlib.Tactic.Zify","Mathlib.Data.Nat.Choose.Basic","Mathlib.Algebra.BigOperators.Group.Finset.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L249-L255","name":"Nat.fib_succ_eq_succ_sum","line":249,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_succ_eq_succ_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_succ_eq_succ_sum\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_succ_eq_succ_sum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L243-L247","name":"Nat.fib_succ_eq_sum_choose","line":243,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_succ_eq_sum_choose","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_succ_eq_sum_choose\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_succ_eq_sum_choose</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">Finset.antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span>.<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L240-L241","name":"Nat.fib_dvd","line":240,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_dvd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L230-L238","name":"Nat.fib_gcd","line":230,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_gcd","doc":"`fib n` is a strong divisibility sequence,\nsee https://proofwiki.org/wiki/GCD_of_Fibonacci_Numbers "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_gcd\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_gcd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">gcd</a></span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">m</span>)</span>.<a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">gcd</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L225-L228","name":"Nat.gcd_fib_add_mul_self","line":225,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.gcd_fib_add_mul_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.gcd_fib_add_mul_self\"><span class=\"name\">Nat</span>.<span class=\"name\">gcd_fib_add_mul_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">m</span>)</span>.<a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">gcd</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">m</span>)</span>.<a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">gcd</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L211-L223","name":"Nat.gcd_fib_add_self","line":211,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.gcd_fib_add_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.gcd_fib_add_self\"><span class=\"name\">Nat</span>.<span class=\"name\">gcd_fib_add_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">m</span>)</span>.<a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">gcd</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">m</span>)</span>.<a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">gcd</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L209-L209","name":"Nat.fast_fib_eq","line":209,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fast_fib_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fast_fib_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">fast_fib_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fastFib\">fastFib</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L201-L207","name":"Nat.fast_fib_aux_eq","line":201,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fast_fib_aux_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fast_fib_aux_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">fast_fib_aux_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fastFibAux\">fastFibAux</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L193-L199","name":"Nat.fast_fib_aux_bit_tt","line":193,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fast_fib_aux_bit_tt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fast_fib_aux_bit_tt\"><span class=\"name\">Nat</span>.<span class=\"name\">fast_fib_aux_bit_tt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/BinaryRec.html#Nat.bit\">bit</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fastFibAux\">fastFibAux</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">let <span class=\"fn\">p</span> := <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fastFibAux\">fastFibAux</a></span>;\n  <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span>)<a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L185-L191","name":"Nat.fast_fib_aux_bit_ff","line":185,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fast_fib_aux_bit_ff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fast_fib_aux_bit_ff\"><span class=\"name\">Nat</span>.<span class=\"name\">fast_fib_aux_bit_ff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/BinaryRec.html#Nat.bit\">bit</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fastFibAux\">fastFibAux</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">let <span class=\"fn\">p</span> := <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fastFibAux\">fastFibAux</a></span>;\n  <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span>)<a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L180-L183","name":"Nat.fastFib","line":180,"kind":"def","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fastFib","doc":"Computes `Nat.fib n` using the binary representation of `n`.\nProved to be equal to `Nat.fib` in `Nat.fast_fib_eq`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fastFib\"><span class=\"name\">Nat</span>.<span class=\"name\">fastFib</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L173-L178","name":"Nat.fastFibAux","line":173,"kind":"def","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fastFibAux","doc":"Computes `(Nat.fib n, Nat.fib (n + 1))` using the binary representation of `n`.\nSupports `Nat.fastFib`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fastFibAux\"><span class=\"name\">Nat</span>.<span class=\"name\">fastFibAux</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L165-L171","name":"Nat.fib_two_mul_add_two","line":165,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_two_mul_add_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_two_mul_add_two\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_two_mul_add_two</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L161-L163","name":"Nat.fib_two_mul_add_one","line":161,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_two_mul_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_two_mul_add_one\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_two_mul_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L154-L159","name":"Nat.fib_two_mul","line":154,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_two_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_two_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_two_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L145-L152","name":"Nat.fib_add","line":145,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_add","doc":"See https://proofwiki.org/wiki/Fibonacci_Number_in_terms_of_Smaller_Fibonacci_Numbers "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_add\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L138-L143","name":"Nat.fib_coprime_fib_succ","line":138,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_coprime_fib_succ","doc":"Subsequent Fibonacci numbers are coprime,\nsee https://proofwiki.org/wiki/Consecutive_Fibonacci_Numbers_are_Coprime "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_coprime_fib_succ\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_coprime_fib_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L130-L136","name":"Nat.le_fib_add_one","line":130,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.le_fib_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.le_fib_add_one\"><span class=\"name\">Nat</span>.<span class=\"name\">le_fib_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L120-L128","name":"Nat.le_fib_self","line":120,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.le_fib_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.le_fib_self\"><span class=\"name\">Nat</span>.<span class=\"name\">le_fib_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">five_le_n</span> : <span class=\"fn\">5</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L115-L118","name":"Nat.fib_lt_fib","line":115,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_lt_fib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_lt_fib\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_lt_fib</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L112-L113","name":"Nat.fib_strictMonoOn","line":112,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_strictMonoOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_strictMonoOn\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_strictMonoOn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMonoOn\">StrictMonoOn</a> <a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ici\">Set.Ici</a> <span class=\"fn\">2</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L106-L110","name":"Nat.fib_add_two_strictMono","line":106,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_add_two_strictMono","doc":"`fib (n + 2)` is strictly monotone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_add_two_strictMono\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_add_two_strictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L101-L104","name":"Nat.fib_lt_fib_succ","line":101,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_lt_fib_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_lt_fib_succ\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_lt_fib_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L98-L99","name":"Nat.fib_add_two_sub_fib_add_one","line":98,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_add_two_sub_fib_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_add_two_sub_fib_add_one\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_add_two_sub_fib_add_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L96-L96","name":"Nat.fib_pos","line":96,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_pos\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L91-L94","name":"Nat.fib_eq_zero","line":91,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_eq_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L87-L89","name":"Nat.fib_mono","line":87,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_mono\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_mono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L85-L85","name":"Nat.fib_le_fib_succ","line":85,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_le_fib_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_le_fib_succ\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_le_fib_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L82-L83","name":"Nat.fib_add_one","line":82,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_add_one\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_add_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L78-L80","name":"Nat.fib_add_two","line":78,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_add_two","doc":"Shows that `fib` indeed satisfies the Fibonacci recurrence `Fₙ₊₂ = Fₙ + Fₙ₊₁.` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_add_two\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_add_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L74-L76","name":"Nat.fib_two","line":74,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_two\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_two</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L70-L72","name":"Nat.fib_one","line":70,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_one\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L66-L68","name":"Nat.fib_zero","line":66,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">fib_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">fib</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Fib/Basic.lean#L55-L64","name":"Nat.fib","line":55,"kind":"def","docLink":"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib","doc":"Implementation of the fibonacci sequence satisfying\n`fib 0 = 0, fib 1 = 1, fib (n + 2) = fib n + fib (n + 1)`.\n\n*Note:* We use a stream iterator for better performance when compared to the naive recursive\nimplementation.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\"><span class=\"name\">Nat</span>.<span class=\"name\">fib</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"}]}