{"name":"HopfieldNet.NN","instances":[],"imports":["Init","Mathlib.Combinatorics.Digraph.Basic","Mathlib.Data.Matrix.Basic","Mathlib.Data.Vector.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L132-L133","name":"Matrix.w","line":132,"kind":"def","docLink":"./HopfieldNet/NN.html#Matrix.w","doc":"`Matrix.w` returns the value of the matrix `w` at position `(u, v)` if `u` and `v` are connected. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#Matrix.w\"><span class=\"name\">Matrix</span>.<span class=\"name\">w</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">U</span> <span class=\"fn\">U</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./HopfieldNet/NN.html#Matrix.Adj\">Adj</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> → <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L129-L130","name":"Matrix.Adj","line":129,"kind":"def","docLink":"./HopfieldNet/NN.html#Matrix.Adj","doc":"Two neurons `u` and `v` are connected in the graph if `w u v` is not zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#Matrix.Adj\"><span class=\"name\">Matrix</span>.<span class=\"name\">Adj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">U</span> <span class=\"fn\">U</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> → <span class=\"fn\">U</span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L122-L123","name":"NeuralNetwork.State.isStable","line":122,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.State.isStable","doc":"`isStable` checks if the state `s` remains unchanged after applying `s.Up wσθ` to every neuron `u`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.State.isStable\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">isStable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wσθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">NN</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L115-L120","name":"NeuralNetwork.State.seqStates","line":115,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.State.seqStates","doc":"`seqStates` generates a sequence of states for the neural network.\n- For `n = 0`, it returns the initial state `s`.\n- For `n > 0`, it updates the state at `n - 1` using the neuron from `useq` at `n - 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.State.seqStates\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">seqStates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wσθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">NN</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L110-L113","name":"NeuralNetwork.State.workPhase","line":110,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.State.workPhase","doc":"`workPhase` updates the initial state `extu` for each neuron in `uOrder` using `s.Up wσθ u`.\nIt starts with `extu` and returns the final state after processing all neurons in `uOrder`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.State.workPhase\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">workPhase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wσθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">NN</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extu</span> : <span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">extu</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.onlyUi\">onlyUi</a></span> → <span class=\"fn\">(<span class=\"fn\">uOrder</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">U</span></span>) → <span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L93-L108","name":"NeuralNetwork.State.Up","line":93,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.State.Up","doc":"`Up` updates the activation of neuron `u` in the state.\nIf `v` is `u`, it computes the new activation of `u`.\nOtherwise, it keeps the existing activation.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">Up</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wσθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">NN</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L86-L89","name":"NeuralNetwork.State.onlyUi","line":86,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.State.onlyUi","doc":"`onlyUi` states that if a neuron `u` is not an input neuron, then its activation is zero.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.State.onlyUi\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">onlyUi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L83-L84","name":"NeuralNetwork.State.net","line":83,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.State.net","doc":"The net function of a neuron in the neural network. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">net</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wσθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">NN</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L80-L81","name":"NeuralNetwork.State.out","line":80,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.State.out","doc":"The output function of a neuron in the neural network. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.State.out\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">out</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L74-L74","name":"NeuralNetwork.State.hp","line":74,"kind":"theorem","docLink":"./HopfieldNet/NN.html#NeuralNetwork.State.hp","doc":"A proof that the activations satisfy the required properties. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.State.hp\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">hp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.pact\">pact</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L72-L72","name":"NeuralNetwork.State.act","line":72,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.State.act","doc":"A function mapping each neuron to its activation value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">act</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> → <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L70-L70","name":"NeuralNetwork.State.mk","line":70,"kind":"ctor","docLink":"./HopfieldNet/NN.html#NeuralNetwork.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.State.mk\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">act</span> : <span class=\"fn\"><span class=\"fn\">U</span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">∀ (<span class=\"fn\">u</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.pact\">pact</a></span> <span class=\"fn\">(<span class=\"fn\">act</span> <span class=\"fn\">u</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L67-L74","name":"NeuralNetwork.State","line":67,"kind":"structure","docLink":"./HopfieldNet/NN.html#NeuralNetwork.State","doc":"`State` represents a state in a neural network.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.State\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L63-L63","name":"Params.θ","line":63,"kind":"def","docLink":"./HopfieldNet/NN.html#Params.θ","doc":"A function that assigns another vector to each neuron. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#Params.θ\"><span class=\"name\">Params</span>.<span class=\"name\">θ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">NN</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.κ2\">κ2</a></span> <span class=\"fn\">u</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L61-L61","name":"Params.σ","line":61,"kind":"def","docLink":"./HopfieldNet/NN.html#Params.σ","doc":"A function that assigns a vector to each neuron. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#Params.σ\"><span class=\"name\">Params</span>.<span class=\"name\">σ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">NN</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.κ1\">κ1</a></span> <span class=\"fn\">u</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L59-L59","name":"Params.hw'","line":59,"kind":"theorem","docLink":"./HopfieldNet/NN.html#Params.hw'","doc":"A proof that the weight matrix satisfies a certain property. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#Params.hw'\"><span class=\"name\">Params</span>.<span class=\"name\">hw'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">NN</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.pw\">pw</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L57-L57","name":"Params.hw","line":57,"kind":"theorem","docLink":"./HopfieldNet/NN.html#Params.hw","doc":"A proof that if two neurons are not connected, then the weight is zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#Params.hw\"><span class=\"name\">Params</span>.<span class=\"name\">hw</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">NN</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./Mathlib/Combinatorics/Digraph/Basic.html#Digraph.Adj\">Adj</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L55-L55","name":"Params.w","line":55,"kind":"def","docLink":"./HopfieldNet/NN.html#Params.w","doc":"The weight matrix of the neural network. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#Params.w\"><span class=\"name\">Params</span>.<span class=\"name\">w</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">NN</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">U</span> <span class=\"fn\">U</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L53-L53","name":"Params.mk","line":53,"kind":"ctor","docLink":"./HopfieldNet/NN.html#Params.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#Params.mk\"><span class=\"name\">Params</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">U</span> <span class=\"fn\">U</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hw</span> : <span class=\"fn\">∀ (<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./Mathlib/Combinatorics/Digraph/Basic.html#Digraph.Adj\">Adj</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> → <span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hw'</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.pw\">pw</a></span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>) → <span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.κ1\">κ1</a></span> <span class=\"fn\">u</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>) → <span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">NN</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.κ2\">κ2</a></span> <span class=\"fn\">u</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">NN</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L52-L63","name":"Params","line":52,"kind":"structure","docLink":"./HopfieldNet/NN.html#Params","doc":"`Params` is a structure that holds the parameters for a neural network `NN`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#Params\"><span class=\"name\">Params</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">NN</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L45-L45","name":"NeuralNetwork.hpact","line":45,"kind":"theorem","docLink":"./HopfieldNet/NN.html#NeuralNetwork.hpact","doc":"If all activations satisfy `pact`, then the activations computed by `fact` also satisfy `pact`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.hpact\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">hpact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">U</span> <span class=\"fn\">U</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Combinatorics/Digraph/Basic.html#Digraph.Adj\">Adj</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> → <span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> →\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.pw\">pw</a></span> <span class=\"fn\">w</span></span> →\n    <span class=\"fn\">∀ (<span class=\"fn\">σ</span> : <span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>) → <span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.κ1\">κ1</a></span> <span class=\"fn\">u</span>)</span></span></span>) (<span class=\"fn\">θ</span> : <span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>) → <span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.κ2\">κ2</a></span> <span class=\"fn\">u</span>)</span></span></span>) (<span class=\"fn\">act</span> : <span class=\"fn\"><span class=\"fn\">U</span> → <span class=\"fn\">R</span></span>),\n      <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">u</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.pact\">pact</a></span> <span class=\"fn\">(<span class=\"fn\">act</span> <span class=\"fn\">u</span>)</span></span>)</span> →\n        <span class=\"fn\">∀ (<span class=\"fn\">u</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.pact\">pact</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.fact\">fact</a></span> <span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.fnet\">fnet</a></span> <span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\">w</span> <span class=\"fn\">u</span>)</span> <span class=\"fn\">(fun (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.fout\">fout</a></span> <span class=\"fn\">v</span> <span class=\"fn\">(<span class=\"fn\">act</span> <span class=\"fn\">v</span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">σ</span> <span class=\"fn\">u</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">θ</span> <span class=\"fn\">u</span>)</span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L43-L43","name":"NeuralNetwork.pw","line":43,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.pw","doc":"Predicate on weight matrices. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.pw\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">pw</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">U</span> <span class=\"fn\">U</span> <span class=\"fn\">R</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L41-L41","name":"NeuralNetwork.pact","line":41,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.pact","doc":"Predicate on activations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.pact\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">pact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L39-L39","name":"NeuralNetwork.fout","line":39,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.fout","doc":"Computes the final output of a neuron. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.fout\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">fout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> → <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L37-L37","name":"NeuralNetwork.fact","line":37,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.fact","doc":"Computes the activation of a neuron. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.fact\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">fact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.κ2\">κ2</a></span> <span class=\"fn\">u</span>)</span></span> → <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L35-L35","name":"NeuralNetwork.fnet","line":35,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.fnet","doc":"Computes the net input to a neuron. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.fnet\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">fnet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">U</span> → <span class=\"fn\">R</span>)</span> → <span class=\"fn\">(<span class=\"fn\">U</span> → <span class=\"fn\">R</span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.κ1\">κ1</a></span> <span class=\"fn\">u</span>)</span></span> → <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L33-L33","name":"NeuralNetwork.κ2","line":33,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.κ2","doc":"Dimensions of input vectors for each neuron. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.κ2\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">κ2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L33-L33","name":"NeuralNetwork.κ1","line":33,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.κ1","doc":"Dimensions of input vectors for each neuron. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.κ1\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">κ1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L31-L31","name":"NeuralNetwork.hhio","line":31,"kind":"theorem","docLink":"./HopfieldNet/NN.html#NeuralNetwork.hhio","doc":"Hidden neurons are not input or output neurons. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.hhio\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">hhio</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.Uh\">Uh</a></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> (<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.Ui\">Ui</a></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.Uo\">Uo</a></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L29-L29","name":"NeuralNetwork.hU","line":29,"kind":"theorem","docLink":"./HopfieldNet/NN.html#NeuralNetwork.hU","doc":"All neurons are either input, output, or hidden. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.hU\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">hU</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.Ui\">Ui</a></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.Uo\">Uo</a></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.Uh\">Uh</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L27-L27","name":"NeuralNetwork.hUo","line":27,"kind":"theorem","docLink":"./HopfieldNet/NN.html#NeuralNetwork.hUo","doc":"There is at least one output neuron. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.hUo\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">hUo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.Uo\">Uo</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L25-L25","name":"NeuralNetwork.hUi","line":25,"kind":"theorem","docLink":"./HopfieldNet/NN.html#NeuralNetwork.hUi","doc":"There is at least one input neuron. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.hUi\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">hUi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.Ui\">Ui</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L23-L23","name":"NeuralNetwork.Uh","line":23,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.Uh","doc":"Input neurons. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.Uh\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">Uh</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L23-L23","name":"NeuralNetwork.Uo","line":23,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.Uo","doc":"Input neurons. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.Uo\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">Uo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L23-L23","name":"NeuralNetwork.Ui","line":23,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.Ui","doc":"Input neurons. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.Ui\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">Ui</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L21-L21","name":"NeuralNetwork.mk","line":21,"kind":"ctor","docLink":"./HopfieldNet/NN.html#NeuralNetwork.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.mk\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toDigraph</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Digraph/Basic.html#Digraph\">Digraph</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Ui </span><span class=\"fn\">Uo </span><span class=\"fn\">Uh</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hUi</span> : <span class=\"fn\">Ui</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hUo</span> : <span class=\"fn\">Uo</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Ui</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">Uo</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">Uh</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hhio</span> : <span class=\"fn\">Uh</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> (<span class=\"fn\">Ui</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">Uo</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ1 </span><span class=\"fn\">κ2</span> : <span class=\"fn\"><span class=\"fn\">U</span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fnet</span> : <span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>) → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">U</span> → <span class=\"fn\">R</span>)</span> → <span class=\"fn\">(<span class=\"fn\">U</span> → <span class=\"fn\">R</span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">κ1</span> <span class=\"fn\">u</span>)</span></span> → <span class=\"fn\">R</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fact</span> : <span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>) → <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">κ2</span> <span class=\"fn\">u</span>)</span></span> → <span class=\"fn\">R</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fout</span> : <span class=\"fn\"><span class=\"fn\">U</span> → <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pact</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pw</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">U</span> <span class=\"fn\">U</span> <span class=\"fn\">R</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpact</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">U</span> <span class=\"fn\">U</span> <span class=\"fn\">R</span></span>),\n    <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toDigraph</span>.<a href=\"./Mathlib/Combinatorics/Digraph/Basic.html#Digraph.Adj\">Adj</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> → <span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span> →\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pw</span> <span class=\"fn\">w</span></span> →\n        <span class=\"fn\">∀ (<span class=\"fn\">σ</span> : <span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>) → <span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">κ1</span> <span class=\"fn\">u</span>)</span></span></span>) (<span class=\"fn\">θ</span> : <span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>) → <span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">κ2</span> <span class=\"fn\">u</span>)</span></span></span>) (<span class=\"fn\">act</span> : <span class=\"fn\"><span class=\"fn\">U</span> → <span class=\"fn\">R</span></span>),\n          <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">u</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">pact</span> <span class=\"fn\">(<span class=\"fn\">act</span> <span class=\"fn\">u</span>)</span></span>)</span> →\n            <span class=\"fn\">∀ (<span class=\"fn\">u</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">pact</span> <span class=\"fn\">(<span class=\"fn\">fact</span> <span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\">fnet</span> <span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\">w</span> <span class=\"fn\">u</span>)</span> <span class=\"fn\">(fun (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>) =&gt; <span class=\"fn\"><span class=\"fn\">fout</span> <span class=\"fn\">v</span> <span class=\"fn\">(<span class=\"fn\">act</span> <span class=\"fn\">v</span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">σ</span> <span class=\"fn\">u</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">θ</span> <span class=\"fn\">u</span>)</span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L21-L48","name":"NeuralNetwork.toDigraph","line":21,"kind":"def","docLink":"./HopfieldNet/NN.html#NeuralNetwork.toDigraph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork.toDigraph\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">toDigraph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Digraph/Basic.html#Digraph\">Digraph</a> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/307f1b2e6f4c9c608c25d82d5895358e7015f373/HopfieldNet/NN.lean#L12-L48","name":"NeuralNetwork","line":12,"kind":"structure","docLink":"./HopfieldNet/NN.html#NeuralNetwork","doc":"A `NeuralNetwork` models a neural network with:\n\n- `R`: Type for weights and activations.\n- `U`: Type for neurons.\n- `[Zero R]`: `R` has a zero element.\n\nIt extends `Digraph U` and includes the network's architecture, activation functions, and constraints.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/NN.html#NeuralNetwork\"><span class=\"name\">NeuralNetwork</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Digraph/Basic.html#Digraph\">Digraph</a> <span class=\"fn\">U</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}