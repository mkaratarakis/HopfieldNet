{"name":"Mathlib.Algebra.ContinuedFractions.Computation.Approximations","instances":[],"imports":["Init","Mathlib.Algebra.ContinuedFractions.Determinant","Mathlib.Algebra.ContinuedFractions.Computation.CorrectnessTerminating","Mathlib.Algebra.Order.Ring.Basic","Mathlib.Data.Nat.Fib.Basic","Mathlib.Tactic.Monotonicity"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L476-L495","name":"GenContFract.abs_sub_convergents_le'","line":476,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.abs_sub_convergents_le'","doc":"Shows that `|v - Aₙ / Bₙ| ≤ 1 / (bₙ * Bₙ * Bₙ)`. This bound is worse than the one shown in\n`GenContFract.abs_sub_convs_le`, but sometimes it is easier to apply and\nsufficient for one's use case.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.abs_sub_convergents_le'\"><span class=\"name\">GenContFract</span>.<span class=\"name\">abs_sub_convergents_le'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nth_partDen_eq</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.partDens\">partDens</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.convs\">convs</a></span> <span class=\"fn\">n</span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.dens\">dens</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.dens\">dens</a></span> <span class=\"fn\">n</span></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L398-L474","name":"GenContFract.abs_sub_convs_le","line":398,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.abs_sub_convs_le","doc":"Shows that `|v - Aₙ / Bₙ| ≤ 1 / (Bₙ * Bₙ₊₁)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.abs_sub_convs_le\"><span class=\"name\">GenContFract</span>.<span class=\"name\">abs_sub_convs_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">not_terminatedAt_n</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.TerminatedAt\">TerminatedAt</a></span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.convs\">convs</a></span> <span class=\"fn\">n</span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.dens\">dens</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.dens\">dens</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L324-L396","name":"GenContFract.sub_convs_eq","line":324,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.sub_convs_eq","doc":"This lemma follows from the finite correctness proof, the determinant equality, and\nby simplifying the difference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.sub_convs_eq\"><span class=\"name\">GenContFract</span>.<span class=\"name\">sub_convs_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ifp</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stream_nth_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let <span class=\"fn\">g</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span></span>;\n<span class=\"fn\">let <span class=\"fn\">B</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.contsAux\">contsAux</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.b\">b</a></span>;\n<span class=\"fn\">let <span class=\"fn\">pB</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.contsAux\">contsAux</a></span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.b\">b</a></span>;\n<span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.convs\">convs</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><span class=\"fn\">ifp</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\">ifp</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">pB</span>))</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L296-L312","name":"GenContFract.of_den_mono","line":296,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.of_den_mono","doc":"Shows that the sequence of denominators is monotone, that is `Bₙ ≤ Bₙ₊₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.of_den_mono\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_den_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.dens\">dens</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.dens\">dens</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L288-L294","name":"GenContFract.le_of_succ_get?_den","line":288,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.le_of_succ_get?_den","doc":"Shows that `bₙ * Bₙ ≤ Bₙ₊₁`, where `bₙ` is the `n`th partial denominator and `Bₙ₊₁` and `Bₙ` are\nthe `n + 1`th and `n`th denominator of the continued fraction. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.le_of_succ_get?_den\"><span class=\"name\">GenContFract</span>.<span class=\"name\">le_of_succ_get?_den</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nth_partDenom_eq</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.partDens\">partDens</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.dens\">dens</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.dens\">dens</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L280-L286","name":"GenContFract.le_of_succ_succ_get?_contsAux_b","line":280,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.le_of_succ_succ_get?_contsAux_b","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.le_of_succ_succ_get?_contsAux_b\"><span class=\"name\">GenContFract</span>.<span class=\"name\">le_of_succ_succ_get?_contsAux_b</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nth_partDen_eq</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.partDens\">partDens</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.contsAux\">contsAux</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.b\">b</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.contsAux\">contsAux</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>))</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.b\">b</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L276-L278","name":"GenContFract.zero_le_of_den","line":276,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.zero_le_of_den","doc":"Shows that all denominators are nonnegative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.zero_le_of_den\"><span class=\"name\">GenContFract</span>.<span class=\"name\">zero_le_of_den</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.dens\">dens</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L259-L274","name":"GenContFract.zero_le_of_contsAux_b","line":259,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.zero_le_of_contsAux_b","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.zero_le_of_contsAux_b\"><span class=\"name\">GenContFract</span>.<span class=\"name\">zero_le_of_contsAux_b</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.contsAux\">contsAux</a></span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.b\">b</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L245-L254","name":"GenContFract.succ_nth_fib_le_of_nth_den","line":245,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.succ_nth_fib_le_of_nth_den","doc":"Shows that the `n`th denominator is greater than or equal to the `n + 1`th fibonacci number,\nthat is `Nat.fib (n + 1) ≤ Bₙ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.succ_nth_fib_le_of_nth_den\"><span class=\"name\">GenContFract</span>.<span class=\"name\">succ_nth_fib_le_of_nth_den</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hyp</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.TerminatedAt\">TerminatedAt</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">Nat.fib</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.dens\">dens</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L204-L243","name":"GenContFract.fib_le_of_contsAux_b","line":204,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.fib_le_of_contsAux_b","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.fib_le_of_contsAux_b\"><span class=\"name\">GenContFract</span>.<span class=\"name\">fib_le_of_contsAux_b</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.TerminatedAt\">TerminatedAt</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">2</span>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Fib/Basic.html#Nat.fib\">Nat.fib</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.contsAux\">contsAux</a></span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.b\">b</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L186-L188","name":"ContFract.of","line":186,"kind":"def","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#ContFract.of","doc":"Creates the continued fraction of a value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#ContFract.of\"><span class=\"name\">ContFract</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#ContFract\">ContFract</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L182-L184","name":"SimpContFract.of_isContFract","line":182,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#SimpContFract.of_isContFract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#SimpContFract.of_isContFract\"><span class=\"name\">SimpContFract</span>.<span class=\"name\">of_isContFract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#SimpContFract.of\">of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#SimpContFract.IsContFract\">IsContFract</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L178-L180","name":"SimpContFract.of","line":178,"kind":"def","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#SimpContFract.of","doc":"Creates the simple continued fraction of a value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#SimpContFract.of\"><span class=\"name\">SimpContFract</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#SimpContFract\">SimpContFract</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L174-L176","name":"GenContFract.of_isSimpContFract","line":174,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.of_isSimpContFract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.of_isSimpContFract\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_isSimpContFract</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.IsSimpContFract\">IsSimpContFract</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L162-L168","name":"GenContFract.exists_int_eq_of_partDen","line":162,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.exists_int_eq_of_partDen","doc":"Shows that the partial denominators `bᵢ` correspond to an integer. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.exists_int_eq_of_partDen\"><span class=\"name\">GenContFract</span>.<span class=\"name\">exists_int_eq_of_partDen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nth_partDen_eq</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.partDens\">partDens</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L154-L160","name":"GenContFract.of_partNum_eq_one","line":154,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.of_partNum_eq_one","doc":"Shows that the partial numerators `aᵢ` are equal to one. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.of_partNum_eq_one\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_partNum_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nth_partNum_eq</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.partNums\">partNums</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L139-L152","name":"GenContFract.of_partNum_eq_one_and_exists_int_partDen_eq","line":139,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.of_partNum_eq_one_and_exists_int_partDen_eq","doc":"Shows that the partial numerators `aᵢ` of the continued fraction are equal to one and the partial\ndenominators `bᵢ` correspond to integers.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.of_partNum_eq_one_and_exists_int_partDen_eq\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_partNum_eq_one_and_exists_int_partDen_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">gp</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair\">Pair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nth_s_eq</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.s\">s</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">gp</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">gp</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.a\">a</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∃ (<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">gp</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair.b\">b</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L128-L137","name":"GenContFract.of_one_le_get?_partDen","line":128,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.of_one_le_get?_partDen","doc":"Shows that the integer parts of the continued fraction are at least one. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.of_one_le_get?_partDen\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_one_le_get?_partDen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nth_partDen_eq</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.partDens\">partDens</a></span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L101-L118","name":"GenContFract.IntFractPair.succ_nth_stream_b_le_nth_stream_fr_inv","line":101,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.IntFractPair.succ_nth_stream_b_le_nth_stream_fr_inv","doc":"Shows that the `n + 1`th integer part `bₙ₊₁` of the stream is smaller or equal than the inverse of\nthe `n`th fractional part `frₙ` of the stream.\nThis result is straight-forward as `bₙ₊₁` is defined as the floor of `1 / frₙ`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.IntFractPair.succ_nth_stream_b_le_nth_stream_fr_inv\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">succ_nth_stream_b_le_nth_stream_fr_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ifp_n </span><span class=\"fn\">ifp_succ_n</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nth_stream_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp_n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">succ_nth_stream_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp_succ_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">ifp_succ_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.b\">b</a></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">ifp_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L89-L98","name":"GenContFract.IntFractPair.one_le_succ_nth_stream_b","line":89,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.IntFractPair.one_le_succ_nth_stream_b","doc":"Shows that the integer parts of the stream are at least one. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.IntFractPair.one_le_succ_nth_stream_b\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">one_le_succ_nth_stream_b</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ifp_succ_n</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">succ_nth_stream_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp_succ_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">ifp_succ_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.b\">b</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L84-L87","name":"GenContFract.IntFractPair.nth_stream_fr_lt_one","line":84,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.IntFractPair.nth_stream_fr_lt_one","doc":"Shows that the fractional parts of the stream are smaller than one. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.IntFractPair.nth_stream_fr_lt_one\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">nth_stream_fr_lt_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ifp_n</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nth_stream_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ifp_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L79-L82","name":"GenContFract.IntFractPair.nth_stream_fr_nonneg","line":79,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.IntFractPair.nth_stream_fr_nonneg","doc":"Shows that the fractional parts of the stream are nonnegative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.IntFractPair.nth_stream_fr_nonneg\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">nth_stream_fr_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ifp_n</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nth_stream_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">ifp_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean#L66-L77","name":"GenContFract.IntFractPair.nth_stream_fr_nonneg_lt_one","line":66,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.IntFractPair.nth_stream_fr_nonneg_lt_one","doc":"Shows that the fractional parts of the stream are in `[0,1)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Approximations.html#GenContFract.IntFractPair.nth_stream_fr_nonneg_lt_one\"><span class=\"name\">GenContFract</span>.<span class=\"name\">IntFractPair</span>.<span class=\"name\">nth_stream_fr_nonneg_lt_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor/Defs.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ifp_n</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nth_stream_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">ifp_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">ifp_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></div></div>"}]}