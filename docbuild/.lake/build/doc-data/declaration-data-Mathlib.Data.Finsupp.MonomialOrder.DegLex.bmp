{"name":"Mathlib.Data.Finsupp.MonomialOrder.DegLex","instances":[{"typeNames":["DegLex"],"name":"instAddCommMonoidDegLex","className":"AddCommMonoid"},{"typeNames":["DegLex"],"name":"Finsupp.DegLex.instLTDegLexNat","className":"LT"},{"typeNames":["DegLex"],"name":"Finsupp.DegLex.isStrictOrder","className":"IsStrictOrder"},{"typeNames":["DegLex"],"name":"Finsupp.DegLex.instLinearOrderDegLexNat","className":"LinearOrder"},{"typeNames":["DegLex"],"name":"Finsupp.DegLex.instIsOrderedCancelAddMonoidDegLexNat","className":"IsOrderedCancelAddMonoid"},{"typeNames":["DegLex"],"name":"Finsupp.DegLex.orderBot","className":"OrderBot"},{"typeNames":["DegLex"],"name":"Finsupp.DegLex.wellFoundedLT","className":"IsWellFounded"}],"imports":["Init","Mathlib.Data.Finsupp.MonomialOrder","Mathlib.Data.Finsupp.Weight","Mathlib.Algebra.Equiv.TransferInstance"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L222-L224","name":"MonomialOrder.degLex_single_lt_iff","line":222,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex_single_lt_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex_single_lt_iff\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">degLex_single_lt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedGT\">WellFoundedGT</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">σ</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex\">degLex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/Single.html#Finsupp.single\">Finsupp.single</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex\">degLex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/Single.html#Finsupp.single\">Finsupp.single</a> <span class=\"fn\">b</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L218-L220","name":"MonomialOrder.degLex_single_le_iff","line":218,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex_single_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex_single_le_iff\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">degLex_single_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedGT\">WellFoundedGT</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">σ</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex\">degLex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/Single.html#Finsupp.single\">Finsupp.single</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex\">degLex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/Single.html#Finsupp.single\">Finsupp.single</a> <span class=\"fn\">b</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L214-L216","name":"MonomialOrder.degLex_lt_iff","line":214,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex_lt_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex_lt_iff\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">degLex_lt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedGT\">WellFoundedGT</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">σ</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex\">degLex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex\">degLex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L210-L212","name":"MonomialOrder.degLex_le_iff","line":210,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex_le_iff\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">degLex_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedGT\">WellFoundedGT</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">σ</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex\">degLex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex\">degLex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L197-L208","name":"MonomialOrder.degLex","line":197,"kind":"def","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex","doc":"The deg-lexicographic order on `σ →₀ ℕ`, as a `MonomialOrder` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#MonomialOrder.degLex\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">degLex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedGT\">WellFoundedGT</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder\">MonomialOrder</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L183-L185","name":"Finsupp.DegLex.wellFoundedLT","line":183,"kind":"instance","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.wellFoundedLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.wellFoundedLT\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">wellFoundedLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedGT\">WellFoundedGT</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedLT\">WellFoundedLT</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L174-L181","name":"Finsupp.DegLex.orderBot","line":174,"kind":"instance","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.orderBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.orderBot\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">orderBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L166-L172","name":"Finsupp.DegLex.monotone_degree","line":166,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.monotone_degree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.monotone_degree\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">monotone_degree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Data/Finsupp/Weight.html#Finsupp.degree\">degree</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L162-L164","name":"Finsupp.DegLex.single_le_iff","line":162,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.single_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.single_le_iff\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">single_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/Single.html#Finsupp.single\">single</a> <span class=\"fn\">b</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/Single.html#Finsupp.single\">single</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L158-L160","name":"Finsupp.DegLex.single_lt_iff","line":158,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.single_lt_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.single_lt_iff\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">single_lt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/Single.html#Finsupp.single\">single</a> <span class=\"fn\">b</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/Single.html#Finsupp.single\">single</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L155-L156","name":"Finsupp.DegLex.single_antitone","line":155,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.single_antitone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.single_antitone\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">single_antitone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Antitone\">Antitone</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/Single.html#Finsupp.single\">single</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L150-L153","name":"Finsupp.DegLex.single_strictAnti","line":150,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.single_strictAnti","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.single_strictAnti\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">single_strictAnti</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictAnti\">StrictAnti</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/Single.html#Finsupp.single\">single</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L141-L148","name":"Finsupp.DegLex.instIsOrderedCancelAddMonoidDegLexNat","line":141,"kind":"instance","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.instIsOrderedCancelAddMonoidDegLexNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.instIsOrderedCancelAddMonoidDegLexNat\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">instIsOrderedCancelAddMonoidDegLexNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#IsOrderedCancelAddMonoid\">IsOrderedCancelAddMonoid</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L131-L139","name":"Finsupp.DegLex.le_iff","line":131,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.le_iff\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Data/Finsupp/Weight.html#Finsupp.degree\">degree</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">y</span>)</span>.<a href=\"./Mathlib/Data/Finsupp/Weight.html#Finsupp.degree\">degree</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a>     <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Data/Finsupp/Weight.html#Finsupp.degree\">degree</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">y</span>)</span>.<a href=\"./Mathlib/Data/Finsupp/Weight.html#Finsupp.degree\">degree</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L125-L129","name":"Finsupp.DegLex.instLinearOrderDegLexNat","line":125,"kind":"instance","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.instLinearOrderDegLexNat","doc":"The linear order on `Finsupp`s obtained by the homogeneous lexicographic ordering. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.instLinearOrderDegLexNat\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">instLinearOrderDegLexNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L112-L123","name":"Finsupp.DegLex.isStrictOrder","line":112,"kind":"instance","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.isStrictOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.isStrictOrder\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">isStrictOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsStrictOrder\">IsStrictOrder</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>))</span> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L105-L108","name":"Finsupp.DegLex.lt_iff","line":105,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.lt_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.lt_iff\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">lt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Data/Finsupp/Weight.html#Finsupp.degree\">degree</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Data/Finsupp/Weight.html#Finsupp.degree\">degree</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a>     <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Data/Finsupp/Weight.html#Finsupp.degree\">degree</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Data/Finsupp/Weight.html#Finsupp.degree\">degree</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L100-L103","name":"Finsupp.DegLex.lt_def","line":100,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.lt_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.lt_def\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">lt_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Data/Finsupp/Weight.html#Finsupp.degree\">degree</a></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">a</span>)</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Data/Finsupp/Weight.html#Finsupp.degree\">degree</a></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">b</span>)</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L97-L98","name":"Finsupp.DegLex.instLTDegLexNat","line":97,"kind":"instance","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.instLTDegLexNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.instLTDegLexNat\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">instLTDegLexNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L87-L95","name":"Finsupp.DegLex.wellFounded","line":87,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.wellFounded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex.wellFounded\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span>.<span class=\"name\">wellFounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsTrichotomous\">IsTrichotomous</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><a href=\"./Init/WF.html#WellFounded\">WellFounded</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Defs.html#Function.swap\">Function.swap</a> <span class=\"fn\">r</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Init/WF.html#WellFounded\">WellFounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs0</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>⦄, <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">n</span> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/WF.html#WellFounded\">WellFounded</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex\">Finsupp.DegLex</a> <span class=\"fn\">r</span> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L81-L83","name":"Finsupp.degLex_def","line":81,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.degLex_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.degLex_def\"><span class=\"name\">Finsupp</span>.<span class=\"name\">degLex_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex\">Finsupp.DegLex</a> <span class=\"fn\">r</span> <span class=\"fn\">s</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/WF.html#Prod.Lex\">Prod.Lex</a> <span class=\"fn\">s</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/Lex.html#Finsupp.Lex\">Finsupp.Lex</a> <span class=\"fn\">r</span> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Data/Finsupp/Weight.html#Finsupp.degree\">degree</a></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/Data/Finsupp/Weight.html#Finsupp.degree\">degree</a></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L74-L79","name":"Finsupp.DegLex","line":74,"kind":"def","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex","doc":"`Finsupp.DegLex r s` is the homogeneous lexicographic order on `α →₀ M`,\nwhere `α` is ordered by `r` and `M` is ordered by `s`.\nThe type synonym `DegLex (α →₀ M)` has an order given by `Finsupp.DegLex (· < ·) (· < ·)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#Finsupp.DegLex\"><span class=\"name\">Finsupp</span>.<span class=\"name\">DegLex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → (<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L68-L69","name":"ofDegLex_add","line":68,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex_add\"><span class=\"name\">ofDegLex_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L65-L66","name":"toDegLex_add","line":65,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex_add\"><span class=\"name\">toDegLex_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L62-L63","name":"instAddCommMonoidDegLex","line":62,"kind":"instance","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#instAddCommMonoidDegLex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#instAddCommMonoidDegLex\"><span class=\"name\">instAddCommMonoidDegLex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L60-L60","name":"DegLex.exists_iff","line":60,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex.exists_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex.exists_iff\"><span class=\"name\">DegLex</span>.<span class=\"name\">exists_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∃ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">a</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L59-L59","name":"DegLex.forall_iff","line":59,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex.forall_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex.forall_iff\"><span class=\"name\">DegLex</span>.<span class=\"name\">forall_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">a</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L54-L57","name":"DegLex.rec","line":54,"kind":"def","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex.rec","doc":"A recursor for `DegLex`. Use as `induction x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex.rec\"><span class=\"name\">DegLex</span>.<span class=\"name\">rec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Sort</a> u_2</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L52-L52","name":"toDegLex_ofDegLex","line":52,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex_ofDegLex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex_ofDegLex\"><span class=\"name\">toDegLex_ofDegLex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L50-L50","name":"ofDegLex_toDegLex","line":50,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex_toDegLex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex_toDegLex\"><span class=\"name\">ofDegLex_toDegLex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L48-L48","name":"toDegLex_symm_eq","line":48,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex_symm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex_symm_eq\"><span class=\"name\">toDegLex_symm_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L46-L46","name":"ofDegLex_symm_eq","line":46,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex_symm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex_symm_eq\"><span class=\"name\">ofDegLex_symm_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L44-L44","name":"ofDegLex_inj","line":44,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex_inj\"><span class=\"name\">ofDegLex_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L42-L42","name":"ofDegLex_injective","line":42,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex_injective\"><span class=\"name\">ofDegLex_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\">ofDegLex</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L39-L40","name":"ofDegLex","line":39,"kind":"def","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex","doc":"`ofDegLex` is the identity function from the `DegLex` of a type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#ofDegLex\"><span class=\"name\">ofDegLex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L37-L37","name":"toDegLex_inj","line":37,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex_inj\"><span class=\"name\">toDegLex_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L35-L35","name":"toDegLex_injective","line":35,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex_injective\"><span class=\"name\">toDegLex_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\">toDegLex</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L32-L33","name":"toDegLex","line":32,"kind":"def","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex","doc":"`toDegLex` is the identity function to the `DegLex` of a type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#toDegLex\"><span class=\"name\">toDegLex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\">DegLex</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean#L27-L28","name":"DegLex","line":27,"kind":"def","docLink":"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex","doc":"A type synonym to equip a type with its lexicographic order sorted by degrees. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder/DegLex.html#DegLex\"><span class=\"name\">DegLex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}