{"name":"Mathlib.Topology.Algebra.Category.ProfiniteGrp.Basic","instances":[{"typeNames":["ProfiniteGrp","_builtin_typeu"],"name":"instCoeSortProfiniteGrpType","className":"CoeSort"},{"typeNames":["ProfiniteAddGrp","_builtin_typeu"],"name":"instCoeSortProfiniteAddGrpType","className":"CoeSort"},{"typeNames":["ProfiniteGrp"],"name":"instCategoryProfiniteGrp","className":"CategoryTheory.Category"},{"typeNames":["ProfiniteAddGrp"],"name":"instCategoryProfiniteAddGrp","className":"CategoryTheory.Category"},{"typeNames":["ProfiniteGrp"],"name":"instConcreteCategoryProfiniteGrpContinuousMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["ProfiniteAddGrp"],"name":"instConcreteCategoryProfiniteAddGrpContinuousAddMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["Quiver.Hom"],"name":"ProfiniteGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite","className":"CoeFun"},{"typeNames":["Quiver.Hom"],"name":"ProfiniteAddGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite","className":"CoeFun"},{"typeNames":["FiniteGrp","ProfiniteGrp"],"name":"ProfiniteGrp.instHasForget₂FiniteGrp","className":"CategoryTheory.HasForget₂"},{"typeNames":["FiniteAddGrp","ProfiniteAddGrp"],"name":"ProfiniteAddGrp.instHasForget₂FiniteAddGrp","className":"CategoryTheory.HasForget₂"},{"typeNames":["ProfiniteGrp","Grp"],"name":"ProfiniteGrp.instHasForget₂Grp","className":"CategoryTheory.HasForget₂"},{"typeNames":["ProfiniteAddGrp","AddGrp"],"name":"ProfiniteAddGrp.instHasForget₂AddGrp","className":"CategoryTheory.HasForget₂"},{"typeNames":["ProfiniteGrp","Profinite"],"name":"ProfiniteGrp.instHasForget₂Profinite","className":"CategoryTheory.HasForget₂"},{"typeNames":["ProfiniteAddGrp","Profinite"],"name":"ProfiniteAddGrp.instHasForget₂Profinite","className":"CategoryTheory.HasForget₂"},{"typeNames":["CategoryTheory.forget₂"],"name":"ProfiniteGrp.instFaithfulProfiniteForget₂","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["CategoryTheory.forget₂"],"name":"ProfiniteAddGrp.instFaithfulProfiniteForget₂","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["CategoryTheory.forget₂"],"name":"ProfiniteGrp.instReflectsIsomorphismsProfiniteForget₂","className":"CategoryTheory.Functor.ReflectsIsomorphisms"},{"typeNames":["CategoryTheory.forget"],"name":"ProfiniteGrp.instReflectsIsomorphismsForget","className":"CategoryTheory.Functor.ReflectsIsomorphisms"},{"typeNames":["TopCat.carrier"],"name":"ProfiniteGrp.instGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂","className":"Group"},{"typeNames":["TopCat.carrier"],"name":"ProfiniteGrp.instIsTopologicalGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂","className":"IsTopologicalGroup"},{"typeNames":[],"name":"ProfiniteGrp.instHasLimit","className":"CategoryTheory.Limits.HasLimit"},{"typeNames":["CategoryTheory.forget₂"],"name":"ProfiniteGrp.instPreservesLimitsProfiniteForget₂","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["Subtype"],"name":"ProfiniteGrp.instCompactSpaceSubtypeForallCarrierToTopTotallyDisconnectedSpaceToProfiniteObjMemSubgroupLimitConePtAux","className":"CompactSpace"}],"imports":["Init","Mathlib.Algebra.Category.Grp.FiniteGrp","Mathlib.Topology.Algebra.Group.ClosedSubgroup","Mathlib.Topology.Algebra.ContinuousMonoidHom","Mathlib.Topology.Category.Profinite.Basic","Mathlib.Topology.Separation.Connected"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L373-L375","name":"ProfiniteGrp.limit_mul_val","line":373,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_mul_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_mul_val\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limit_mul_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">limit</a> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>)</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L369-L371","name":"ProfiniteGrp.limit_one_val","line":369,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_one_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_one_val\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limit_one_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">1</span></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L365-L365","name":"ProfiniteGrp.limit_ext_iff","line":365,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_ext_iff\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limit_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">limit</a> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L365-L367","name":"ProfiniteGrp.limit_ext","line":365,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_ext\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limit_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">limit</a> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L362-L363","name":"ProfiniteGrp.limit","line":362,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit","doc":"The abbreviation for the limit of `ProfiniteGrp`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L359-L360","name":"ProfiniteGrp.instCompactSpaceSubtypeForallCarrierToTopTotallyDisconnectedSpaceToProfiniteObjMemSubgroupLimitConePtAux","line":359,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instCompactSpaceSubtypeForallCarrierToTopTotallyDisconnectedSpaceToProfiniteObjMemSubgroupLimitConePtAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instCompactSpaceSubtypeForallCarrierToTopTotallyDisconnectedSpaceToProfiniteObjMemSubgroupLimitConePtAux\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instCompactSpaceSubtypeForallCarrierToTopTotallyDisconnectedSpaceToProfiniteObjMemSubgroupLimitConePtAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitConePtAux\">limitConePtAux</a> <span class=\"fn\">F</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L354-L357","name":"ProfiniteGrp.instPreservesLimitsProfiniteForget₂","line":354,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instPreservesLimitsProfiniteForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instPreservesLimitsProfiniteForget₂\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instPreservesLimitsProfiniteForget₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimits\">CategoryTheory.Limits.PreservesLimits</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L349-L352","name":"ProfiniteGrp.instHasLimit","line":349,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasLimit\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instHasLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimit\">CategoryTheory.Limits.HasLimit</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L334-L347","name":"ProfiniteGrp.limitConeIsLimit","line":334,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitConeIsLimit","doc":"`ProfiniteGrp.limitCone` is a limit cone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitConeIsLimit\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limitConeIsLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitCone\">limitCone</a> <span class=\"fn\">F</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L318-L332","name":"ProfiniteGrp.limitCone","line":318,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitCone","doc":"The explicit limit cone in `ProfiniteGrp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitCone\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limitCone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L315-L316","name":"ProfiniteGrp.instIsTopologicalGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂","line":315,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instIsTopologicalGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instIsTopologicalGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instIsTopologicalGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.limitCone\">Profinite.limitCone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max u v}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L312-L313","name":"ProfiniteGrp.instGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂","line":312,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.limitCone\">Profinite.limitCone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max u v}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L304-L305","name":"ProfiniteAddGrp.limitConePtAux","line":304,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.limitConePtAux","doc":"Auxiliary construction to obtain the additive group structure on the limit of\nprofinite additive groups."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.limitConePtAux\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">limitConePtAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">((<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L303-L310","name":"ProfiniteGrp.limitConePtAux","line":303,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitConePtAux","doc":"Auxiliary construction to obtain the group structure on the limit of profinite groups. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitConePtAux\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limitConePtAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">((<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L276-L277","name":"ProfiniteGrp.instReflectsIsomorphismsForget","line":276,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instReflectsIsomorphismsForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instReflectsIsomorphismsForget\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instReflectsIsomorphismsForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/ReflectsIso/Basic.html#CategoryTheory.Functor.ReflectsIsomorphisms\">ReflectsIsomorphisms</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L268-L274","name":"ProfiniteGrp.instReflectsIsomorphismsProfiniteForget₂","line":268,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instReflectsIsomorphismsProfiniteForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instReflectsIsomorphismsProfiniteForget₂\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instReflectsIsomorphismsProfiniteForget₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/ReflectsIso/Basic.html#CategoryTheory.Functor.ReflectsIsomorphisms\">ReflectsIsomorphisms</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L263-L263","name":"ProfiniteAddGrp.instFaithfulProfiniteForget₂","line":263,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instFaithfulProfiniteForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instFaithfulProfiniteForget₂\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">instFaithfulProfiniteForget₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L263-L266","name":"ProfiniteGrp.instFaithfulProfiniteForget₂","line":263,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instFaithfulProfiniteForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instFaithfulProfiniteForget₂\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instFaithfulProfiniteForget₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L257-L257","name":"ProfiniteAddGrp.instHasForget₂Profinite","line":257,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instHasForget₂Profinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instHasForget₂Profinite\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">instHasForget₂Profinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L256-L261","name":"ProfiniteGrp.instHasForget₂Profinite","line":256,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasForget₂Profinite","doc":"The functor mapping a profinite group to its underlying profinite space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasForget₂Profinite\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instHasForget₂Profinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L250-L254","name":"ProfiniteGrp.ContinuousMulEquiv.toProfiniteGrpIso","line":250,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ContinuousMulEquiv.toProfiniteGrpIso","doc":"Build an isomorphism in the category `ProfiniteGrp` from\na `ContinuousMulEquiv` between `ProfiniteGrp`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ContinuousMulEquiv.toProfiniteGrpIso\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ContinuousMulEquiv</span>.<span class=\"name\">toProfiniteGrpIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMulEquiv\">≃ₜ*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L242-L243","name":"ProfiniteAddGrp.ofContinuousAddEquiv","line":242,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofContinuousAddEquiv","doc":"A topological additive group that has a `ContinuousAddEquiv` to a\nprofinite additive group is profinite."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofContinuousAddEquiv\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofContinuousAddEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddEquiv\">≃ₜ+</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{v}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L241-L248","name":"ProfiniteGrp.ofContinuousMulEquiv","line":241,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofContinuousMulEquiv","doc":"A topological group that has a `ContinuousMulEquiv` to a profinite group is profinite. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofContinuousMulEquiv\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofContinuousMulEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMulEquiv\">≃ₜ*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{v}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L236-L236","name":"ProfiniteAddGrp.ofClosedAddSubgroup","line":236,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofClosedAddSubgroup","doc":"A closed additive subgroup of a profinite additive group is profinite."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofClosedAddSubgroup\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofClosedAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/ClosedSubgroup.html#ClosedAddSubgroup\">ClosedAddSubgroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L235-L239","name":"ProfiniteGrp.ofClosedSubgroup","line":235,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofClosedSubgroup","doc":"A closed subgroup of a profinite group is profinite. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofClosedSubgroup\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofClosedSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/ClosedSubgroup.html#ClosedSubgroup\">ClosedSubgroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L230-L230","name":"ProfiniteAddGrp.instHasForget₂AddGrp","line":230,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instHasForget₂AddGrp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instHasForget₂AddGrp\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">instHasForget₂AddGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp\">AddGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L230-L233","name":"ProfiniteGrp.instHasForget₂Grp","line":230,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasForget₂Grp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasForget₂Grp\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instHasForget₂Grp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L224-L224","name":"ProfiniteAddGrp.instHasForget₂FiniteAddGrp","line":224,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instHasForget₂FiniteAddGrp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instHasForget₂FiniteAddGrp\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">instHasForget₂FiniteAddGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Algebra/Category/Grp/FiniteGrp.html#FiniteAddGrp\">FiniteAddGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L224-L228","name":"ProfiniteGrp.instHasForget₂FiniteGrp","line":224,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasForget₂FiniteGrp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasForget₂FiniteGrp\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instHasForget₂FiniteGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Algebra/Category/Grp/FiniteGrp.html#FiniteGrp\">FiniteGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L216-L217","name":"ProfiniteAddGrp.ofFiniteAddGrp","line":216,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofFiniteAddGrp","doc":"A `FiniteAddGrp` when given the discrete topology can be considered as a\nprofinite additive group."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofFiniteAddGrp\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofFiniteAddGrp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/Algebra/Category/Grp/FiniteGrp.html#FiniteAddGrp\">FiniteAddGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L215-L222","name":"ProfiniteGrp.ofFiniteGrp","line":215,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofFiniteGrp","doc":"A `FiniteGrp` when given the discrete topology can be considered as a profinite group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofFiniteGrp\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofFiniteGrp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/Algebra/Category/Grp/FiniteGrp.html#FiniteGrp\">FiniteGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L206-L207","name":"ProfiniteAddGrp.pi","line":206,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.pi","doc":"The pi-type of profinite additive groups is a\nprofinite additive group."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.pi\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{max u u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L205-L213","name":"ProfiniteGrp.pi","line":205,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.pi","doc":"The pi-type of profinite groups is a profinite group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.pi\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max u u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L200-L201","name":"ProfiniteAddGrp.ofProfinite","line":200,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofProfinite","doc":"Construct a term of `ProfiniteAddGrp` from a type endowed with the structure of a\nprofinite topological additive group."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofProfinite\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L198-L203","name":"ProfiniteGrp.ofProfinite","line":198,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofProfinite","doc":"Construct a term of `ProfiniteGrp` from a type endowed with the structure of a\nprofinite topological group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofProfinite\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L193-L193","name":"ProfiniteAddGrp.coe_comp","line":193,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.coe_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.coe_comp\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">coe_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L193-L196","name":"ProfiniteGrp.coe_comp","line":193,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.coe_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.coe_comp\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">coe_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L189-L189","name":"ProfiniteAddGrp.coe_id","line":189,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.coe_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.coe_id\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">coe_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#id\">id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L189-L191","name":"ProfiniteGrp.coe_id","line":189,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.coe_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.coe_id\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">coe_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#id\">id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L185-L185","name":"ProfiniteAddGrp.hom_neg_apply","line":185,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_neg_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_neg_apply\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">hom_neg_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L185-L187","name":"ProfiniteGrp.hom_inv_apply","line":185,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_inv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_inv_apply\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">hom_inv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L181-L181","name":"ProfiniteAddGrp.neg_hom_apply","line":181,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.neg_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.neg_hom_apply\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">neg_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L181-L183","name":"ProfiniteGrp.inv_hom_apply","line":181,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.inv_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.inv_hom_apply\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">inv_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L178-L178","name":"ProfiniteAddGrp.ofHom_apply","line":178,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_apply\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofHom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L178-L179","name":"ProfiniteGrp.ofHom_apply","line":178,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_apply\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofHom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L173-L173","name":"ProfiniteAddGrp.ofHom_comp","line":173,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_comp\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofHom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\">ofHom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom.comp\">comp</a></span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\">ofHom</a> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L173-L176","name":"ProfiniteGrp.ofHom_comp","line":173,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_comp\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofHom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\">ofHom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom.comp\">comp</a></span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\">ofHom</a> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L170-L170","name":"ProfiniteAddGrp.ofHom_id","line":170,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_id\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofHom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom.id\">ContinuousAddMonoidHom.id</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.of\">of</a> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L170-L171","name":"ProfiniteGrp.ofHom_id","line":170,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_id\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofHom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom.id\">ContinuousMonoidHom.id</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.of\">of</a> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L166-L166","name":"ProfiniteAddGrp.ofHom_hom","line":166,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_hom\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofHom_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L166-L168","name":"ProfiniteGrp.ofHom_hom","line":166,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_hom\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofHom_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L163-L163","name":"ProfiniteAddGrp.hom_ofHom","line":163,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_ofHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_ofHom\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">hom_ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L163-L164","name":"ProfiniteGrp.hom_ofHom","line":163,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_ofHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_ofHom\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">hom_ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L154-L154","name":"ProfiniteAddGrp.hom_ext_iff","line":154,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_ext_iff\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L154-L154","name":"ProfiniteGrp.hom_ext_iff","line":154,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_ext_iff\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L154-L154","name":"ProfiniteAddGrp.hom_ext","line":154,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_ext\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L154-L156","name":"ProfiniteGrp.hom_ext","line":154,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_ext\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L149-L149","name":"ProfiniteAddGrp.comp_apply","line":149,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.comp_apply\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">C</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L149-L152","name":"ProfiniteGrp.comp_apply","line":149,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.comp_apply\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">C</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L144-L144","name":"ProfiniteAddGrp.hom_comp","line":144,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_comp\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">hom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">C</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L144-L146","name":"ProfiniteGrp.hom_comp","line":144,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_comp\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">hom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">C</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L140-L140","name":"ProfiniteAddGrp.id_apply","line":140,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.id_apply\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">id_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">A</span>)</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L140-L142","name":"ProfiniteGrp.id_apply","line":140,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.id_apply\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">id_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">A</span>)</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L136-L136","name":"ProfiniteAddGrp.hom_id","line":136,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_id\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">hom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom.id\">ContinuousAddMonoidHom.id</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L136-L137","name":"ProfiniteGrp.hom_id","line":136,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_id\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">hom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom.id\">ContinuousMonoidHom.id</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L132-L132","name":"ProfiniteAddGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite","line":132,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeFun\">CoeFun</a> (<span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>) <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L132-L134","name":"ProfiniteGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite","line":132,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeFun\">CoeFun</a> (<span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>) <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L123-L123","name":"ProfiniteAddGrp.ofHom","line":123,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom","doc":"Typecheck a `ContinuousAddMonoidHom` as a morphism in `ProfiniteAddGrp`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.of\">of</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.of\">of</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L122-L128","name":"ProfiniteGrp.ofHom","line":122,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom","doc":"Typecheck a `ContinuousMonoidHom` as a morphism in `ProfiniteGrp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.of\">of</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.of\">of</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L117-L117","name":"ProfiniteAddGrp.Hom.hom","line":117,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom","doc":"The underlying `ContinuousAddMonoidHom`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom\">Hom</a></span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L116-L120","name":"ProfiniteGrp.Hom.hom","line":116,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom","doc":"The underlying `ContinuousMonoidHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom\">Hom</a></span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L111-L111","name":"instConcreteCategoryProfiniteAddGrpContinuousAddMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite","line":111,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instConcreteCategoryProfiniteAddGrpContinuousAddMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instConcreteCategoryProfiniteAddGrpContinuousAddMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite\"><span class=\"name\">instConcreteCategoryProfiniteAddGrpContinuousAddMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a> <span class=\"fn\">fun (<span class=\"fn\">X</span> <span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a>) =&gt;\n  <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L111-L114","name":"instConcreteCategoryProfiniteGrpContinuousMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite","line":111,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instConcreteCategoryProfiniteGrpContinuousMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instConcreteCategoryProfiniteGrpContinuousMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite\"><span class=\"name\">instConcreteCategoryProfiniteGrpContinuousMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a> <span class=\"fn\">fun (<span class=\"fn\">X</span> <span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>) =&gt;\n  <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L105-L105","name":"instCategoryProfiniteAddGrp","line":105,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCategoryProfiniteAddGrp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCategoryProfiniteAddGrp\"><span class=\"name\">instCategoryProfiniteAddGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_1, u_1 + 1}</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L105-L109","name":"instCategoryProfiniteGrp","line":105,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCategoryProfiniteGrp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCategoryProfiniteGrp\"><span class=\"name\">instCategoryProfiniteGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_1, u_1 + 1}</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L101-L101","name":"ProfiniteGrp.Hom.hom'","line":101,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom'","doc":"The underlying `ContinuousMonoidHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom'\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom\">Hom</a></span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L97-L97","name":"ProfiniteGrp.Hom.ext_iff","line":97,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.ext_iff\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom\">Hom</a></span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom'\">hom'</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom'\">hom'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L97-L97","name":"ProfiniteGrp.Hom.ext","line":97,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.ext\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom\">Hom</a></span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hom'</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom'\">hom'</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom'\">hom'</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L96-L101","name":"ProfiniteGrp.Hom","line":96,"kind":"structure","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom","doc":"The type of morphisms in `ProfiniteGrp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">Hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L94-L94","name":"ProfiniteAddGrp.Hom.hom'","line":94,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom'","doc":"The underlying `ContinuousAddMonoidHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom'\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom\">Hom</a></span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L90-L90","name":"ProfiniteAddGrp.Hom.ext","line":90,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.ext\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom\">Hom</a></span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hom'</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom'\">hom'</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom'\">hom'</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L90-L90","name":"ProfiniteAddGrp.Hom.ext_iff","line":90,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.ext_iff\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom\">Hom</a></span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom'\">hom'</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom'\">hom'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L89-L94","name":"ProfiniteAddGrp.Hom","line":89,"kind":"structure","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom","doc":"The type of morphisms in `ProfiniteAddGrp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">Hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L84-L84","name":"ProfiniteAddGrp.coe_of","line":84,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.coe_of\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.of\">of</a> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">G</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L84-L87","name":"ProfiniteGrp.coe_of","line":84,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.coe_of\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.of\">of</a> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">G</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L74-L77","name":"ProfiniteAddGrp.of","line":74,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.of","doc":"Construct a term of `ProfiniteAddGrp` from a type endowed with the structure of a\ncompact and totally disconnected topological additive group.\n(The condition of being Hausdorff can be omitted here because totally disconnected implies that {0}\nis a closed set, thus implying Hausdorff in a topological additive group.)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.of\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L70-L82","name":"ProfiniteGrp.of","line":70,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.of","doc":"Construct a term of `ProfiniteGrp` from a type endowed with the structure of a\ncompact and totally disconnected topological group.\n(The condition of being Hausdorff can be omitted here because totally disconnected implies that {1}\nis a closed set, thus implying Hausdorff in a topological group.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.of\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L63-L63","name":"instCoeSortProfiniteAddGrpType","line":63,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCoeSortProfiniteAddGrpType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCoeSortProfiniteAddGrpType\"><span class=\"name\">instCoeSortProfiniteAddGrpType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a> <a href=\"./foundational_types.html\">(Type</a> u)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L63-L65","name":"instCoeSortProfiniteGrpType","line":63,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCoeSortProfiniteGrpType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCoeSortProfiniteGrpType\"><span class=\"name\">instCoeSortProfiniteGrpType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a> <a href=\"./foundational_types.html\">(Type</a> u)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L59-L59","name":"ProfiniteAddGrp.topologicalAddGroup","line":59,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.topologicalAddGroup","doc":"The above data together form a topological additive group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.topologicalAddGroup\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">topologicalAddGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L57-L57","name":"ProfiniteAddGrp.addGroup","line":57,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.addGroup","doc":"The additive group structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.addGroup\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">addGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L55-L55","name":"ProfiniteAddGrp.toProfinite","line":55,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite","doc":"The underlying profinite topological space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">toProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L53-L53","name":"ProfiniteAddGrp.mk","line":53,"kind":"ctor","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.mk\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toProfinite</span> : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">addGroup</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">toProfinite</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">topologicalAddGroup</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">toProfinite</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L48-L59","name":"ProfiniteAddGrp","line":48,"kind":"structure","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp","doc":"The category of profinite additive groups. A term of this type consists of a profinite\nset with a topological additive group structure.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\"><span class=\"name\">ProfiniteAddGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L46-L46","name":"ProfiniteGrp.topologicalGroup","line":46,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.topologicalGroup","doc":"The above data together form a topological group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.topologicalGroup\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">topologicalGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L44-L44","name":"ProfiniteGrp.group","line":44,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.group","doc":"The group structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.group\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">group</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L42-L42","name":"ProfiniteGrp.toProfinite","line":42,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite","doc":"The underlying profinite topological space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">toProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L40-L40","name":"ProfiniteGrp.mk","line":40,"kind":"ctor","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.mk\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toProfinite</span> : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">group</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">toProfinite</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">topologicalGroup</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">toProfinite</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L35-L46","name":"ProfiniteGrp","line":35,"kind":"structure","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp","doc":"The category of profinite groups. A term of this type consists of a profinite\nset with a topological group structure.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\"><span class=\"name\">ProfiniteGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}