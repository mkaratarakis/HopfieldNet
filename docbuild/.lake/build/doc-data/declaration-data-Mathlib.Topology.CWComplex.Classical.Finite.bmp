{"name":"Mathlib.Topology.CWComplex.Classical.Finite","instances":[],"imports":["Init","Mathlib.Topology.CWComplex.Classical.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L346-L348","name":"Topology.RelCWComplex.finite_iff_finite_cells","line":346,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.finite_iff_finite_cells","doc":"A CW complex is finite iff the total number of its cells is finite. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.finite_iff_finite_cells\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">finite_iff_finite_cells</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite\">Finite</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">_root_.Finite</a> <span class=\"fn\">((<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L326-L344","name":"Topology.RelCWComplex.finite_cells_of_finite","line":326,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.finite_cells_of_finite","doc":"If `C` is finite as a CW complex then the collection of all cells (of any dimension) is\nfinite. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.finite_cells_of_finite\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">finite_cells_of_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">finite</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite\">Finite</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">_root_.Finite</a> <span class=\"fn\">((<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L302-L324","name":"Topology.RelCWComplex.finite_of_finite_cells","line":302,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.finite_of_finite_cells","doc":"If the collection of all cells (of any dimension) of a relative CW complex `C` is finite, then\n`C` is finite as a CW complex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.finite_of_finite_cells\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">finite_of_finite_cells</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">finite</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">_root_.Finite</a> <span class=\"fn\">((<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite\">Finite</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L279-L298","name":"Topology.CWComplex.finite_mkFinite","line":279,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.CWComplex.finite_mkFinite","doc":"A CW complex that was constructed using `CWComplex.mkFinite` is finite. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.CWComplex.finite_mkFinite\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">finite_mkFinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cell</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv\">PartialEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eventually_isEmpty_cell</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">finite_cell</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">_root_.Finite</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">source_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn_symm</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.symm\">symm</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pairwiseDisjoint'</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapsTo</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n      <span class=\"fn\">(⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">union'</span> : <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite\">Finite</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L251-L277","name":"Topology.CWComplex.mkFinite","line":251,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.CWComplex.mkFinite","doc":"If we want to construct a finite CW complex we can add the conditions `eventually_isEmpty_cell`\nand `finite_cell`, relax the condition `mapsTo` and remove the condition `closed'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.CWComplex.mkFinite\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">mkFinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cell</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv\">PartialEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eventually_isEmpty_cell</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">finite_cell</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">_root_.Finite</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">source_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn_symm</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.symm\">symm</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pairwiseDisjoint'</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapsTo</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n      <span class=\"fn\">(⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">union'</span> : <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L227-L249","name":"Topology.RelCWComplex.finite_mkFinite","line":227,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.finite_mkFinite","doc":"A CW complex that was constructed using `RelCWComplex.mkFinite` is finite. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.finite_mkFinite\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">finite_mkFinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cell</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv\">PartialEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eventually_isEmpty_cell</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">finite_cell</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">_root_.Finite</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">source_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn_symm</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.symm\">symm</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pairwiseDisjoint'</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">disjointBase'</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> (<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>) <span class=\"fn\">D</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapsTo</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n      (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isClosedBase</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">union'</span> : <span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite\">Finite</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L176-L225","name":"Topology.RelCWComplex.mkFinite","line":176,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.mkFinite","doc":"If we want to construct a finite relative CW complex we can add the conditions\n`eventually_isEmpty_cell` and `finite_cell`, relax the condition `mapsTo` and remove the condition\n`closed'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.mkFinite\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">mkFinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cell</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv\">PartialEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eventually_isEmpty_cell</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">finite_cell</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">_root_.Finite</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">source_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn_symm</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.symm\">symm</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pairwiseDisjoint'</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">disjointBase'</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> (<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>) <span class=\"fn\">D</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapsTo</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n      (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isClosedBase</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">union'</span> : <span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L155-L174","name":"Topology.CWComplex.finiteType_mkFiniteType","line":155,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.CWComplex.finiteType_mkFiniteType","doc":"A CW complex that was constructed using `CWComplex.mkFiniteType` is of finite type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.CWComplex.finiteType_mkFiniteType\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">finiteType_mkFiniteType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cell</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv\">PartialEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">finite_cell</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">_root_.Finite</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">source_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn_symm</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.symm\">symm</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pairwiseDisjoint'</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapsTo</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n      <span class=\"fn\">(⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closed'</span> : <span class=\"fn\">∀ <span class=\"fn\">A</span> ⊆ <span class=\"fn\">C</span>, <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>)</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">union'</span> : <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteType\">FiniteType</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L124-L153","name":"Topology.CWComplex.mkFiniteType","line":124,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.CWComplex.mkFiniteType","doc":"If we want to construct a CW complex of finite type, we can add the condition `finite_cell` and\nrelax the condition `mapsTo`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.CWComplex.mkFiniteType\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">mkFiniteType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cell</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv\">PartialEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">finite_cell</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">_root_.Finite</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">source_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn_symm</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.symm\">symm</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pairwiseDisjoint'</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapsTo</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n      <span class=\"fn\">(⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closed'</span> : <span class=\"fn\">∀ <span class=\"fn\">A</span> ⊆ <span class=\"fn\">C</span>, <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>)</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">union'</span> : <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L100-L122","name":"Topology.RelCWComplex.finiteType_mkFiniteType","line":100,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.finiteType_mkFiniteType","doc":"A CW complex that was constructed using `RelCWComplex.mkFiniteType` is of finite type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.finiteType_mkFiniteType\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">finiteType_mkFiniteType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cell</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv\">PartialEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">finite_cell</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">_root_.Finite</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">source_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn_symm</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.symm\">symm</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pairwiseDisjoint'</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">disjointBase'</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> (<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>) <span class=\"fn\">D</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapsTo</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n      (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closed'</span> :\n  <span class=\"fn\">∀ <span class=\"fn\">A</span> ⊆ <span class=\"fn\">C</span>, <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>)</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">D</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isClosedBase</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">union'</span> : <span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteType\">FiniteType</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L66-L98","name":"Topology.RelCWComplex.mkFiniteType","line":66,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.mkFiniteType","doc":"If we want to construct a relative CW complex of finite type, we can add the condition\n`finite_cell` and relax the condition `mapsTo`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.mkFiniteType\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">mkFiniteType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cell</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv\">PartialEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">finite_cell</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">_root_.Finite</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">source_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn_symm</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.symm\">symm</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pairwiseDisjoint'</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">disjointBase'</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> (<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>) <span class=\"fn\">D</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapsTo</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n      (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closed'</span> :\n  <span class=\"fn\">∀ <span class=\"fn\">A</span> ⊆ <span class=\"fn\">C</span>, <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>)</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">D</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isClosedBase</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">union'</span> : <span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L54-L57","name":"Topology.RelCWComplex.finite_of_finiteDimensional_finiteType","line":54,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.finite_of_finiteDimensional_finiteType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.finite_of_finiteDimensional_finiteType\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">finite_of_finiteDimensional_finiteType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteType\">FiniteType</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite\">Finite</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L49-L49","name":"Topology.RelCWComplex.Finite.mk","line":49,"kind":"ctor","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite.mk\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">Finite</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toFiniteDimensional</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toFiniteType</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteType\">FiniteType</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite\">Finite</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L49-L50","name":"Topology.RelCWComplex.Finite.toFiniteDimensional","line":49,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite.toFiniteDimensional","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite.toFiniteDimensional\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">Finite</span>.<span class=\"name\">toFiniteDimensional</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite\">Finite</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L49-L50","name":"Topology.RelCWComplex.Finite.toFiniteType","line":49,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite.toFiniteType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite.toFiniteType\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">Finite</span>.<span class=\"name\">toFiniteType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite\">Finite</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteType\">FiniteType</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L48-L50","name":"Topology.RelCWComplex.Finite","line":48,"kind":"class","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite","doc":"A CW complex is finite if it is finite dimensional and of finite type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.Finite\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">Finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteDimensional\">Topology.RelCWComplex.FiniteDimensional</a> <span class=\"fn\">C</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteType\">Topology.RelCWComplex.FiniteType</a> <span class=\"fn\">C</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L46-L46","name":"Topology.RelCWComplex.FiniteType.finite_cell","line":46,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteType.finite_cell","doc":"`cell C n` is finite for every `n`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteType.finite_cell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">FiniteType</span>.<span class=\"name\">finite_cell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteType\">FiniteType</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">_root_.Finite</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L43-L43","name":"Topology.RelCWComplex.FiniteType.mk","line":43,"kind":"ctor","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteType.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteType.mk\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">FiniteType</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">finite_cell</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">_root_.Finite</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteType\">FiniteType</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L42-L46","name":"Topology.RelCWComplex.FiniteType","line":42,"kind":"class","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteType","doc":"A CW complex is of finite type if `cell C n` is finite for every `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteType\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">FiniteType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L40-L40","name":"Topology.RelCWComplex.FiniteDimensional.eventually_isEmpty_cell","line":40,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteDimensional.eventually_isEmpty_cell","doc":"For some natural number `n`, the type `cell C m` is empty for all `m ≥ n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteDimensional.eventually_isEmpty_cell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">FiniteDimensional</span>.<span class=\"name\">eventually_isEmpty_cell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L37-L37","name":"Topology.RelCWComplex.FiniteDimensional.mk","line":37,"kind":"ctor","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteDimensional.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteDimensional.mk\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">FiniteDimensional</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eventually_isEmpty_cell</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Finite.lean#L36-L40","name":"Topology.RelCWComplex.FiniteDimensional","line":36,"kind":"class","docLink":"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteDimensional","doc":"A CW complex is finite dimensional if `cell C n` is empty for all but finitely many `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Finite.html#Topology.RelCWComplex.FiniteDimensional\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">FiniteDimensional</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}