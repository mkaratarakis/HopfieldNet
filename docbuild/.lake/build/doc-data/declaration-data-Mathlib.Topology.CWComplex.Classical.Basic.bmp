{"name":"Mathlib.Topology.CWComplex.Classical.Basic","instances":[],"imports":["Init","Mathlib.Analysis.NormedSpace.Real","Mathlib.Logic.Equiv.PartialEquiv","Mathlib.Topology.MetricSpace.ProperSpace.Real"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L628-L633","name":"Topology.CWComplex.cellFrontier_subset_finite_openCell","line":628,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.cellFrontier_subset_finite_openCell","doc":"A version of `cellFrontier_subset_finite_closedCell` using open cells: The boundary of a cell is\ncontained in a finite union of open cells of a lower dimension. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.cellFrontier_subset_finite_openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">cellFrontier_subset_finite_openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L594-L626","name":"Topology.RelCWComplex.cellFrontier_subset_finite_openCell","line":594,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_finite_openCell","doc":"A version of `cellFrontier_subset_base_union_finite_closedCell` using open cells:\nThe boundary of a cell is contained in a finite union of open cells of a lower dimension. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_finite_openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_subset_finite_openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L587-L592","name":"Topology.CWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell","line":587,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell","doc":"If for every cell either `A ∩ openCell n j` or `A ∩ closedCell n j` is closed then\n`A` is closed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hAC</span> : <span class=\"fn\">A</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> → <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L569-L585","name":"Topology.RelCWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell","line":569,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell","doc":"If for every cell either `A ∩ openCell n j` or `A ∩ closedCell n j` is closed then\n`A` is closed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hAC</span> : <span class=\"fn\">A</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hDA</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">D</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> → <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L562-L567","name":"Topology.CWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell","line":562,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">∀ <span class=\"fn\">m</span> ≤ <span class=\"fn\">n</span>, <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">j</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L543-L560","name":"Topology.RelCWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell","line":543,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell","doc":"If for all `m ≤ n` and every `i : cell C m` the intersection `A ∩ closedCell m j` is closed\nand `A ∩ D` is closed then `A ∩ cellFrontier (n + 1) j` is closed for every\n`j : cell C (n + 1)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">∀ <span class=\"fn\">m</span> ≤ <span class=\"fn\">n</span>, <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hD</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">D</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">j</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L537-L541","name":"Topology.RelCWComplex.skeleton_inter_closedCell_eq_skeleton_inter_cellFrontier","line":537,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_inter_closedCell_eq_skeleton_inter_cellFrontier","doc":"Version of `skeletonLT_inter_closedCell_eq_skeletonLT_inter_cellFrontier` using `skeleton`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_inter_closedCell_eq_skeleton_inter_cellFrontier\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeleton_inter_closedCell_eq_skeleton_inter_cellFrontier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnm</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L526-L535","name":"Topology.RelCWComplex.skeletonLT_inter_closedCell_eq_skeletonLT_inter_cellFrontier","line":526,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_inter_closedCell_eq_skeletonLT_inter_cellFrontier","doc":"A skeleton intersected with a closed cell of a higher dimension is the skeleton intersected with\nthe boundary of the cell. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_inter_closedCell_eq_skeletonLT_inter_cellFrontier\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT_inter_closedCell_eq_skeletonLT_inter_cellFrontier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnm</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L521-L524","name":"Topology.RelCWComplex.disjoint_interior_base_iUnion_closedCell","line":521,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_interior_base_iUnion_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_interior_base_iUnion_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjoint_interior_base_iUnion_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">D</span>)</span> <span class=\"fn\">(⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L509-L519","name":"Topology.RelCWComplex.disjoint_interior_base_closedCell","line":509,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_interior_base_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_interior_base_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjoint_interior_base_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">D</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L503-L507","name":"Topology.RelCWComplex.disjoint_base_iUnion_openCell","line":503,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_base_iUnion_openCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_base_iUnion_openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjoint_base_iUnion_openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">D</span> <span class=\"fn\">(⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L498-L501","name":"Topology.RelCWComplex.disjoint_skeleton_openCell","line":498,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_skeleton_openCell","doc":"A skeleton and an open cell of a higher dimension are disjoint. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_skeleton_openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjoint_skeleton_openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nlem</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L486-L496","name":"Topology.RelCWComplex.disjoint_skeletonLT_openCell","line":486,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_skeletonLT_openCell","doc":"A skeleton and an open cell of a higher dimension are disjoint. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_skeletonLT_openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjoint_skeletonLT_openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnm</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L482-L484","name":"Topology.CWComplex.exists_mem_openCell_of_mem_skeleton","line":482,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.exists_mem_openCell_of_mem_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.exists_mem_openCell_of_mem_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">exists_mem_openCell_of_mem_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L473-L480","name":"Topology.RelCWComplex.mem_skeleton_iff","line":473,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mem_skeleton_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mem_skeleton_iff\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">mem_skeleton_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">D</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L469-L471","name":"Topology.CWComplex.mem_skeletonLT_iff","line":469,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mem_skeletonLT_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mem_skeletonLT_iff\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">mem_skeletonLT_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L465-L467","name":"Topology.RelCWComplex.mem_skeletonLT_iff","line":465,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mem_skeletonLT_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mem_skeletonLT_iff\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">mem_skeletonLT_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">D</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L458-L463","name":"Topology.RelCWComplex.eq_of_not_disjoint_openCell","line":458,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.eq_of_not_disjoint_openCell","doc":"The contrapositive of `disjoint_openCell_of_ne`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.eq_of_not_disjoint_openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">eq_of_not_disjoint_openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">i</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Sigma.mk\">⟨</a><span class=\"fn\">n</span>, <span class=\"fn\">j</span><a href=\"./Init/Core.html#Sigma.mk\">⟩</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Sigma.mk\">⟨</a><span class=\"fn\">m</span>, <span class=\"fn\">i</span><a href=\"./Init/Core.html#Sigma.mk\">⟩</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L454-L456","name":"Topology.CWComplex.iUnion_openCell_eq_complex","line":454,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.iUnion_openCell_eq_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.iUnion_openCell_eq_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">iUnion_openCell_eq_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L450-L452","name":"Topology.RelCWComplex.union_iUnion_openCell_eq_complex","line":450,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.union_iUnion_openCell_eq_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.union_iUnion_openCell_eq_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">union_iUnion_openCell_eq_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L446-L448","name":"Topology.CWComplex.iUnion_openCell_eq_skeleton","line":446,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.iUnion_openCell_eq_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.iUnion_openCell_eq_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">iUnion_openCell_eq_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L442-L444","name":"Topology.RelCWComplex.iUnion_openCell_eq_skeleton","line":442,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_openCell_eq_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_openCell_eq_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">iUnion_openCell_eq_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L438-L440","name":"Topology.CWComplex.iUnion_openCell_eq_skeletonLT","line":438,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.iUnion_openCell_eq_skeletonLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.iUnion_openCell_eq_skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">iUnion_openCell_eq_skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L412-L436","name":"Topology.RelCWComplex.iUnion_openCell_eq_skeletonLT","line":412,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_openCell_eq_skeletonLT","doc":"A version of the definition of `skeletonLT` with open cells. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_openCell_eq_skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">iUnion_openCell_eq_skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L408-L410","name":"Topology.RelCWComplex.skeleton_union_iUnion_closedCell_eq_skeleton_succ","line":408,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_union_iUnion_closedCell_eq_skeleton_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_union_iUnion_closedCell_eq_skeleton_succ\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeleton_union_iUnion_closedCell_eq_skeleton_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L401-L406","name":"Topology.RelCWComplex.skeletonLT_union_iUnion_closedCell_eq_skeletonLT_succ","line":401,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_union_iUnion_closedCell_eq_skeletonLT_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_union_iUnion_closedCell_eq_skeletonLT_succ\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT_union_iUnion_closedCell_eq_skeletonLT_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L392-L399","name":"Topology.RelCWComplex.isClosed","line":392,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isClosed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L388-L390","name":"Topology.RelCWComplex.base_subset_complex","line":388,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.base_subset_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.base_subset_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">base_subset_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L385-L386","name":"Topology.RelCWComplex.base_subset_skeleton","line":385,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.base_subset_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.base_subset_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">base_subset_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L382-L383","name":"Topology.RelCWComplex.base_subset_skeletonLT","line":382,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.base_subset_skeletonLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.base_subset_skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">base_subset_skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L378-L380","name":"Topology.RelCWComplex.cellFrontier_zero_eq_empty","line":378,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_zero_eq_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_zero_eq_empty\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_zero_eq_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">0</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L374-L376","name":"Topology.RelCWComplex.openCell_zero_eq_singleton","line":374,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_zero_eq_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_zero_eq_singleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">openCell_zero_eq_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">0</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">0</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecEmpty\">![</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecEmpty\">]</a></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L370-L372","name":"Topology.RelCWComplex.closedCell_zero_eq_singleton","line":370,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_zero_eq_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_zero_eq_singleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closedCell_zero_eq_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">0</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">0</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecEmpty\">![</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecEmpty\">]</a></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L366-L368","name":"Topology.RelCWComplex.iUnion_cellFrontier_subset_skeleton","line":366,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_cellFrontier_subset_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_cellFrontier_subset_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">iUnion_cellFrontier_subset_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">l</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">l</span> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">l</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L362-L364","name":"Topology.RelCWComplex.iUnion_cellFrontier_subset_skeletonLT","line":362,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_cellFrontier_subset_skeletonLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_cellFrontier_subset_skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">iUnion_cellFrontier_subset_skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">l</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">l</span> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">l</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L358-L360","name":"Topology.RelCWComplex.cellFrontier_subset_complex","line":358,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_subset_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L354-L356","name":"Topology.RelCWComplex.cellFrontier_subset_skeleton","line":354,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_subset_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L344-L352","name":"Topology.RelCWComplex.cellFrontier_subset_skeletonLT","line":344,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_skeletonLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_subset_skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L339-L342","name":"Topology.RelCWComplex.openCell_subset_complex","line":339,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">openCell_subset_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L335-L337","name":"Topology.RelCWComplex.openCell_subset_skeleton","line":335,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">openCell_subset_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L331-L333","name":"Topology.RelCWComplex.openCell_subset_skeletonLT","line":331,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_skeletonLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">openCell_subset_skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L326-L329","name":"Topology.RelCWComplex.closedCell_subset_complex","line":326,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_subset_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_subset_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closedCell_subset_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L322-L324","name":"Topology.RelCWComplex.closedCell_subset_skeleton","line":322,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_subset_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_subset_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closedCell_subset_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L315-L320","name":"Topology.RelCWComplex.closedCell_subset_skeletonLT","line":315,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_subset_skeletonLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_subset_skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closedCell_subset_skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L311-L313","name":"Topology.RelCWComplex.skeleton_subset_complex","line":311,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_subset_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_subset_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeleton_subset_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L307-L309","name":"Topology.RelCWComplex.skeletonLT_subset_complex","line":307,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_subset_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_subset_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT_subset_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L304-L305","name":"Topology.RelCWComplex.skeleton_monotone","line":304,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_monotone\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeleton_monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L300-L302","name":"Topology.RelCWComplex.skeleton_mono","line":300,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_mono\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeleton_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L297-L298","name":"Topology.RelCWComplex.skeletonLT_monotone","line":297,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_monotone\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT_monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L289-L295","name":"Topology.RelCWComplex.skeletonLT_mono","line":289,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_mono\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L287-L287","name":"Topology.RelCWComplex.skeleton_top","line":287,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_top\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeleton_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L284-L285","name":"Topology.RelCWComplex.skeletonLT_top","line":284,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_top\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L279-L282","name":"Topology.CWComplex.closed","line":279,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.closed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.closed\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">closed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">asubc</span> : <span class=\"fn\">A</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L273-L277","name":"Topology.RelCWComplex.closed","line":273,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closed\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">asubc</span> : <span class=\"fn\">A</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span>)</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">D</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L265-L271","name":"Topology.RelCWComplex.closure_openCell_eq_closedCell","line":265,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closure_openCell_eq_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closure_openCell_eq_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closure_openCell_eq_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L261-L263","name":"Topology.RelCWComplex.isClosed_cellFrontier","line":261,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_cellFrontier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_cellFrontier\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isClosed_cellFrontier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L257-L259","name":"Topology.RelCWComplex.isCompact_cellFrontier","line":257,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isCompact_cellFrontier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isCompact_cellFrontier\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isCompact_cellFrontier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L254-L255","name":"Topology.RelCWComplex.isClosed_closedCell","line":254,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isClosed_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L250-L252","name":"Topology.RelCWComplex.isCompact_closedCell","line":250,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isCompact_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isCompact_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isCompact_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L247-L248","name":"Topology.CWComplex.skeletonLT_zero_eq_empty","line":247,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.skeletonLT_zero_eq_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.skeletonLT_zero_eq_empty\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">skeletonLT_zero_eq_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L244-L245","name":"Topology.RelCWComplex.skeletonLT_zero_eq_base","line":244,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_zero_eq_base","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_zero_eq_base\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT_zero_eq_base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">D</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L233-L236","name":"Topology.RelCWComplex.skeleton","line":233,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton","doc":"The `n`-skeleton of a CW complex, for `n ∈ ℕ ∪ {∞}`. For statements use `skeletonLT` instead\nand then derive the statement about `skeleton`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L225-L231","name":"Topology.RelCWComplex.skeletonLT","line":225,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT","doc":"A non-standard definition of the `n`-skeleton of a CW complex for `n ∈ ℕ ∪ {∞}`.\nThis allows the base case of induction to be about the base instead of being about the union of\nthe base and some points.\nThe standard `skeleton` is defined in terms of `skeletonLT`. `skeletonLT` is preferred\nin statements. You should then derive the statement about `skeleton`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L221-L223","name":"Topology.RelCWComplex.map_zero_mem_closedCell","line":221,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map_zero_mem_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map_zero_mem_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">map_zero_mem_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L216-L219","name":"Topology.RelCWComplex.map_zero_mem_openCell","line":216,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map_zero_mem_openCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map_zero_mem_openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">map_zero_mem_openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L210-L214","name":"Topology.RelCWComplex.cellFrontier_union_openCell_eq_closedCell","line":210,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_union_openCell_eq_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_union_openCell_eq_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_union_openCell_eq_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L207-L208","name":"Topology.RelCWComplex.cellFrontier_subset_closedCell","line":207,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_subset_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L204-L205","name":"Topology.RelCWComplex.openCell_subset_closedCell","line":204,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">openCell_subset_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L199-L202","name":"Topology.CWComplex.union","line":199,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.union\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L196-L197","name":"Topology.RelCWComplex.union","line":196,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.union\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L189-L194","name":"Topology.CWComplex.cellFrontier_subset_finite_closedCell","line":189,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.cellFrontier_subset_finite_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.cellFrontier_subset_finite_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">cellFrontier_subset_finite_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L181-L187","name":"Topology.RelCWComplex.cellFrontier_subset_base_union_finite_closedCell","line":181,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_base_union_finite_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_base_union_finite_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_subset_base_union_finite_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L176-L179","name":"Topology.RelCWComplex.disjoint_openCell_of_ne","line":176,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_openCell_of_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_openCell_of_ne\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjoint_openCell_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ne</span> : <a href=\"./Init/Core.html#Sigma.mk\">⟨</a><span class=\"fn\">n</span>, <span class=\"fn\">i</span><a href=\"./Init/Core.html#Sigma.mk\">⟩</a> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Core.html#Sigma.mk\">⟨</a><span class=\"fn\">m</span>, <span class=\"fn\">j</span><a href=\"./Init/Core.html#Sigma.mk\">⟩</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L172-L174","name":"Topology.RelCWComplex.disjointBase","line":172,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjointBase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjointBase\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjointBase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L168-L170","name":"Topology.RelCWComplex.pairwiseDisjoint","line":168,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.pairwiseDisjoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.pairwiseDisjoint\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">pairwiseDisjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L165-L166","name":"Topology.CWComplex.mapsto","line":165,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mapsto","doc":"**Alias** of `Topology.CWComplex.mapsTo`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mapsto\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">mapsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span> <span class=\"fn\">(⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L159-L163","name":"Topology.CWComplex.mapsTo","line":159,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mapsTo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mapsTo\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">mapsTo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span> <span class=\"fn\">(⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L147-L150","name":"Topology.RelCWComplex.cellFrontier","line":147,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier","doc":"The boundary of the `n`-cell given by the index `i`. Use this instead of `map n i '' sphere 0 1`\nwhenever possible. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L142-L145","name":"Topology.RelCWComplex.closedCell","line":142,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell","doc":"The closed `n`-cell given by the index `i`. Use this instead of `map n i '' closedBall 0 1`\nwhenever possible. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L138-L140","name":"Topology.RelCWComplex.openCell","line":138,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell","doc":"The open `n`-cell given by the index `i`. Use this instead of `map n i '' ball 0 1` whenever\npossible. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L111-L134","name":"Topology.CWComplex.mk","line":111,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mk","doc":"A constructor for `CWComplex`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mk\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cell</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv\">PartialEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">source_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn_symm</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.symm\">symm</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pairwiseDisjoint'</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapsTo</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>),\n    <span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">m</span>)</span></span></span>),\n      <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n        <span class=\"fn\">(⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closed'</span> : <span class=\"fn\">∀ <span class=\"fn\">A</span> ⊆ <span class=\"fn\">C</span>, <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>)</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">union'</span> : <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L107-L109","name":"Topology.CWComplex","line":107,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex","doc":"Characterizing when a subspace `C` of a topological space `X` is a CW complex. Note that this\nrequires `C` to be closed. If `C` is not closed choose `X` to be `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L104-L105","name":"Topology.RelCWComplex.mapsto","line":104,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mapsto","doc":"**Alias** of `Topology.RelCWComplex.mapsTo`.\n\n---\n\nThe boundary of a cell is contained in a finite union of closed cells of a lower dimension.\nUse `RelCWComplex.cellFrontier_subset_finite_closedCell` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mapsto\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">mapsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n    (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L102-L102","name":"Topology.RelCWComplex.union'","line":102,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.union'","doc":"The union of all closed cells equals `C`. Use `RelCWComplex.union` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.union'\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">union'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L100-L100","name":"Topology.RelCWComplex.isClosedBase","line":100,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosedBase","doc":"The base `D` is closed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosedBase\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isClosedBase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L97-L97","name":"Topology.RelCWComplex.closed'","line":97,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closed'","doc":"A CW complex has weak topology, i.e. a set `A` in `X` is closed iff its intersection with\nevery closed cell and `D` is closed. Use `RelCWComplex.closed` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closed'\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closed'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">asubc</span> : <span class=\"fn\">A</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>)</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">D</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L93-L93","name":"Topology.RelCWComplex.mapsTo","line":93,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mapsTo","doc":"The boundary of a cell is contained in a finite union of closed cells of a lower dimension.\nUse `RelCWComplex.cellFrontier_subset_finite_closedCell` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mapsTo\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">mapsTo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n    (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L90-L90","name":"Topology.RelCWComplex.disjointBase'","line":90,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjointBase'","doc":"All open cells are disjoint with the base. Use `RelCWComplex.disjointBase` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjointBase'\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjointBase'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> (<span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>) <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L87-L87","name":"Topology.RelCWComplex.pairwiseDisjoint'","line":87,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.pairwiseDisjoint'","doc":"The open cells are pairwise disjoint. Use `RelCWComplex.pairwiseDisjoint` or\n`RelCWComplex.disjoint_openCell_of_ne` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.pairwiseDisjoint'\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">pairwiseDisjoint'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L84-L84","name":"Topology.RelCWComplex.continuousOn_symm","line":84,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.continuousOn_symm","doc":"The inverse of the restriction to `ball 0 1` is continuous on the image. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.continuousOn_symm\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">continuousOn_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.symm\">symm</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L82-L82","name":"Topology.RelCWComplex.continuousOn","line":82,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.continuousOn","doc":"The characteristic maps are continuous when restricting to `closedBall 0 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.continuousOn\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">continuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L80-L80","name":"Topology.RelCWComplex.source_eq","line":80,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.source_eq","doc":"The source of every characteristic map of dimension `n` is\n`(ball 0 1 : Set (Fin n → ℝ))`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.source_eq\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">source_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L77-L77","name":"Topology.RelCWComplex.map","line":77,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map","doc":"The characteristic map of the `n`-cell given by the index `i`.\nThis map is a bijection when restricting to `ball 0 1`, where we consider `(Fin n → ℝ)`\nendowed with the maximum metric. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv\">PartialEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L73-L73","name":"Topology.RelCWComplex.cell","line":73,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell","doc":"The indexing type of the cells of dimension `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L71-L71","name":"Topology.RelCWComplex.mk","line":71,"kind":"ctor","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mk\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cell</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv\">PartialEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">source_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn_symm</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.symm\">symm</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pairwiseDisjoint'</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">disjointBase'</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> (<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>) <span class=\"fn\">D</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapsTo</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>),\n    <span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">m</span>)</span></span></span>),\n      <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n        (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closed'</span> :\n  <span class=\"fn\">∀ <span class=\"fn\">A</span> ⊆ <span class=\"fn\">C</span>, <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>)</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">D</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isClosedBase</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">union'</span> : <span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Topology/CWComplex/Classical/Basic.lean#L66-L102","name":"Topology.RelCWComplex","line":66,"kind":"class","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex","doc":"A CW complex of a topological space `X` relative to another subspace `D` is the data of its\n*`n`-cells* `cell n i` for each `n : ℕ` along with *attaching maps* that satisfy a number of\nproperties with the most important being closure-finiteness (`mapsTo`) and weak topology\n(`closed'`). Note that this definition requires `C` and `D` to be closed subspaces.\nIf `C` is not closed choose `X` to be `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}