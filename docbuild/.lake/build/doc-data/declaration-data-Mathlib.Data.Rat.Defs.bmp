{"name":"Mathlib.Data.Rat.Defs","instances":[{"typeNames":["Rat","Nat"],"name":"Rat.instPowNat","className":"Pow"},{"typeNames":["Rat"],"name":"Rat.instInv","className":"Inv"},{"typeNames":["Rat"],"name":"Rat.nontrivial","className":"Nontrivial"},{"typeNames":["Rat"],"name":"Rat.addCommGroup","className":"AddCommGroup"},{"typeNames":["Rat"],"name":"Rat.addGroup","className":"AddGroup"},{"typeNames":["Rat"],"name":"Rat.addCommMonoid","className":"AddCommMonoid"},{"typeNames":["Rat"],"name":"Rat.addMonoid","className":"AddMonoid"},{"typeNames":["Rat"],"name":"Rat.addLeftCancelSemigroup","className":"AddLeftCancelSemigroup"},{"typeNames":["Rat"],"name":"Rat.addRightCancelSemigroup","className":"AddRightCancelSemigroup"},{"typeNames":["Rat"],"name":"Rat.addCommSemigroup","className":"AddCommSemigroup"},{"typeNames":["Rat"],"name":"Rat.addSemigroup","className":"AddSemigroup"},{"typeNames":["Rat"],"name":"Rat.commMonoid","className":"CommMonoid"},{"typeNames":["Rat"],"name":"Rat.monoid","className":"Monoid"},{"typeNames":["Rat"],"name":"Rat.commSemigroup","className":"CommSemigroup"},{"typeNames":["Rat"],"name":"Rat.semigroup","className":"Semigroup"},{"typeNames":["Rat","Int","Int.cast"],"name":"Rat.canLift","className":"CanLift"}],"imports":["Init","Batteries.Data.Rat.Lemmas","Mathlib.Algebra.Group.Defs","Mathlib.Data.Rat.Init","Mathlib.Order.Basic","Mathlib.Tactic.Common","Mathlib.Data.Nat.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L432-L442","name":"Rat.divCasesOn","line":432,"kind":"def","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divCasesOn","doc":"A version of `Rat.casesOn` that uses `/` instead of `Rat.mk'`. Use as\n```lean\ncases r with\n| div p q nonzero coprime =>\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divCasesOn\"><span class=\"name\">Rat</span>.<span class=\"name\">divCasesOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">div</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) → <span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d</span></span> → <span class=\"fn\"><span class=\"fn\">C</span> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L427-L428","name":"Rat.coe_int_inj","line":427,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.coe_int_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.coe_int_inj\"><span class=\"name\">Rat</span>.<span class=\"name\">coe_int_inj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L422-L423","name":"Rat.canLift","line":422,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.canLift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.canLift\"><span class=\"name\">Rat</span>.<span class=\"name\">canLift</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Lift.html#CanLift\">CanLift</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Init/Data/Int/Basic.html#Int.cast\">Int.cast</a> <span class=\"fn\">fun (<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L419-L420","name":"Rat.den_eq_one_iff","line":419,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.den_eq_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.den_eq_one_iff\"><span class=\"name\">Rat</span>.<span class=\"name\">den_eq_one_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L415-L417","name":"Rat.eq_num_of_isInt","line":415,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.eq_num_of_isInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.eq_num_of_isInt\"><span class=\"name\">Rat</span>.<span class=\"name\">eq_num_of_isInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.isInt\">isInt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L410-L413","name":"Rat.coe_int_num_of_den_eq_one","line":410,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.coe_int_num_of_den_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.coe_int_num_of_den_eq_one\"><span class=\"name\">Rat</span>.<span class=\"name\">coe_int_num_of_den_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hq</span> : <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L404-L408","name":"Rat.divInt_mul_divInt_cancel","line":404,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_mul_divInt_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_mul_divInt_cancel\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_mul_divInt_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">x</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L402-L402","name":"Rat.natCast_div_eq_divInt","line":402,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.natCast_div_eq_divInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.natCast_div_eq_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">natCast_div_eq_divInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L400-L400","name":"Rat.intCast_div_eq_divInt","line":400,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.intCast_div_eq_divInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.intCast_div_eq_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">intCast_div_eq_divInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L398-L398","name":"Rat.divInt_eq_div","line":398,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_eq_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_eq_div\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_eq_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L392-L396","name":"Rat.add_divInt","line":392,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.add_divInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.add_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">add_divInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>) <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L387-L388","name":"Rat.nonneg_total","line":387,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.nonneg_total","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.nonneg_total\"><span class=\"name\">Rat</span>.<span class=\"name\">nonneg_total</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L383-L385","name":"Rat.nonneg_antisymm","line":383,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.nonneg_antisymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.nonneg_antisymm\"><span class=\"name\">Rat</span>.<span class=\"name\">nonneg_antisymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">q</span> → <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">q</span> → <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L380-L381","name":"Rat.divInt_ne_zero_of_ne_zero","line":380,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_ne_zero_of_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_ne_zero_of_ne_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_ne_zero_of_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L377-L378","name":"Rat.mk_denom_ne_zero_of_ne_zero","line":377,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mk_denom_ne_zero_of_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mk_denom_ne_zero_of_ne_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">mk_denom_ne_zero_of_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hq</span> : <span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hqnd</span> : <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L374-L375","name":"Rat.mk_num_ne_zero_of_ne_zero","line":374,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mk_num_ne_zero_of_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mk_num_ne_zero_of_ne_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">mk_num_ne_zero_of_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hq</span> : <span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hqnd</span> : <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L370-L372","name":"Rat.den_one","line":370,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.den_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.den_one\"><span class=\"name\">Rat</span>.<span class=\"name\">den_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L367-L368","name":"Rat.num_one","line":367,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_one\"><span class=\"name\">Rat</span>.<span class=\"name\">num_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L363-L364","name":"Rat.zero_iff_num_zero","line":363,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.zero_iff_num_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.zero_iff_num_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">zero_iff_num_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L361-L361","name":"Rat.zero_of_num_zero","line":361,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.zero_of_num_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.zero_of_num_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">zero_of_num_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hq</span> : <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L358-L359","name":"Rat.den_zero","line":358,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.den_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.den_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">den_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L354-L355","name":"Rat.num_zero","line":354,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">num_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L349-L351","name":"Rat.num_neg_eq_neg_num","line":349,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_neg_eq_neg_num","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_neg_eq_neg_num\"><span class=\"name\">Rat</span>.<span class=\"name\">num_neg_eq_neg_num</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">q</span>).<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L345-L347","name":"Rat.den_neg_eq_den","line":345,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.den_neg_eq_den","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.den_neg_eq_den\"><span class=\"name\">Rat</span>.<span class=\"name\">den_neg_eq_den</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">q</span>).<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L337-L343","name":"Rat.eq_iff_mul_eq_mul","line":337,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.eq_iff_mul_eq_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.eq_iff_mul_eq_mul\"><span class=\"name\">Rat</span>.<span class=\"name\">eq_iff_mul_eq_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L335-L335","name":"Rat.semigroup","line":335,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.semigroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.semigroup\"><span class=\"name\">Rat</span>.<span class=\"name\">semigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Semigroup\">Semigroup</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L333-L333","name":"Rat.commSemigroup","line":333,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.commSemigroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.commSemigroup\"><span class=\"name\">Rat</span>.<span class=\"name\">commSemigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommSemigroup\">CommSemigroup</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L331-L331","name":"Rat.monoid","line":331,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.monoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.monoid\"><span class=\"name\">Rat</span>.<span class=\"name\">monoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L314-L329","name":"Rat.commMonoid","line":314,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.commMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.commMonoid\"><span class=\"name\">Rat</span>.<span class=\"name\">commMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L312-L312","name":"Rat.addSemigroup","line":312,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addSemigroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addSemigroup\"><span class=\"name\">Rat</span>.<span class=\"name\">addSemigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddSemigroup\">AddSemigroup</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L310-L310","name":"Rat.addCommSemigroup","line":310,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addCommSemigroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addCommSemigroup\"><span class=\"name\">Rat</span>.<span class=\"name\">addCommSemigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup\">AddCommSemigroup</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L308-L308","name":"Rat.addRightCancelSemigroup","line":308,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addRightCancelSemigroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addRightCancelSemigroup\"><span class=\"name\">Rat</span>.<span class=\"name\">addRightCancelSemigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelSemigroup\">AddRightCancelSemigroup</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L306-L306","name":"Rat.addLeftCancelSemigroup","line":306,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addLeftCancelSemigroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addLeftCancelSemigroup\"><span class=\"name\">Rat</span>.<span class=\"name\">addLeftCancelSemigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelSemigroup\">AddLeftCancelSemigroup</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L304-L304","name":"Rat.addMonoid","line":304,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addMonoid\"><span class=\"name\">Rat</span>.<span class=\"name\">addMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L302-L302","name":"Rat.addCommMonoid","line":302,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addCommMonoid\"><span class=\"name\">Rat</span>.<span class=\"name\">addCommMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L300-L300","name":"Rat.addGroup","line":300,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addGroup\"><span class=\"name\">Rat</span>.<span class=\"name\">addGroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L287-L298","name":"Rat.addCommGroup","line":287,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addCommGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addCommGroup\"><span class=\"name\">Rat</span>.<span class=\"name\">addCommGroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L283-L283","name":"Rat.nontrivial","line":283,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.nontrivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.nontrivial\"><span class=\"name\">Rat</span>.<span class=\"name\">nontrivial</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L278-L279","name":"Rat.inv_mul_cancel","line":278,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.inv_mul_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.inv_mul_cancel\"><span class=\"name\">Rat</span>.<span class=\"name\">inv_mul_cancel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L273-L276","name":"Rat.mul_inv_cancel","line":273,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mul_inv_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mul_inv_cancel\"><span class=\"name\">Rat</span>.<span class=\"name\">mul_inv_cancel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L268-L269","name":"Rat.zero_ne_one","line":268,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.zero_ne_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.zero_ne_one\"><span class=\"name\">Rat</span>.<span class=\"name\">zero_ne_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L265-L266","name":"Rat.mul_add","line":265,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mul_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mul_add\"><span class=\"name\">Rat</span>.<span class=\"name\">mul_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L258-L263","name":"Rat.add_mul","line":258,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.add_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.add_mul\"><span class=\"name\">Rat</span>.<span class=\"name\">add_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L252-L256","name":"Rat.mul_assoc","line":252,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mul_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mul_assoc\"><span class=\"name\">Rat</span>.<span class=\"name\">mul_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L250-L250","name":"Rat.divInt_one_one","line":250,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_one_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_one_one\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_one_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">1</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L248-L248","name":"Rat.mkRat_one","line":248,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mkRat_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mkRat_one\"><span class=\"name\">Rat</span>.<span class=\"name\">mkRat_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#mkRat\">mkRat</a> <span class=\"fn\">n</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L247-L247","name":"Rat.divInt_one","line":247,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_one\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L244-L245","name":"Rat.neg_add_cancel","line":244,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.neg_add_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.neg_add_cancel\"><span class=\"name\">Rat</span>.<span class=\"name\">neg_add_cancel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L236-L242","name":"Rat.add_assoc","line":236,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.add_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.add_assoc\"><span class=\"name\">Rat</span>.<span class=\"name\">add_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L233-L234","name":"Rat.add_comm","line":233,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.add_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.add_comm\"><span class=\"name\">Rat</span>.<span class=\"name\">add_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L231-L231","name":"Rat.zero_add","line":231,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.zero_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.zero_add\"><span class=\"name\">Rat</span>.<span class=\"name\">zero_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L229-L229","name":"Rat.add_zero","line":229,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.add_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.add_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">add_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L224-L225","name":"Rat.div_def'","line":224,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.div_def'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.div_def'\"><span class=\"name\">Rat</span>.<span class=\"name\">div_def'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">r</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> (<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span></span>) (<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L220-L222","name":"Rat.divInt_div_divInt","line":220,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_div_divInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_div_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_div_divInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n₁ </span><span class=\"fn\">d₁ </span><span class=\"fn\">n₂ </span><span class=\"fn\">d₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n₁</span> <span class=\"fn\">d₁</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n₂</span> <span class=\"fn\">d₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> (<span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d₂</span>) (<span class=\"fn\">d₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n₂</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L218-L218","name":"Rat.inv_def'","line":218,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.inv_def'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.inv_def'\"><span class=\"name\">Rat</span>.<span class=\"name\">inv_def'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span>)</span> <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L215-L216","name":"Rat.inv_mkRat","line":215,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.inv_mkRat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.inv_mkRat\"><span class=\"name\">Rat</span>.<span class=\"name\">inv_mkRat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Batteries/Data/Rat/Basic.html#mkRat\">mkRat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">(↑<span class=\"fn\">b</span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L213-L213","name":"Rat.inv_divInt'","line":213,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.inv_divInt'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.inv_divInt'\"><span class=\"name\">Rat</span>.<span class=\"name\">inv_divInt'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L210-L211","name":"Rat.instInv","line":210,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.instInv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.instInv\"><span class=\"name\">Rat</span>.<span class=\"name\">instInv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L206-L208","name":"Rat.mk'_pow","line":206,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mk'_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mk'_pow\"><span class=\"name\">Rat</span>.<span class=\"name\">mk'_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">den</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">den</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hdn</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">num</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">den</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">num</span>, <span class=\"fn\">den</span> := <span class=\"fn\">den</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">hd</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">hdn</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">}</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">num</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>, <span class=\"fn\">den</span> := <span class=\"fn\">den</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">⋯</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L204-L204","name":"Rat.den_pow","line":204,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.den_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.den_pow\"><span class=\"name\">Rat</span>.<span class=\"name\">den_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>).<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L203-L203","name":"Rat.num_pow","line":203,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_pow\"><span class=\"name\">Rat</span>.<span class=\"name\">num_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>).<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L200-L201","name":"Rat.pow_eq_divInt","line":200,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.pow_eq_divInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.pow_eq_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">pow_eq_divInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> (<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) (<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L197-L198","name":"Rat.pow_eq_mkRat","line":197,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.pow_eq_mkRat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.pow_eq_mkRat\"><span class=\"name\">Rat</span>.<span class=\"name\">pow_eq_mkRat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#mkRat\">mkRat</a> (<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) (<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L192-L195","name":"Rat.pow_def","line":192,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.pow_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.pow_def\"><span class=\"name\">Rat</span>.<span class=\"name\">pow_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>, <span class=\"fn\">den</span> := <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">⋯</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L188-L190","name":"Rat.instPowNat","line":188,"kind":"instance","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.instPowNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.instPowNat\"><span class=\"name\">Rat</span>.<span class=\"name\">instPowNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L186-L186","name":"Rat.divInt_eq_divInt","line":186,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_eq_divInt","doc":"**Alias** of `Rat.divInt_eq_iff`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_eq_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_eq_divInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d₁ </span><span class=\"fn\">d₂ </span><span class=\"fn\">n₁ </span><span class=\"fn\">n₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z₁</span> : <span class=\"fn\">d₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z₂</span> : <span class=\"fn\">d₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n₁</span> <span class=\"fn\">d₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n₂</span> <span class=\"fn\">d₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d₂</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d₁</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L182-L183","name":"Rat.mul_eq_mkRat","line":182,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mul_eq_mkRat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mul_eq_mkRat\"><span class=\"name\">Rat</span>.<span class=\"name\">mul_eq_mkRat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">r</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#mkRat\">mkRat</a> (<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span>) (<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L176-L180","name":"Rat.mk'_mul_mk'","line":176,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mk'_mul_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mk'_mul_mk'\"><span class=\"name\">Rat</span>.<span class=\"name\">mk'_mul_mk'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n₁ </span><span class=\"fn\">n₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d₁ </span><span class=\"fn\">d₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd₁</span> : <span class=\"fn\">d₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd₂</span> : <span class=\"fn\">d₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnd₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n₁</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnd₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n₂</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n₁</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n₂</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">n₁</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d₁</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">hd₁</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">hnd₁</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">}</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">n₂</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d₂</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">hd₂</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">hnd₂</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n₂</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d₂</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">⋯</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L166-L172","name":"Rat.divInt_mul_divInt'","line":166,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_mul_divInt'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_mul_divInt'\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_mul_divInt'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n₁ </span><span class=\"fn\">d₁ </span><span class=\"fn\">n₂ </span><span class=\"fn\">d₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n₁</span> <span class=\"fn\">d₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n₂</span> <span class=\"fn\">d₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> (<span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n₂</span>) (<span class=\"fn\">d₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d₂</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L162-L162","name":"Rat.divInt_neg","line":162,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_neg\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">d</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">n</span>) <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L160-L160","name":"Rat.neg_def","line":160,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.neg_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.neg_def\"><span class=\"name\">Rat</span>.<span class=\"name\">neg_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span>) <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L138-L154","name":"Rat.lift_binop_eq","line":138,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.lift_binop_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.lift_binop_eq\"><span class=\"name\">Rat</span>.<span class=\"name\">lift_binop_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> → <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> → <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fv</span> :\n  <span class=\"fn\">∀ {<span class=\"fn\">n₁</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>} {<span class=\"fn\">d₁</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>} {<span class=\"fn\">h₁</span> : <span class=\"fn\">d₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>} {<span class=\"fn\">c₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n₁</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d₁</span></span>} {<span class=\"fn\">n₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>} {<span class=\"fn\">d₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>} {<span class=\"fn\">h₂</span> : <span class=\"fn\">d₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>}\n    {<span class=\"fn\">c₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n₂</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d₂</span></span>},\n    <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">n₁</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d₁</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">h₁</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">c₁</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">}</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">n₂</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d₂</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">h₂</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">c₂</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">(<span class=\"fn\">f₁</span> <span class=\"fn\">n₁</span> <span class=\"fn\">(↑<span class=\"fn\">d₁</span>)</span> <span class=\"fn\">n₂</span> <span class=\"fn\">↑<span class=\"fn\">d₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f₂</span> <span class=\"fn\">n₁</span> <span class=\"fn\">(↑<span class=\"fn\">d₁</span>)</span> <span class=\"fn\">n₂</span> <span class=\"fn\">↑<span class=\"fn\">d₂</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f0</span> : <span class=\"fn\">∀ {<span class=\"fn\">n₁ </span><span class=\"fn\">d₁ </span><span class=\"fn\">n₂ </span><span class=\"fn\">d₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}, <span class=\"fn\"><span class=\"fn\">d₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\">d₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">n₁</span> <span class=\"fn\">d₁</span> <span class=\"fn\">n₂</span> <span class=\"fn\">d₂</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b0</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d0</span> : <span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ {<span class=\"fn\">n₁ </span><span class=\"fn\">d₁ </span><span class=\"fn\">n₂ </span><span class=\"fn\">d₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}, <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d₂</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d</span> → <span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">n₁</span> <span class=\"fn\">d₁</span> <span class=\"fn\">n₂</span> <span class=\"fn\">d₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">n₁</span> <span class=\"fn\">d₁</span> <span class=\"fn\">n₂</span> <span class=\"fn\">d₂</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">(<span class=\"fn\">f₁</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span>)</span> <span class=\"fn\">(<span class=\"fn\">f₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L131-L136","name":"Rat.numDenCasesOn''","line":131,"kind":"def","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.numDenCasesOn''","doc":"Define a (dependent) function or prove `∀ r : ℚ, p r` by dealing with rational\nnumbers of the form `mk' n d` with `d ≠ 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.numDenCasesOn''\"><span class=\"name\">Rat</span>.<span class=\"name\">numDenCasesOn''</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> → <a href=\"./foundational_types.html\">Sort</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> :\n  <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) →\n    <span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\">(<span class=\"fn\">nz</span> : <span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>) → <span class=\"fn\">(<span class=\"fn\">red</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d</span></span>) → <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">n</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">nz</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">red</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">}</a></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L124-L129","name":"Rat.numDenCasesOn'","line":124,"kind":"def","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.numDenCasesOn'","doc":"Define a (dependent) function or prove `∀ r : ℚ, p r` by dealing with rational\nnumbers of the form `n /. d` with `d ≠ 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.numDenCasesOn'\"><span class=\"name\">Rat</span>.<span class=\"name\">numDenCasesOn'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> → <a href=\"./foundational_types.html\">Sort</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) → <span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L117-L122","name":"Rat.numDenCasesOn","line":117,"kind":"def","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.numDenCasesOn","doc":"Define a (dependent) function or prove `∀ r : ℚ, p r` by dealing with rational\nnumbers of the form `n /. d` with `0 < d` and coprime `n`, `d`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.numDenCasesOn\"><span class=\"name\">Rat</span>.<span class=\"name\">numDenCasesOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> → <a href=\"./foundational_types.html\">Sort</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) → <span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">d</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d</span></span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L114-L115","name":"Rat.divInt_self'","line":114,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_self'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_self'\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_self'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L111-L111","name":"Rat.intCast_eq_divInt","line":111,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.intCast_eq_divInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.intCast_eq_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">intCast_eq_divInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">z</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L109-L109","name":"Rat.mk'_eq_divInt","line":109,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mk'_eq_divInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mk'_eq_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">mk'_eq_divInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">n</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">h</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">c</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L107-L107","name":"Rat.num_divInt_den","line":107,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_divInt_den","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_divInt_den\"><span class=\"name\">Rat</span>.<span class=\"name\">num_divInt_den</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L104-L104","name":"Rat.mkRat_num_den'","line":104,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mkRat_num_den'","doc":"**Alias** of `Rat.mkRat_self`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mkRat_num_den'\"><span class=\"name\">Rat</span>.<span class=\"name\">mkRat_num_den'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#mkRat\">mkRat</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L100-L101","name":"Rat.normalize_eq_mk'","line":100,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.normalize_eq_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.normalize_eq_mk'\"><span class=\"name\">Rat</span>.<span class=\"name\">normalize_eq_mk'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">gcd</a></span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.normalize\">normalize</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">n</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">h</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">c</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L96-L97","name":"Rat.divInt_ne_zero","line":96,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_ne_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b0</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L92-L94","name":"Rat.divInt_eq_zero","line":92,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_eq_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b0</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L89-L90","name":"Rat.num_nonneg","line":89,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_nonneg\"><span class=\"name\">Rat</span>.<span class=\"name\">num_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L87-L87","name":"Rat.den_ne_zero","line":87,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.den_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.den_ne_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">den_ne_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L85-L85","name":"Rat.num_ne_zero","line":85,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_ne_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">num_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L77-L83","name":"Rat.num_eq_zero","line":77,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_eq_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">num_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L75-L75","name":"Rat.mk'_zero","line":75,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mk'_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mk'_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">mk'_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">Int.natAbs</a> <span class=\"fn\">0</span>)</span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">0</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">h</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">w</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L73-L73","name":"Rat.mkRat_eq_divInt","line":73,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mkRat_eq_divInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mkRat_eq_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">mkRat_eq_divInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#mkRat\">mkRat</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L71-L71","name":"Rat.natCast_eq_one","line":71,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.natCast_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.natCast_eq_one\"><span class=\"name\">Rat</span>.<span class=\"name\">natCast_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L70-L70","name":"Rat.intCast_eq_one","line":70,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.intCast_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.intCast_eq_one\"><span class=\"name\">Rat</span>.<span class=\"name\">intCast_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L69-L69","name":"Rat.natCast_eq_zero","line":69,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.natCast_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.natCast_eq_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">natCast_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L68-L68","name":"Rat.intCast_eq_zero","line":68,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.intCast_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.intCast_eq_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">intCast_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L66-L67","name":"Rat.natCast_inj","line":66,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.natCast_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.natCast_inj\"><span class=\"name\">Rat</span>.<span class=\"name\">natCast_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L63-L64","name":"Rat.natCast_injective","line":63,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.natCast_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.natCast_injective\"><span class=\"name\">Rat</span>.<span class=\"name\">natCast_injective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <a href=\"./Init/Data/Cast.html#Nat.cast\">Nat.cast</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L62-L62","name":"Rat.intCast_injective","line":62,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.intCast_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.intCast_injective\"><span class=\"name\">Rat</span>.<span class=\"name\">intCast_injective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <a href=\"./Init/Data/Int/Basic.html#Int.cast\">Int.cast</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L60-L60","name":"Rat.den_intCast","line":60,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.den_intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.den_intCast\"><span class=\"name\">Rat</span>.<span class=\"name\">den_intCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L58-L58","name":"Rat.num_intCast","line":58,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_intCast\"><span class=\"name\">Rat</span>.<span class=\"name\">num_intCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L55-L55","name":"Rat.den_natCast","line":55,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.den_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.den_natCast\"><span class=\"name\">Rat</span>.<span class=\"name\">den_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L53-L53","name":"Rat.num_natCast","line":53,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_natCast\"><span class=\"name\">Rat</span>.<span class=\"name\">num_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L51-L51","name":"Rat.den_ofNat","line":51,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.den_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.den_ofNat\"><span class=\"name\">Rat</span>.<span class=\"name\">den_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L50-L50","name":"Rat.num_ofNat","line":50,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_ofNat\"><span class=\"name\">Rat</span>.<span class=\"name\">num_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L45-L47","name":"Rat.ofInt_eq_cast","line":45,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.ofInt_eq_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.ofInt_eq_cast\"><span class=\"name\">Rat</span>.<span class=\"name\">ofInt_eq_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.ofInt\">ofInt</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L43-L43","name":"Rat.mk'_num_den","line":43,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mk'_num_den","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mk'_num_den\"><span class=\"name\">Rat</span>.<span class=\"name\">mk'_num_den</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.num\">num</a></span>, <span class=\"fn\">den</span> := <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">⋯</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat.mk'\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Rat/Defs.lean#L41-L41","name":"Rat.pos","line":41,"kind":"theorem","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.pos\"><span class=\"name\">Rat</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Batteries/Data/Rat/Basic.html#Rat.den\">den</a></span></div></div>"}]}