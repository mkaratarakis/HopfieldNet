{"name":"Mathlib.SetTheory.Game.Impartial","instances":[{"typeNames":["OfNat.ofNat"],"name":"SetTheory.PGame.Impartial.impartial_zero","className":"SetTheory.PGame.Impartial"},{"typeNames":["SetTheory.PGame.star"],"name":"SetTheory.PGame.Impartial.impartial_star","className":"SetTheory.PGame.Impartial"},{"typeNames":["SetTheory.PGame.moveLeft"],"name":"SetTheory.PGame.Impartial.moveLeft_impartial","className":"SetTheory.PGame.Impartial"},{"typeNames":["SetTheory.PGame.moveRight"],"name":"SetTheory.PGame.Impartial.moveRight_impartial","className":"SetTheory.PGame.Impartial"},{"typeNames":["HAdd.hAdd"],"name":"SetTheory.PGame.Impartial.impartial_add","className":"SetTheory.PGame.Impartial"},{"typeNames":["Neg.neg"],"name":"SetTheory.PGame.Impartial.impartial_neg","className":"SetTheory.PGame.Impartial"}],"imports":["Init","Mathlib.Algebra.Order.Group.Defs","Mathlib.SetTheory.Game.Basic","Mathlib.Tactic.NthRewrite"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L187-L191","name":"SetTheory.PGame.Impartial.exists_right_move_equiv_iff_fuzzy_zero","line":187,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.exists_right_move_equiv_iff_fuzzy_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.exists_right_move_equiv_iff_fuzzy_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">exists_right_move_equiv_iff_fuzzy_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Fuzzy\">Fuzzy</a></span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L181-L185","name":"SetTheory.PGame.Impartial.exists_left_move_equiv_iff_fuzzy_zero","line":181,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.exists_left_move_equiv_iff_fuzzy_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.exists_left_move_equiv_iff_fuzzy_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">exists_left_move_equiv_iff_fuzzy_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∃ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Fuzzy\">Fuzzy</a></span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L174-L179","name":"SetTheory.PGame.Impartial.forall_rightMoves_fuzzy_iff_equiv_zero","line":174,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.forall_rightMoves_fuzzy_iff_equiv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.forall_rightMoves_fuzzy_iff_equiv_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">forall_rightMoves_fuzzy_iff_equiv_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Fuzzy\">Fuzzy</a></span> <span class=\"fn\">0</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L167-L172","name":"SetTheory.PGame.Impartial.forall_leftMoves_fuzzy_iff_equiv_zero","line":167,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.forall_leftMoves_fuzzy_iff_equiv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.forall_leftMoves_fuzzy_iff_equiv_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">forall_leftMoves_fuzzy_iff_equiv_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Fuzzy\">Fuzzy</a></span> <span class=\"fn\">0</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L164-L165","name":"SetTheory.PGame.Impartial.fuzzy_zero_iff_gf","line":164,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.fuzzy_zero_iff_gf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.fuzzy_zero_iff_gf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">fuzzy_zero_iff_gf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Fuzzy\">Fuzzy</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.LF\">LF</a> <span class=\"fn\">0</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L161-L162","name":"SetTheory.PGame.Impartial.equiv_zero_iff_ge","line":161,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_zero_iff_ge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_zero_iff_ge\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_zero_iff_ge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">G</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L158-L159","name":"SetTheory.PGame.Impartial.fuzzy_zero_iff_lf","line":158,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.fuzzy_zero_iff_lf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.fuzzy_zero_iff_lf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">fuzzy_zero_iff_lf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Fuzzy\">Fuzzy</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.LF\">LF</a></span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L155-L156","name":"SetTheory.PGame.Impartial.equiv_zero_iff_le","line":155,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_zero_iff_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_zero_iff_le\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_zero_iff_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L152-L153","name":"SetTheory.PGame.Impartial.lf_zero_iff","line":152,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.lf_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.lf_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">lf_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.LF\">LF</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.LF\">LF</a> <span class=\"fn\">0</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L149-L150","name":"SetTheory.PGame.Impartial.le_zero_iff","line":149,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.le_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.le_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">le_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">G</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L144-L147","name":"SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero'","line":144,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero'","doc":"This lemma doesn't require `H` to be impartial. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_iff_add_equiv_zero'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">H</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">H</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L139-L142","name":"SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero","line":139,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero","doc":"This lemma doesn't require `H` to be impartial. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_iff_add_equiv_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">H</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">G</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L135-L137","name":"SetTheory.PGame.Impartial.mk'_add_self","line":135,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk'_add_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk'_add_self\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">mk'_add_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">G</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">G</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L132-L133","name":"SetTheory.PGame.Impartial.add_self","line":132,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.add_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.add_self\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">add_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L128-L130","name":"SetTheory.PGame.Impartial.not_fuzzy_zero_iff","line":128,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.not_fuzzy_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.not_fuzzy_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">not_fuzzy_zero_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Fuzzy\">Fuzzy</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L124-L126","name":"SetTheory.PGame.Impartial.not_equiv_zero_iff","line":124,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.not_equiv_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.not_equiv_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">not_equiv_zero_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Fuzzy\">Fuzzy</a></span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L116-L122","name":"SetTheory.PGame.Impartial.equiv_or_fuzzy_zero","line":116,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_or_fuzzy_zero","doc":"In an impartial game, either the first player always wins, or the second player always wins. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_or_fuzzy_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_or_fuzzy_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Fuzzy\">Fuzzy</a></span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L113-L114","name":"SetTheory.PGame.Impartial.nonneg","line":113,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.nonneg\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">nonneg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L109-L111","name":"SetTheory.PGame.Impartial.nonpos","line":109,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.nonpos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.nonpos\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">nonpos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">G</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L96-L105","name":"SetTheory.PGame.Impartial.impartial_neg","line":96,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_neg\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">G</span>).<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L82-L94","name":"SetTheory.PGame.Impartial.impartial_add","line":82,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_add\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G </span><span class=\"fn\">H</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">H</span>).<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L76-L80","name":"SetTheory.PGame.Impartial.impartial_congr","line":76,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_congr\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G </span><span class=\"fn\">H</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L72-L74","name":"SetTheory.PGame.Impartial.moveRight_impartial","line":72,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.moveRight_impartial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.moveRight_impartial\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">moveRight_impartial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L68-L70","name":"SetTheory.PGame.Impartial.moveLeft_impartial","line":68,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.moveLeft_impartial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.moveLeft_impartial\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">moveLeft_impartial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L64-L66","name":"SetTheory.PGame.Impartial.mk'_neg_equiv_self","line":64,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk'_neg_equiv_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk'_neg_equiv_self\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">mk'_neg_equiv_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">G</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">G</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L61-L62","name":"SetTheory.PGame.Impartial.neg_equiv_self","line":61,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.neg_equiv_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.neg_equiv_self\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">neg_equiv_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">G</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L57-L59","name":"SetTheory.PGame.Impartial.impartial_star","line":57,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_star","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_star\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_star</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Algebra.html#SetTheory.PGame.star\">star</a>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L53-L55","name":"SetTheory.PGame.Impartial.impartial_zero","line":53,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L46-L49","name":"SetTheory.PGame.impartial_def","line":46,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.impartial_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.impartial_def\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">impartial_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L41-L41","name":"SetTheory.PGame.Impartial.out","line":41,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.out","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.out\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">out</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#_private.Mathlib.SetTheory.Game.Impartial.0.SetTheory.PGame.ImpartialAux\">SetTheory.PGame.ImpartialAux✝</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L40-L40","name":"SetTheory.PGame.Impartial.mk","line":40,"kind":"ctor","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">out</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#_private.Mathlib.SetTheory.Game.Impartial.0.SetTheory.PGame.ImpartialAux\">SetTheory.PGame.ImpartialAux✝</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Game/Impartial.lean#L32-L41","name":"SetTheory.PGame.Impartial","line":32,"kind":"class","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial","doc":"An impartial game is one that's equivalent to its negative, such that each left and right move\nis also impartial.\n\nNote that this is a slightly more general definition than the one that's usually in the literature,\nas we don't require `G ≡ -G`. Despite this, the Sprague-Grundy theorem still holds: see\n`SetTheory.PGame.equiv_nim_grundyValue`.\n\nIn such a game, both players have the same payoffs at any subposition. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}