{"name":"Mathlib.Order.OmegaCompletePartialOrder","instances":[{"typeNames":["OmegaCompletePartialOrder.Chain","Nat"],"name":"OmegaCompletePartialOrder.Chain.instFunLikeNat","className":"DFunLike"},{"typeNames":["OmegaCompletePartialOrder.Chain","Nat"],"name":"OmegaCompletePartialOrder.Chain.instOrderHomClassNat","className":"RelHomClass"},{"typeNames":["OmegaCompletePartialOrder.Chain"],"name":"OmegaCompletePartialOrder.Chain.instInhabited","className":"Inhabited"},{"typeNames":["OmegaCompletePartialOrder.Chain"],"name":"OmegaCompletePartialOrder.Chain.instMembership","className":"Membership"},{"typeNames":["OmegaCompletePartialOrder.Chain"],"name":"OmegaCompletePartialOrder.Chain.instLE","className":"LE"},{"typeNames":["Part"],"name":"Part.omegaCompletePartialOrder","className":"OmegaCompletePartialOrder"},{"typeNames":[],"name":"instOmegaCompletePartialOrderForall","className":"OmegaCompletePartialOrder"},{"typeNames":["Prod"],"name":"Prod.instOmegaCompletePartialOrder","className":"OmegaCompletePartialOrder"},{"typeNames":[],"name":"CompleteLattice.instOmegaCompletePartialOrder","className":"OmegaCompletePartialOrder"},{"typeNames":["OrderHom"],"name":"OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder","className":"OmegaCompletePartialOrder"},{"typeNames":["OmegaCompletePartialOrder.ContinuousHom"],"name":"OmegaCompletePartialOrder.instFunLikeContinuousHom","className":"DFunLike"},{"typeNames":["OmegaCompletePartialOrder.ContinuousHom"],"name":"OmegaCompletePartialOrder.instOrderHomClassContinuousHom","className":"RelHomClass"},{"typeNames":["OmegaCompletePartialOrder.ContinuousHom"],"name":"OmegaCompletePartialOrder.instPartialOrderContinuousHom","className":"PartialOrder"},{"typeNames":["OmegaCompletePartialOrder.ContinuousHom"],"name":"OmegaCompletePartialOrder.ContinuousHom.instInhabited","className":"Inhabited"},{"typeNames":["OmegaCompletePartialOrder.ContinuousHom"],"name":"OmegaCompletePartialOrder.ContinuousHom.inst","className":"OmegaCompletePartialOrder"}],"imports":["Init","Mathlib.Control.Monad.Basic","Mathlib.Dynamics.FixedPoints.Basic","Mathlib.Order.CompleteLattice.Basic","Mathlib.Order.Iterate","Mathlib.Order.Part","Mathlib.Order.Preorder.Chain","Mathlib.Order.ScottContinuity"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L827-L833","name":"OmegaCompletePartialOrder.fixedPoints.œâSup_iterate_le_fixedPoint","line":827,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.œâSup_iterate_le_fixedPoint","doc":"The supremum of iterating a function on x arbitrary often is smaller than any fixed point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.œâSup_iterate_le_fixedPoint\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">fixedPoints</span>.<span class=\"name\">œâSup_iterate_le_fixedPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_a</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_x_le_a</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.iterateChain\">iterateChain</a> <span class=\"fn\">(‚Üë<span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L811-L825","name":"OmegaCompletePartialOrder.fixedPoints.œâSup_iterate_le_prefixedPoint","line":811,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.œâSup_iterate_le_prefixedPoint","doc":"The supremum of iterating a function on x arbitrary often is smaller than any prefixed point.\n\nA prefixed point is a value `a` with `f a ‚â§ a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.œâSup_iterate_le_prefixedPoint\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">fixedPoints</span>.<span class=\"name\">œâSup_iterate_le_prefixedPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_a</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_x_le_a</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.iterateChain\">iterateChain</a> <span class=\"fn\">(‚Üë<span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L789-L809","name":"OmegaCompletePartialOrder.fixedPoints.œâSup_iterate_mem_fixedPoint","line":789,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.œâSup_iterate_mem_fixedPoint","doc":"The supremum of iterating a function on x arbitrary often is a fixed point "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.œâSup_iterate_mem_fixedPoint\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">fixedPoints</span>.<span class=\"name\">œâSup_iterate_mem_fixedPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.iterateChain\">iterateChain</a> <span class=\"fn\">(‚Üë<span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L783-L785","name":"OmegaCompletePartialOrder.fixedPoints.iterateChain","line":783,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.iterateChain","doc":"Iteration of a function on an initial element interpreted as a chain. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.iterateChain\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">fixedPoints</span>.<span class=\"name\">iterateChain</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L770-L770","name":"OmegaCompletePartialOrder.ContinuousHom.seq_apply","line":770,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">seq_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤ </span><span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">(<span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq\">seq</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> &lt;*&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L769-L775","name":"OmegaCompletePartialOrder.ContinuousHom.seq","line":769,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq","doc":"`Part.seq` as a continuous function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤ </span><span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">(<span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L762-L762","name":"OmegaCompletePartialOrder.ContinuousHom.map_apply","line":762,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤ </span><span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.map\">Part.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L761-L767","name":"OmegaCompletePartialOrder.ContinuousHom.map","line":761,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map","doc":"`Part.map` as a continuous function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤ </span><span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L755-L755","name":"OmegaCompletePartialOrder.ContinuousHom.bind_apply","line":755,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">bind_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤ </span><span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind\">bind</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Data/Part.html#Part.bind\">bind</a></span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L754-L759","name":"OmegaCompletePartialOrder.ContinuousHom.bind","line":754,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind","doc":"`Part.bind` as a continuous function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">bind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤ </span><span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L748-L748","name":"OmegaCompletePartialOrder.ContinuousHom.flip_apply","line":748,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">flip_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip\">flip</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L747-L752","name":"OmegaCompletePartialOrder.ContinuousHom.flip","line":747,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip","doc":"A family of continuous functions yields a continuous family of functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">flip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≥</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L744-L745","name":"OmegaCompletePartialOrder.ContinuousHom.œâSup_apply_œâSup","line":744,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_apply_œâSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_apply_œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">œâSup_apply_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c‚ÇÄ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c‚ÇÅ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c‚ÇÄ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c‚ÇÅ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply\">Prod.apply</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c‚ÇÄ</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip\">zip</a></span> <span class=\"fn\">c‚ÇÅ</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L741-L742","name":"OmegaCompletePartialOrder.ContinuousHom.œâSup_def","line":741,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_def\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">œâSup_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup\">ContinuousHom.œâSup</a> <span class=\"fn\">c</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L713-L713","name":"OmegaCompletePartialOrder.ContinuousHom.Prod.apply_apply","line":713,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">Prod</span>.<span class=\"name\">apply_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>) <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply\">apply</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.1</span> <span class=\"fn\"><span class=\"fn\">f</span>.2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L712-L737","name":"OmegaCompletePartialOrder.ContinuousHom.Prod.apply","line":712,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply","doc":"The application of continuous functions as a continuous function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">Prod</span>.<span class=\"name\">apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>) <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L705-L705","name":"OmegaCompletePartialOrder.ContinuousHom.inst_œâSup","line":705,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.inst_œâSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.inst_œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">inst_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup\">ContinuousHom.œâSup</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L705-L708","name":"OmegaCompletePartialOrder.ContinuousHom.inst","line":705,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.inst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.inst\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">inst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L700-L700","name":"OmegaCompletePartialOrder.ContinuousHom.œâSup_apply","line":700,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">œâSup_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup\">ContinuousHom.œâSup</a> <span class=\"fn\">c</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono\">toMono</a>)</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.apply\">OrderHom.apply</a> <span class=\"fn\">a</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L698-L703","name":"OmegaCompletePartialOrder.ContinuousHom.œâSup","line":698,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup","doc":"The `œâSup` operator for continuous functions, which takes the pointwise countable supremum\nof the functions in the `œâ`-chain. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L693-L696","name":"OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge'","line":693,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge'\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">forall_forall_merge'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c‚ÇÄ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c‚ÇÅ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(‚àÄ (<span class=\"fn\">j </span><span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">c‚ÇÄ</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">c‚ÇÅ</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">z</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">c‚ÇÄ</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">c‚ÇÅ</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L675-L691","name":"OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge","line":675,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge","doc":"When proving that a chain of applications is below a bound `z`, it suffices to consider the\nfunctions and values being selected from the same index in the chains.\n\nThis lemma is more specific than necessary, i.e. `c‚ÇÄ` only needs to be a\nchain of monotone functions, but it is only used with continuous functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">forall_forall_merge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c‚ÇÄ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c‚ÇÅ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(‚àÄ (<span class=\"fn\">i </span><span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">c‚ÇÄ</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">c‚ÇÅ</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">z</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">c‚ÇÄ</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">c‚ÇÅ</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L670-L670","name":"OmegaCompletePartialOrder.ContinuousHom.toMono_coe","line":670,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">toMono_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono\">toMono</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚Üë<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L669-L673","name":"OmegaCompletePartialOrder.ContinuousHom.toMono","line":669,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono","doc":"The map from continuous functions to monotone functions is itself a monotone function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">toMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>) <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L666-L667","name":"OmegaCompletePartialOrder.ContinuousHom.instInhabited","line":666,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.instInhabited\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L663-L663","name":"OmegaCompletePartialOrder.ContinuousHom.const_apply","line":663,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">const_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a‚úù</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const\">const</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">a‚úù</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L662-L664","name":"OmegaCompletePartialOrder.ContinuousHom.const","line":662,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const","doc":"`Function.const` is a continuous function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L658-L660","name":"OmegaCompletePartialOrder.ContinuousHom.coe_apply","line":658,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">coe_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">f</span></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L654-L656","name":"OmegaCompletePartialOrder.ContinuousHom.comp_assoc","line":654,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_assoc\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">comp_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ¥</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ¥</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ≥</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ¥</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">comp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">comp</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">comp</a></span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">comp</a></span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L651-L652","name":"OmegaCompletePartialOrder.ContinuousHom.id_comp","line":651,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id_comp\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">id_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id\">id</a>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">comp</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L648-L649","name":"OmegaCompletePartialOrder.ContinuousHom.comp_id","line":648,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_id\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">comp_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">comp</a></span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id\">id</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L645-L646","name":"OmegaCompletePartialOrder.ContinuousHom.coe_inj","line":645,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_inj\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">coe_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">‚áë<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L642-L642","name":"OmegaCompletePartialOrder.ContinuousHom.ext_iff","line":642,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ext_iff\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L642-L643","name":"OmegaCompletePartialOrder.ContinuousHom.ext","line":642,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ext\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L638-L638","name":"OmegaCompletePartialOrder.ContinuousHom.comp_apply","line":638,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a‚úù</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">comp</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">a‚úù</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">a‚úù</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L637-L640","name":"OmegaCompletePartialOrder.ContinuousHom.comp","line":637,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp","doc":"The composition of continuous functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L634-L634","name":"OmegaCompletePartialOrder.ContinuousHom.id_apply","line":634,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">id_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id\">id</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L633-L635","name":"OmegaCompletePartialOrder.ContinuousHom.id","line":633,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id","doc":"The identity as a continuous function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ±</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L628-L628","name":"OmegaCompletePartialOrder.ContinuousHom.copy_apply","line":628,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">copy_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a‚úù</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy\">copy</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">a‚úù</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a‚úù</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L626-L631","name":"OmegaCompletePartialOrder.ContinuousHom.copy","line":626,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy","doc":"Construct a continuous function from a bare function, a continuous function, and a proof that\nthey are equal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">copy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L623-L624","name":"OmegaCompletePartialOrder.ContinuousHom.continuous","line":623,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.continuous\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">C</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">‚Üë<span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L618-L621","name":"OmegaCompletePartialOrder.ContinuousHom.œâScottContinuous.seq","line":618,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâScottContinuous.seq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâScottContinuous.seq\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤ </span><span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">(<span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> &lt;*&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L614-L616","name":"OmegaCompletePartialOrder.ContinuousHom.œâScottContinuous.map","line":614,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâScottContinuous.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâScottContinuous.map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤ </span><span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L609-L612","name":"OmegaCompletePartialOrder.ContinuousHom.œâScottContinuous.bind","line":609,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâScottContinuous.bind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâScottContinuous.bind\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">bind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤ </span><span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Bind.bind\">&gt;&gt;=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L580-L606","name":"OmegaCompletePartialOrder.ContinuousHom.œâSup_bind","line":580,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_bind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_bind\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">œâSup_bind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤ </span><span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/Part.html#OrderHom.partBind\">partBind</a></span> <span class=\"fn\">g</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Bind.bind\">&gt;&gt;=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L576-L578","name":"OmegaCompletePartialOrder.ContinuousHom.apply_mono","line":576,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.apply_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.apply_mono\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">apply_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h‚ÇÅ</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h‚ÇÇ</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L573-L574","name":"OmegaCompletePartialOrder.ContinuousHom.monotone","line":573,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.monotone\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L570-L571","name":"OmegaCompletePartialOrder.ContinuousHom.congr_arg","line":570,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.congr_arg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.congr_arg\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">congr_arg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L567-L568","name":"OmegaCompletePartialOrder.ContinuousHom.congr_fun","line":567,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.congr_fun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.congr_fun\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">congr_fun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L559-L563","name":"OmegaCompletePartialOrder.ContinuousHom.Simps.apply","line":559,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Simps.apply","doc":"See Note [custom simps projection]. We specify this explicitly because we don't have a DFunLike\ninstance.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Simps.apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">Simps</span>.<span class=\"name\">apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L557-L557","name":"OmegaCompletePartialOrder.ContinuousHom.coe_toOrderHom","line":557,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_toOrderHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_toOrderHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">coe_toOrderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚áë<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom\">toOrderHom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L555-L555","name":"OmegaCompletePartialOrder.ContinuousHom.coe_mk","line":555,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_mk\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.toFun\">toFun</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚áë<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.mk\">{</a> <span class=\"fn\">toOrderHom</span> := <span class=\"fn\">f</span>, <span class=\"fn\">map_œâSup'</span> := <span class=\"fn\">hf</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.mk\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L553-L553","name":"OmegaCompletePartialOrder.ContinuousHom.toOrderHom_eq_coe","line":553,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom_eq_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">toOrderHom_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom\">toOrderHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚Üë<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L549-L550","name":"OmegaCompletePartialOrder.ContinuousHom.œâScottContinuous","line":549,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâScottContinuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâScottContinuous\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">œâScottContinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L544-L545","name":"OmegaCompletePartialOrder.instPartialOrderContinuousHom","line":544,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instPartialOrderContinuousHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instPartialOrderContinuousHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">instPartialOrderContinuousHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L541-L542","name":"OmegaCompletePartialOrder.instOrderHomClassContinuousHom","line":541,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instOrderHomClassContinuousHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instOrderHomClassContinuousHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">instOrderHomClassContinuousHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHomClass\">OrderHomClass</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>) <span class=\"fn\">Œ±</span> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L537-L539","name":"OmegaCompletePartialOrder.instFunLikeContinuousHom","line":537,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instFunLikeContinuousHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instFunLikeContinuousHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">instFunLikeContinuousHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>) <span class=\"fn\">Œ±</span> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L535-L535","name":"OmegaCompletePartialOrder.¬´term_‚ÜíùíÑ_¬ª","line":535,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.¬´term_‚ÜíùíÑ_¬ª","doc":"A monotone function on `œâ`-continuous partial orders is said to be continuous\nif for every chain `c : chain Œ±`, `f (‚äî i, c i) = ‚äî i, f (c i)`.\nThis is just the bundled version of `OrderHom.continuous`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.¬´term_‚ÜíùíÑ_¬ª\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">¬´term_‚ÜíùíÑ_¬ª</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L531-L531","name":"OmegaCompletePartialOrder.ContinuousHom.map_œâSup'","line":531,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map_œâSup'","doc":"The underlying function of a `ContinuousHom` is continuous, i.e. it preserves `œâSup` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map_œâSup'\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">map_œâSup'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.toFun\">toFun</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom\">toOrderHom</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L529-L529","name":"OmegaCompletePartialOrder.ContinuousHom.mk","line":529,"kind":"ctor","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.mk\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toOrderHom</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map_œâSup'</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toOrderHom</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.toFun\">toFun</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">toOrderHom</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L529-L531","name":"OmegaCompletePartialOrder.ContinuousHom.toOrderHom","line":529,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">toOrderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L526-L531","name":"OmegaCompletePartialOrder.ContinuousHom","line":526,"kind":"structure","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom","doc":"A monotone function on `œâ`-continuous partial orders is said to be continuous\nif for every chain `c : chain Œ±`, `f (‚äî i, c i) = ‚äî i, f (c i)`.\nThis is just the bundled version of `OrderHom.continuous`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span> <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_2 u_3)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L519-L519","name":"OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder_œâSup_coe","line":519,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder_œâSup_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder_œâSup_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">OrderHom</span>.<span class=\"name\">omegaCompletePartialOrder_œâSup_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.apply\">OrderHom.apply</a> <span class=\"fn\">a</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L519-L521","name":"OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder","line":519,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">OrderHom</span>.<span class=\"name\">omegaCompletePartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L514-L514","name":"OmegaCompletePartialOrder.OrderHom.œâSup_coe","line":514,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.œâSup_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.œâSup_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">OrderHom</span>.<span class=\"name\">œâSup_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.œâSup\">OrderHom.œâSup</a> <span class=\"fn\">c</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.apply\">OrderHom.apply</a> <span class=\"fn\">a</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L513-L517","name":"OmegaCompletePartialOrder.OrderHom.œâSup","line":513,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.œâSup","doc":"The `œâSup` operator for monotone functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">OrderHom</span>.<span class=\"name\">œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L495-L503","name":"CompleteLattice.œâScottContinuous.inf","line":495,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.œâScottContinuous.inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.œâScottContinuous.inf\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLinearOrder\">CompleteLinearOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <span class=\"fn\">(<span class=\"fn\">f</span> ‚äì <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L480-L481","name":"CompleteLattice.œâScottContinuous.bot","line":480,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.œâScottContinuous.bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.œâScottContinuous.bot\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">‚ä•</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L476-L478","name":"CompleteLattice.œâScottContinuous.top","line":476,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.œâScottContinuous.top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.œâScottContinuous.top\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">‚ä§</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L470-L474","name":"CompleteLattice.œâScottContinuous.sup","line":470,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.œâScottContinuous.sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.œâScottContinuous.sup\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <span class=\"fn\">(<span class=\"fn\">f</span> ‚äî <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L466-L468","name":"CompleteLattice.œâScottContinuous.sSup","line":466,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.œâScottContinuous.sSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.œâScottContinuous.sSup\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">sSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">f</span> ‚àà <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/SetNotation.html#SupSet.sSup\">SupSet.sSup</a> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L460-L464","name":"CompleteLattice.œâScottContinuous.iSup","line":460,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.œâScottContinuous.iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.œâScottContinuous.iSup\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <span class=\"fn\">(‚®Ü (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L456-L458","name":"CompleteLattice.œâScottContinuous.prodMk","line":456,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.œâScottContinuous.prodMk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.œâScottContinuous.prodMk\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">prodMk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L443-L449","name":"CompleteLattice.instOmegaCompletePartialOrder","line":443,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.instOmegaCompletePartialOrder","doc":"Any complete lattice has an `œâ`-CPO structure where the countable supremum is a special case\nof arbitrary suprema. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.instOmegaCompletePartialOrder\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">instOmegaCompletePartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L432-L434","name":"Prod.œâSup_zip","line":432,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup_zip","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup_zip\"><span class=\"name\">Prod</span>.<span class=\"name\">œâSup_zip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c‚ÇÄ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c‚ÇÅ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c‚ÇÄ</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip\">zip</a></span> <span class=\"fn\">c‚ÇÅ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c‚ÇÄ</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c‚ÇÅ</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L426-L426","name":"Prod.instOmegaCompletePartialOrder_œâSup_fst","line":426,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.instOmegaCompletePartialOrder_œâSup_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.instOmegaCompletePartialOrder_œâSup_fst\"><span class=\"name\">Prod</span>.<span class=\"name\">instOmegaCompletePartialOrder_œâSup_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span>)</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.fst\">OrderHom.fst</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L426-L426","name":"Prod.instOmegaCompletePartialOrder_œâSup_snd","line":426,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.instOmegaCompletePartialOrder_œâSup_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.instOmegaCompletePartialOrder_œâSup_snd\"><span class=\"name\">Prod</span>.<span class=\"name\">instOmegaCompletePartialOrder_œâSup_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.snd\">OrderHom.snd</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L426-L430","name":"Prod.instOmegaCompletePartialOrder","line":426,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.instOmegaCompletePartialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.instOmegaCompletePartialOrder\"><span class=\"name\">Prod</span>.<span class=\"name\">instOmegaCompletePartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L422-L422","name":"Prod.œâSup_fst","line":422,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup_fst\"><span class=\"name\">Prod</span>.<span class=\"name\">œâSup_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup\">Prod.œâSup</a> <span class=\"fn\">c</span>)</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.fst\">OrderHom.fst</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L422-L422","name":"Prod.œâSup_snd","line":422,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup_snd\"><span class=\"name\">Prod</span>.<span class=\"name\">œâSup_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup\">Prod.œâSup</a> <span class=\"fn\">c</span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.snd\">OrderHom.snd</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L421-L424","name":"Prod.œâSup","line":421,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup","doc":"The supremum of a chain in the product `œâ`-CPO. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup\"><span class=\"name\">Prod</span>.<span class=\"name\">œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L406-L407","name":"OmegaCompletePartialOrder.œâScottContinuous_iff_apply‚ÇÇ","line":406,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous_iff_apply‚ÇÇ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous_iff_apply‚ÇÇ\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous_iff_apply‚ÇÇ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_6</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\">Œ≤</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> <span class=\"fn\">x</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ≥</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L402-L404","name":"OmegaCompletePartialOrder.œâScottContinuous.of_apply‚ÇÇ","line":402,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.of_apply‚ÇÇ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.of_apply‚ÇÇ\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">of_apply‚ÇÇ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_6</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\">Œ≤</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> <span class=\"fn\">x</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ≥</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">a</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L398-L400","name":"OmegaCompletePartialOrder.œâScottContinuous.apply‚ÇÇ","line":398,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.apply‚ÇÇ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.apply‚ÇÇ\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">apply‚ÇÇ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_6</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\">Œ≤</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> <span class=\"fn\">x</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ≥</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L383-L390","name":"instOmegaCompletePartialOrderForall","line":383,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#instOmegaCompletePartialOrderForall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#instOmegaCompletePartialOrderForall\"><span class=\"name\">instOmegaCompletePartialOrderForall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_6</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\">Œ≤</span> <span class=\"fn\">a</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">((<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L355-L371","name":"Part.mem_œâSup","line":355,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.mem_œâSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.mem_œâSup\"><span class=\"name\">Part</span>.<span class=\"name\">mem_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">some</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L336-L351","name":"Part.omegaCompletePartialOrder","line":336,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.omegaCompletePartialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.omegaCompletePartialOrder\"><span class=\"name\">Part</span>.<span class=\"name\">omegaCompletePartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L328-L334","name":"Part.mem_chain_of_mem_œâSup","line":328,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.mem_chain_of_mem_œâSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.mem_chain_of_mem_œâSup\"><span class=\"name\">Part</span>.<span class=\"name\">mem_chain_of_mem_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup\">Part.œâSup</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L325-L326","name":"Part.œâSup_eq_none","line":325,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup_eq_none","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup_eq_none\"><span class=\"name\">Part</span>.<span class=\"name\">œâSup_eq_none</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#Not\">¬¨</a><span class=\"fn\">‚àÉ (<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup\">Part.œâSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Part.html#Part.none\">none</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L318-L323","name":"Part.œâSup_eq_some","line":318,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup_eq_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup_eq_some\"><span class=\"name\">Part</span>.<span class=\"name\">œâSup_eq_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup\">Part.œâSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">some</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L314-L316","name":"Part.œâSup","line":314,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup","doc":"The (noncomputable) `œâSup` definition for the `œâ`-CPO structure on `Part Œ±`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup\"><span class=\"name\">Part</span>.<span class=\"name\">œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L305-L311","name":"Part.eq_of_chain","line":305,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.eq_of_chain","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.eq_of_chain\"><span class=\"name\">Part</span>.<span class=\"name\">eq_of_chain</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">some</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L294-L295","name":"OmegaCompletePartialOrder.œâScottContinuous.const","line":294,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.const\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Function.const\">Function.const</a> <span class=\"fn\">Œ±</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L289-L292","name":"OmegaCompletePartialOrder.œâScottContinuous.comp","line":289,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.comp\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> (<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">f</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L286-L287","name":"OmegaCompletePartialOrder.œâScottContinuous.of_map_œâSup_of_orderHom","line":286,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.of_map_œâSup_of_orderHom","doc":"**Alias** of the reverse direction of `OmegaCompletePartialOrder.œâScottContinuous_iff_map_œâSup_of_orderHom`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.of_map_œâSup_of_orderHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">of_map_œâSup_of_orderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span></span>)</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L286-L287","name":"OmegaCompletePartialOrder.œâScottContinuous.map_œâSup_of_orderHom","line":286,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.map_œâSup_of_orderHom","doc":"**Alias** of the forward direction of `OmegaCompletePartialOrder.œâScottContinuous_iff_map_œâSup_of_orderHom`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.map_œâSup_of_orderHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">map_œâSup_of_orderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></span> ‚Üí <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L281-L284","name":"OmegaCompletePartialOrder.œâScottContinuous_iff_map_œâSup_of_orderHom","line":281,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous_iff_map_œâSup_of_orderHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous_iff_map_œâSup_of_orderHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous_iff_map_œâSup_of_orderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L277-L278","name":"OmegaCompletePartialOrder.œâScottContinuous.monotone_map_œâSup","line":277,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.monotone_map_œâSup","doc":"**Alias** of the forward direction of `OmegaCompletePartialOrder.œâScottContinuous_iff_monotone_map_œâSup`.\n\n---\n\n`œâScottContinuous f` asserts that `f` is both monotone and distributes over œâSup. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.monotone_map_œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">monotone_map_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">f</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span>), <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">hf</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">}</a>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L277-L278","name":"OmegaCompletePartialOrder.œâScottContinuous.of_monotone_map_œâSup","line":277,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.of_monotone_map_œâSup","doc":"**Alias** of the reverse direction of `OmegaCompletePartialOrder.œâScottContinuous_iff_monotone_map_œâSup`.\n\n---\n\n`œâScottContinuous f` asserts that `f` is both monotone and distributes over œâSup. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.of_monotone_map_œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">of_monotone_map_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(‚àÉ (<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span>), <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">hf</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">}</a>)</span></span></span>)</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L267-L275","name":"OmegaCompletePartialOrder.œâScottContinuous_iff_monotone_map_œâSup","line":267,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous_iff_monotone_map_œâSup","doc":"`œâScottContinuous f` asserts that `f` is both monotone and distributes over œâSup. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous_iff_monotone_map_œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous_iff_monotone_map_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÉ (<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span>), <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">hf</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">}</a>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L264-L265","name":"OmegaCompletePartialOrder.œâScottContinuous.map_œâSup","line":264,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.map_œâSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.map_œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">map_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">‚ãØ</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">}</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L262-L262","name":"OmegaCompletePartialOrder.œâScottContinuous.id","line":262,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.id\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <a href=\"./Init/Prelude.html#id\">_root_.id</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L257-L260","name":"OmegaCompletePartialOrder.œâScottContinuous.isLUB","line":257,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.isLUB","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.isLUB\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">isLUB</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Defs.html#IsLUB\">IsLUB</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">‚ãØ</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">}</a>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L253-L255","name":"OmegaCompletePartialOrder.œâScottContinuous.monotone","line":253,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous.monotone\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous</span>.<span class=\"name\">monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">œâScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L250-L251","name":"ScottContinuous.œâScottContinuous","line":250,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#ScottContinuous.œâScottContinuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#ScottContinuous.œâScottContinuous\"><span class=\"name\">ScottContinuous</span>.<span class=\"name\">œâScottContinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/ScottContinuity.html#ScottContinuous\">ScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\">OmegaCompletePartialOrder.œâScottContinuous</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L245-L248","name":"OmegaCompletePartialOrder.œâScottContinuous","line":245,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous","doc":"A function `f` between `œâ`-complete partial orders is `œâScottContinuous` if it is\nScott continuous over chains. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâScottContinuous\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâScottContinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L229-L235","name":"OmegaCompletePartialOrder.subtype","line":229,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.subtype","doc":"A subset `p : Œ± ‚Üí Prop` of the type closed under `œâSup` induces an\n`OmegaCompletePartialOrder` on the subtype `{a : Œ± // p a}`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.subtype\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\">(‚àÄ <span class=\"fn\">i</span> ‚àà <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span>)</span> ‚Üí <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Subtype\">Subtype</a> <span class=\"fn\">p</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L219-L227","name":"OmegaCompletePartialOrder.œâSup_eq_of_isLUB","line":219,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_eq_of_isLUB","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_eq_of_isLUB\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâSup_eq_of_isLUB</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Defs.html#IsLUB\">IsLUB</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">‚áë<span class=\"fn\">c</span></span>)</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L210-L217","name":"OmegaCompletePartialOrder.isLUB_range_œâSup","line":210,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.isLUB_range_œâSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.isLUB_range_œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">isLUB_range_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Defs.html#IsLUB\">IsLUB</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">‚áë<span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L203-L208","name":"OmegaCompletePartialOrder.œâSup_le_iff","line":203,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_le_iff\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâSup_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L197-L201","name":"OmegaCompletePartialOrder.œâSup_le_œâSup_of_le","line":197,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_le_œâSup_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_le_œâSup_of_le\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâSup_le_œâSup_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c‚ÇÄ </span><span class=\"fn\">c‚ÇÅ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">c‚ÇÄ</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">c‚ÇÅ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c‚ÇÄ</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c‚ÇÅ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L188-L195","name":"OmegaCompletePartialOrder.œâSup_total","line":188,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_total","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_total\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâSup_total</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Or\">‚à®</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Or\">‚à®</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L185-L186","name":"OmegaCompletePartialOrder.le_œâSup_of_le","line":185,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.le_œâSup_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.le_œâSup_of_le\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">le_œâSup_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L175-L183","name":"OmegaCompletePartialOrder.lift","line":175,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.lift","doc":"Transfer an `OmegaCompletePartialOrder` on `Œ≤` to an `OmegaCompletePartialOrder` on `Œ±`\nusing a strictly monotone function `f : Œ≤ ‚Üío Œ±`, a definition of œâSup and a proof that `f` is\ncontinuous with regard to the provided `œâSup` and the œâCPO on `Œ±`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.lift\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œâSup‚ÇÄ</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ≤</span></span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span> ‚Üí <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ≤</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">œâSup‚ÇÄ</span> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L170-L170","name":"OmegaCompletePartialOrder.œâSup_le","line":170,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_le","doc":"`œâSup` is a lower bound of the set of upper bounds of the increasing sequence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_le\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâSup_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span>)</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L168-L168","name":"OmegaCompletePartialOrder.le_œâSup","line":168,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.le_œâSup","doc":"`œâSup` is an upper bound of the increasing sequence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.le_œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">le_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">œâSup</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L166-L166","name":"OmegaCompletePartialOrder.œâSup","line":166,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup","doc":"The supremum of an increasing sequence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L164-L164","name":"OmegaCompletePartialOrder.mk","line":164,"kind":"ctor","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.mk\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toPartialOrder</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œâSup</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">le_œâSup</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>) (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">œâSup</span> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œâSup_le</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\">(‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span>)</span> ‚Üí <span class=\"fn\"><span class=\"fn\">œâSup</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L164-L170","name":"OmegaCompletePartialOrder.toPartialOrder","line":164,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.toPartialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.toPartialOrder\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">toPartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L158-L170","name":"OmegaCompletePartialOrder","line":158,"kind":"class","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder","doc":"An omega-complete partial order is a partial order with a supremum\noperation on increasing sequences indexed by natural numbers (which we\ncall `œâSup`). In this sense, it is strictly weaker than join complete\nsemi-lattices as only œâ-sized totally ordered sets have a supremum.\n\nSee the definition on page 114 of [gunter1992]. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\"><span class=\"name\">OmegaCompletePartialOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">Œ±</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_6</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L148-L150","name":"OmegaCompletePartialOrder.Chain.pair_zip_pair","line":148,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair_zip_pair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair_zip_pair\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">pair_zip_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a‚ÇÅ </span><span class=\"fn\">a‚ÇÇ</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b‚ÇÅ </span><span class=\"fn\">b‚ÇÇ</span> : <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a‚ÇÅ</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">a‚ÇÇ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b‚ÇÅ</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">b‚ÇÇ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair\">pair</a> <span class=\"fn\">a‚ÇÅ</span> <span class=\"fn\">a‚ÇÇ</span> <span class=\"fn\">ha</span>)</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip\">zip</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair\">pair</a> <span class=\"fn\">b‚ÇÅ</span> <span class=\"fn\">b‚ÇÇ</span> <span class=\"fn\">hb</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair\">pair</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a‚ÇÅ</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b‚ÇÅ</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a‚ÇÇ</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b‚ÇÇ</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <span class=\"fn\">‚ãØ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L145-L146","name":"OmegaCompletePartialOrder.Chain.range_pair","line":145,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.range_pair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.range_pair\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">range_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hab</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair\">pair</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">hab</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">a</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L143-L143","name":"OmegaCompletePartialOrder.Chain.pair_succ","line":143,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair_succ\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">pair_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hab</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair\">pair</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">hab</span>)</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L142-L142","name":"OmegaCompletePartialOrder.Chain.pair_zero","line":142,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair_zero\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">pair_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hab</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair\">pair</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">hab</span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L135-L140","name":"OmegaCompletePartialOrder.Chain.pair","line":135,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair","doc":"An example of a `Chain` constructed from an ordered pair. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hab</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L133-L133","name":"OmegaCompletePartialOrder.Chain.zip_coe","line":133,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">zip_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c‚ÇÄ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c‚ÇÅ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c‚ÇÄ</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip\">zip</a></span> <span class=\"fn\">c‚ÇÅ</span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">c‚ÇÄ</span> <span class=\"fn\">n</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">c‚ÇÅ</span> <span class=\"fn\">n</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L126-L131","name":"OmegaCompletePartialOrder.Chain.zip","line":126,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip","doc":"`OmegaCompletePartialOrder.Chain.zip` pairs up the elements of two chains\nthat have the same index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">zip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c‚ÇÄ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c‚ÇÅ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L122-L124","name":"OmegaCompletePartialOrder.Chain.map_le_map","line":122,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_le_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_le_map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map_le_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L119-L120","name":"OmegaCompletePartialOrder.Chain.map_comp","line":119,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_comp\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≥</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.comp\">comp</a></span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L115-L117","name":"OmegaCompletePartialOrder.Chain.map_id","line":115,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_id\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.id\">OrderHom.id</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L108-L113","name":"OmegaCompletePartialOrder.Chain.mem_map_iff","line":108,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.mem_map_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.mem_map_iff\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">mem_map_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÉ <span class=\"fn\">a</span> ‚àà <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L105-L106","name":"OmegaCompletePartialOrder.Chain.exists_of_mem_map","line":105,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.exists_of_mem_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.exists_of_mem_map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">exists_of_mem_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span></span> ‚Üí <span class=\"fn\">‚àÉ <span class=\"fn\">a</span> ‚àà <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L102-L103","name":"OmegaCompletePartialOrder.Chain.mem_map","line":102,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.mem_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.mem_map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">mem_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">c</span> ‚Üí <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L98-L98","name":"OmegaCompletePartialOrder.Chain.map_coe","line":98,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">‚áë<span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L92-L96","name":"OmegaCompletePartialOrder.Chain.map","line":92,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map","doc":"`map` function for `Chain` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L90-L90","name":"OmegaCompletePartialOrder.Chain.directed","line":90,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.directed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.directed\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">directed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Directed.html#Directed\">Directed</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">‚áë<span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L88-L88","name":"OmegaCompletePartialOrder.Chain.isChain_range","line":88,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.isChain_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.isChain_range\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">isChain_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Preorder/Chain.html#IsChain\">IsChain</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">‚áë<span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L86-L86","name":"OmegaCompletePartialOrder.Chain.instLE","line":86,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instLE\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L79-L80","name":"OmegaCompletePartialOrder.Chain.instMembership","line":79,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instMembership","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instMembership\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instMembership</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">Œ±</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L76-L77","name":"OmegaCompletePartialOrder.Chain.instInhabited","line":76,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instInhabited\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L74-L74","name":"OmegaCompletePartialOrder.Chain.instOrderHomClassNat","line":74,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instOrderHomClassNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instOrderHomClassNat\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instOrderHomClassNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHomClass\">OrderHomClass</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span>)</span> <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L73-L73","name":"OmegaCompletePartialOrder.Chain.instFunLikeNat","line":73,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instFunLikeNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instFunLikeNat\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instFunLikeNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">Œ±</span>)</span> <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Order/OmegaCompletePartialOrder.lean#L64-L68","name":"OmegaCompletePartialOrder.Chain","line":64,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain","doc":"A chain is a monotone sequence.\n\nSee the definition on page 114 of [gunter1992]. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}