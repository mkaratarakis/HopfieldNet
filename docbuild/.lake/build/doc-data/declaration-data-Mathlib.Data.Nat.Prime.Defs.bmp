{"name":"Mathlib.Data.Nat.Prime.Defs","instances":[{"typeNames":["LT.lt"],"name":"Nat.Prime.one_lt'","className":"Fact"},{"typeNames":["Nat.Prime"],"name":"Nat.decidablePrime","className":"Decidable"},{"typeNames":["Eq"],"name":"Nat.instPrimesDecidableEq","className":"Decidable"},{"typeNames":["Nat.Primes"],"name":"Nat.Primes.instRepr","className":"Repr"},{"typeNames":["Nat.Primes"],"name":"Nat.Primes.inhabitedPrimes","className":"Inhabited"},{"typeNames":["Nat.Primes","Nat"],"name":"Nat.Primes.coeNat","className":"Coe"},{"typeNames":["Nat.Primes"],"name":"Nat.monoid.primePow","className":"Pow"},{"typeNames":["Nat.Prime"],"name":"Nat.fact_prime_two","className":"Fact"},{"typeNames":["Nat.Prime"],"name":"Nat.fact_prime_three","className":"Fact"}],"imports":["Init","Batteries.Data.Nat.Gcd","Mathlib.Algebra.Group.Nat.Units","Mathlib.Algebra.GroupWithZero.Nat","Mathlib.Algebra.Prime.Defs","Mathlib.Data.Nat.Sqrt","Mathlib.Order.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L455-L456","name":"Nat.fact_prime_three","line":455,"kind":"instance","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.fact_prime_three","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.fact_prime_three\"><span class=\"name\">Nat</span>.<span class=\"name\">fact_prime_three</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">3</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L452-L453","name":"Nat.fact_prime_two","line":452,"kind":"instance","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.fact_prime_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.fact_prime_two\"><span class=\"name\">Nat</span>.<span class=\"name\">fact_prime_two</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">2</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L445-L446","name":"Nat.monoid.primePow","line":445,"kind":"instance","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.monoid.primePow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.monoid.primePow\"><span class=\"name\">Nat</span>.<span class=\"name\">monoid</span>.<span class=\"name\">primePow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes\">Primes</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L440-L441","name":"Nat.Primes.coe_nat_inj","line":440,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes.coe_nat_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes.coe_nat_inj\"><span class=\"name\">Nat</span>.<span class=\"name\">Primes</span>.<span class=\"name\">coe_nat_inj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes\">Primes</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L437-L438","name":"Nat.Primes.coe_nat_injective","line":437,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes.coe_nat_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes.coe_nat_injective\"><span class=\"name\">Nat</span>.<span class=\"name\">Primes</span>.<span class=\"name\">coe_nat_injective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <a href=\"./Init/Prelude.html#Subtype.val\">Subtype.val</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L434-L435","name":"Nat.Primes.coeNat","line":434,"kind":"instance","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes.coeNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes.coeNat\"><span class=\"name\">Nat</span>.<span class=\"name\">Primes</span>.<span class=\"name\">coeNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes\">Primes</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L431-L432","name":"Nat.Primes.inhabitedPrimes","line":431,"kind":"instance","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes.inhabitedPrimes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes.inhabitedPrimes\"><span class=\"name\">Nat</span>.<span class=\"name\">Primes</span>.<span class=\"name\">inhabitedPrimes</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes\">Primes</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L428-L429","name":"Nat.Primes.instRepr","line":428,"kind":"instance","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes.instRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes.instRepr\"><span class=\"name\">Nat</span>.<span class=\"name\">Primes</span>.<span class=\"name\">instRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes\">Primes</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L424-L424","name":"Nat.instPrimesDecidableEq","line":424,"kind":"instance","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.instPrimesDecidableEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.instPrimesDecidableEq\"><span class=\"name\">Nat</span>.<span class=\"name\">instPrimesDecidableEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes\">Primes</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L421-L424","name":"Nat.Primes","line":421,"kind":"def","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes","doc":"The type of prime numbers "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes\"><span class=\"name\">Nat</span>.<span class=\"name\">Primes</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L418-L419","name":"Nat.irreducible_iff_prime","line":418,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.irreducible_iff_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.irreducible_iff_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">irreducible_iff_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Irreducible/Defs.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Prime/Defs.html#Prime\">_root_.Prime</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L416-L416","name":"Nat.Prime.prime","line":416,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.prime","doc":"**Alias** of the forward direction of `Nat.prime_iff`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.prime\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Prime/Defs.html#Prime\">_root_.Prime</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L416-L416","name":"Prime.nat_prime","line":416,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Prime.nat_prime","doc":"**Alias** of the reverse direction of `Nat.prime_iff`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Prime.nat_prime\"><span class=\"name\">Prime</span>.<span class=\"name\">nat_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Prime/Defs.html#Prime\">Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L413-L414","name":"Nat.prime_iff","line":413,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_iff\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Prime/Defs.html#Prime\">_root_.Prime</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L409-L411","name":"Nat.Prime.dvd_mul","line":409,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.dvd_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.dvd_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">dvd_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L405-L407","name":"Nat.Prime.coprime_iff_not_dvd","line":405,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.coprime_iff_not_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.coprime_iff_not_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">coprime_iff_not_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L397-L403","name":"Nat.coprime_of_dvd","line":397,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.coprime_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.coprime_of_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">coprime_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">k</span></span> → <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L394-L395","name":"Nat.exists_prime_and_dvd","line":394,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.exists_prime_and_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.exists_prime_and_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">exists_prime_and_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">p</span> <a href=\"./Init/Core.html#Exists\">:</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L385-L390","name":"Nat.factors_lemma","line":385,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.factors_lemma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.factors_lemma\"><span class=\"name\">Nat</span>.<span class=\"name\">factors_lemma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>).<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L370-L383","name":"Nat.minFac_eq_two_iff","line":370,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_eq_two_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_eq_two_iff\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_eq_two_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L359-L368","name":"Nat.minFac_eq_one_iff","line":359,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_eq_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_eq_one_iff\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L350-L357","name":"Nat.minFac_sq_le_self","line":350,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_sq_le_self","doc":"The square of the smallest prime factor of a composite number `n` is at most `n`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_sq_le_self\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_sq_le_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L335-L348","name":"Nat.minFac_le_div","line":335,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_le_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_le_div\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_le_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">np</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L331-L333","name":"Nat.not_prime_iff_minFac_lt","line":331,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.not_prime_iff_minFac_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.not_prime_iff_minFac_lt\"><span class=\"name\">Nat</span>.<span class=\"name\">not_prime_iff_minFac_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n2</span> : <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L327-L329","name":"Nat.decidablePrime_csimp","line":327,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.decidablePrime_csimp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.decidablePrime_csimp\"><span class=\"name\">Nat</span>.<span class=\"name\">decidablePrime_csimp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.decidablePrime\">decidablePrime</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.decidablePrime'\">decidablePrime'</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L320-L325","name":"Nat.decidablePrime'","line":320,"kind":"def","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.decidablePrime'","doc":"This definition is faster in the virtual machine than `decidablePrime`,\nbut slower in the kernel.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.decidablePrime'\"><span class=\"name\">Nat</span>.<span class=\"name\">decidablePrime'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L316-L318","name":"Nat.Prime.minFac_eq","line":316,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.minFac_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.minFac_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">minFac_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L309-L314","name":"Nat.prime_def_minFac","line":309,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_def_minFac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_def_minFac\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_def_minFac</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L303-L307","name":"Nat.le_minFac'","line":303,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.le_minFac'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.le_minFac'\"><span class=\"name\">Nat</span>.<span class=\"name\">le_minFac'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span> → <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L297-L301","name":"Nat.le_minFac","line":297,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.le_minFac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.le_minFac\"><span class=\"name\">Nat</span>.<span class=\"name\">le_minFac</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span> → <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L294-L295","name":"Nat.minFac_le","line":294,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_le\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L289-L292","name":"Nat.minFac_pos","line":289,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_pos\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L284-L287","name":"Nat.minFac_le_of_dvd","line":284,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_le_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_le_of_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_le_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span> → <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L280-L282","name":"Nat.minFac_prime","line":280,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n1</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L277-L278","name":"Nat.minFac_dvd","line":277,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_dvd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L264-L275","name":"Nat.minFac_has_prop","line":264,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_has_prop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_has_prop\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_has_prop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n1</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#_private.Mathlib.Data.Nat.Prime.Defs.0.Nat.minFacProp\">Nat.minFacProp✝</a> <span class=\"fn\">n</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L232-L262","name":"Nat.minFacAux_has_prop","line":232,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFacAux_has_prop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFacAux_has_prop\"><span class=\"name\">Nat</span>.<span class=\"name\">minFacAux_has_prop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n2</span> : <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span> → <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span> → <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#_private.Mathlib.Data.Nat.Prime.Defs.0.Nat.minFacProp\">Nat.minFacProp✝</a> <span class=\"fn\">n</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFacAux\">minFacAux</a></span> <span class=\"fn\">k</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L227-L227","name":"Nat.minFac_eq","line":227,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFacAux\">minFacAux</a></span> <span class=\"fn\">3</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L223-L225","name":"Nat.minFac_two","line":223,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_two\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_two</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L219-L221","name":"Nat.minFac_one","line":219,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_one\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L215-L217","name":"Nat.minFac_zero","line":215,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\">minFac</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L211-L213","name":"Nat.minFac","line":211,"kind":"def","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac","doc":"Returns the smallest prime factor of `n ≠ 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L189-L209","name":"Nat.minFacAux","line":189,"kind":"def","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFacAux","doc":"If `n < k * k`, then `minFacAux n k = n`, if `k | n`, then `minFacAux n k = k`.\nOtherwise, `minFacAux n k = minFacAux n (k+2)` using well-founded recursion.\nIf `n` is odd and `1 < n`, then `minFacAux n 3` is the smallest prime factor of `n`.\n\nBy default this well-founded recursion would be irreducible.\nThis prevents use `decide` to resolve `Nat.prime n` for small values of `n`,\nso we mark this as `@[semireducible]`.\n\nIn future, we may want to remove this annotation and instead use `norm_num` instead of `decide`\nin these situations.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFacAux\"><span class=\"name\">Nat</span>.<span class=\"name\">minFacAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L186-L187","name":"Nat.minFac_lemma","line":186,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_lemma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.minFac_lemma\"><span class=\"name\">Nat</span>.<span class=\"name\">minFac_lemma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Batteries/Data/Nat/Basic.html#Nat.sqrt\">sqrt</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Batteries/Data/Nat/Basic.html#Nat.sqrt\">sqrt</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L181-L182","name":"Nat.Prime.not_dvd_one","line":181,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.not_dvd_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.not_dvd_one\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">not_dvd_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L178-L179","name":"Nat.prime_dvd_prime_iff_eq","line":178,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_dvd_prime_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_dvd_prime_iff_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_dvd_prime_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">qp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">q</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L175-L176","name":"Nat.dvd_prime_two_le","line":175,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.dvd_prime_two_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.dvd_prime_two_le\"><span class=\"name\">Nat</span>.<span class=\"name\">dvd_prime_two_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L171-L173","name":"Nat.dvd_prime","line":171,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.dvd_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.dvd_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">dvd_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L169-L169","name":"Nat.prime_eleven","line":169,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_eleven","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_eleven\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_eleven</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">11</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L167-L167","name":"Nat.prime_seven","line":167,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_seven","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_seven\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_seven</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">7</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L165-L165","name":"Nat.prime_five","line":165,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_five","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_five\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_five</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">5</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L163-L163","name":"Nat.prime_three","line":163,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_three","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_three\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_three</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">3</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L161-L161","name":"Nat.prime_two","line":161,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_two\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_two</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L148-L159","name":"Nat.decidablePrime","line":148,"kind":"instance","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.decidablePrime","doc":"This instance is set up to work in the kernel (`by decide`) for small values.\n\nBelow (`decidablePrime'`) we will define a faster variant to be used by the compiler\n(e.g. in `#eval` or `by native_decide`).\n\nIf you need to prove that a particular number is prime, in any case\nyou should not use `by decide`, but rather `by norm_num`, which is\nmuch faster.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.decidablePrime\"><span class=\"name\">Nat</span>.<span class=\"name\">decidablePrime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L140-L146","name":"Nat.prime_of_coprime","line":140,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_of_coprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_of_coprime\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_of_coprime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">m</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L127-L138","name":"Nat.prime_def_le_sqrt","line":127,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_def_le_sqrt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_def_le_sqrt\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_def_le_sqrt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Batteries/Data/Nat/Basic.html#Nat.sqrt\">sqrt</a></span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L115-L125","name":"Nat.prime_def_lt'","line":115,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_def_lt'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_def_lt'\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_def_lt'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L108-L113","name":"Nat.prime_def_lt","line":108,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_def_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_def_lt\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_def_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">p</span> → <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L105-L106","name":"Nat.prime_def_lt''","line":105,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_def_lt''","doc":"**Alias** of `Nat.prime_def`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_def_lt''\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_def_lt''</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">p</span> → <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L95-L103","name":"Nat.prime_def","line":95,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_def","doc":"`Nat.Prime p` means that `p` is a prime number, that is, a natural number\nat least 2 whose only divisors are `p` and `1`.\nThe theorem `Nat.prime_def` witnesses this description of a prime number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_def\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">p</span> → <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L86-L93","name":"Nat.Prime.eq_one_or_self_of_dvd","line":86,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.eq_one_or_self_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.eq_one_or_self_of_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">eq_one_or_self_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">p</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L83-L84","name":"Nat.Prime.ne_one","line":83,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.ne_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.ne_one\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">ne_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L80-L81","name":"Nat.Prime.one_lt'","line":80,"kind":"instance","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.one_lt'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.one_lt'\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">one_lt'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L78-L78","name":"Nat.Prime.one_le","line":78,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.one_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.one_le\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">one_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L75-L76","name":"Nat.Prime.one_lt","line":75,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.one_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.one_lt\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">one_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L70-L73","name":"Nat.Prime.two_le","line":70,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.two_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.two_le\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">two_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L67-L68","name":"Nat.Prime.pos","line":67,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.pos\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L64-L65","name":"Nat.Prime.ne_zero","line":64,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime.ne_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L58-L62","name":"Nat.prime_one_false","line":58,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_one_false","doc":"A copy of `not_prime_one` stated in a way that works for `aesop`.\n\nSee https://github.com/leanprover-community/aesop/issues/197 for an explanation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_one_false\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_one_false</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">1</span></span> → <a href=\"./Init/Prelude.html#False\">False</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L55-L56","name":"Nat.not_prime_one","line":55,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.not_prime_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.not_prime_one\"><span class=\"name\">Nat</span>.<span class=\"name\">not_prime_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L49-L53","name":"Nat.prime_zero_false","line":49,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_zero_false","doc":"A copy of `not_prime_zero` stated in a way that works for `aesop`.\n\nSee https://github.com/leanprover-community/aesop/issues/197 for an explanation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.prime_zero_false\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_zero_false</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">0</span></span> → <a href=\"./Init/Prelude.html#False\">False</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L46-L47","name":"Nat.not_prime_zero","line":46,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.not_prime_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.not_prime_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">not_prime_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L43-L44","name":"Nat.irreducible_iff_nat_prime","line":43,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.irreducible_iff_nat_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.irreducible_iff_nat_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">irreducible_iff_nat_prime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Irreducible/Defs.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Data/Nat/Prime/Defs.lean#L36-L41","name":"Nat.Prime","line":36,"kind":"def","docLink":"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime","doc":"`Nat.Prime p` means that `p` is a prime number, that is, a natural number\nat least 2 whose only divisors are `p` and `1`.\nThe theorem `Nat.prime_def` witnesses this description of a prime number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}