{"name":"Mathlib.SetTheory.Ordinal.Veblen","instances":[],"imports":["Init","Mathlib.SetTheory.Ordinal.FixedPoint"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L464-L466","name":"Ordinal.gamma_pos","line":464,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma_pos\"><span class=\"name\">Ordinal</span>.<span class=\"name\">gamma_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L461-L462","name":"Ordinal.natCast_lt_gamma","line":461,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.natCast_lt_gamma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.natCast_lt_gamma\"><span class=\"name\">Ordinal</span>.<span class=\"name\">natCast_lt_gamma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L458-L459","name":"Ordinal.omega0_lt_gamma","line":458,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.omega0_lt_gamma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.omega0_lt_gamma\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_lt_gamma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L454-L456","name":"Ordinal.epsilon0_lt_gamma","line":454,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon0_lt_gamma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon0_lt_gamma\"><span class=\"name\">Ordinal</span>.<span class=\"name\">epsilon0_lt_gamma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon\">epsilon</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L448-L452","name":"Ordinal.iterate_veblen_lt_gamma0","line":448,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.iterate_veblen_lt_gamma0","doc":"`veblen (veblen … (veblen 0 0) … 0) 0 < Γ₀` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.iterate_veblen_lt_gamma0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">iterate_veblen_lt_gamma0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">a</span> <span class=\"fn\">0</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L444-L446","name":"Ordinal.lt_gamma0","line":444,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.lt_gamma0","doc":"`Γ₀` is the limit of `0`, `veblen 0 0`, `veblen (veblen 0 0) 0`, … "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.lt_gamma0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_gamma0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">(fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">a</span> <span class=\"fn\">0</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L440-L442","name":"Ordinal.gamma0_le_of_veblen_le","line":440,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma0_le_of_veblen_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma0_le_of_veblen_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">gamma0_le_of_veblen_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L437-L438","name":"Ordinal.gamma_succ_eq_nfp","line":437,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma_succ_eq_nfp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma_succ_eq_nfp\"><span class=\"name\">Ordinal</span>.<span class=\"name\">gamma_succ_eq_nfp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.nfp\">nfp</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L434-L435","name":"Ordinal.gamma0_eq_nfp","line":434,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma0_eq_nfp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma0_eq_nfp\"><span class=\"name\">Ordinal</span>.<span class=\"name\">gamma0_eq_nfp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.nfp\">nfp</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L430-L432","name":"Ordinal.veblen_gamma_zero","line":430,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_gamma_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_gamma_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_gamma_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L426-L428","name":"Ordinal.gamma_inj","line":426,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma_inj\"><span class=\"name\">Ordinal</span>.<span class=\"name\">gamma_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L422-L424","name":"Ordinal.gamma_le_gamma","line":422,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma_le_gamma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma_le_gamma\"><span class=\"name\">Ordinal</span>.<span class=\"name\">gamma_le_gamma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L418-L420","name":"Ordinal.gamma_lt_gamma","line":418,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma_lt_gamma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma_lt_gamma\"><span class=\"name\">Ordinal</span>.<span class=\"name\">gamma_lt_gamma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L415-L416","name":"Ordinal.monotone_gamma","line":415,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.monotone_gamma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.monotone_gamma\"><span class=\"name\">Ordinal</span>.<span class=\"name\">monotone_gamma</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L412-L413","name":"Ordinal.strictMono_gamma","line":412,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.strictMono_gamma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.strictMono_gamma\"><span class=\"name\">Ordinal</span>.<span class=\"name\">strictMono_gamma</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L409-L410","name":"Ordinal.isNormal_gamma","line":409,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_gamma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_gamma\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_gamma</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\">gamma</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L405-L407","name":"Ordinal.termΓ₀","line":405,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.termΓ₀","doc":"The Feferman-Schütte ordinal `Γ₀` is the smallest fixed point of `veblen · 0`, i.e. the supremum\nof `veblen ε₀ 0`, `veblen (veblen ε₀ 0) 0`, etc. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.termΓ₀\"><span class=\"name\">Ordinal</span>.<span class=\"name\">termΓ₀</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L402-L403","name":"Ordinal.termΓ_","line":402,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.termΓ_","doc":"The gamma function enumerates the fixed points of `veblen · 0`.\n\nOf particular importance is `Γ₀ = gamma 0`, the Feferman-Schütte ordinal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.termΓ_\"><span class=\"name\">Ordinal</span>.<span class=\"name\">termΓ_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L396-L400","name":"Ordinal.gamma","line":396,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma","doc":"The gamma function enumerates the fixed points of `veblen · 0`.\n\nOf particular importance is `Γ₀ = gamma 0`, the Feferman-Schütte ordinal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.gamma\"><span class=\"name\">Ordinal</span>.<span class=\"name\">gamma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L391-L392","name":"Ordinal.epsilon_pos","line":391,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon_pos\"><span class=\"name\">Ordinal</span>.<span class=\"name\">epsilon_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon\">epsilon</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L388-L389","name":"Ordinal.natCast_lt_epsilon","line":388,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.natCast_lt_epsilon","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.natCast_lt_epsilon\"><span class=\"name\">Ordinal</span>.<span class=\"name\">natCast_lt_epsilon</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon\">epsilon</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L384-L386","name":"Ordinal.omega0_lt_epsilon","line":384,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.omega0_lt_epsilon","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.omega0_lt_epsilon\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_lt_epsilon</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon\">epsilon</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L378-L382","name":"Ordinal.iterate_omega0_opow_lt_epsilon0","line":378,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.iterate_omega0_opow_lt_epsilon0","doc":"`ω ^ ω ^ … ^ 0 < ε₀` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.iterate_omega0_opow_lt_epsilon0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">iterate_omega0_opow_lt_epsilon0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon\">epsilon</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L374-L376","name":"Ordinal.lt_epsilon0","line":374,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.lt_epsilon0","doc":"`ε₀` is the limit of `0`, `ω ^ 0`, `ω ^ ω ^ 0`, … "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.lt_epsilon0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_epsilon0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon\">epsilon</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">(fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) =&gt; <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L370-L372","name":"Ordinal.omega0_opow_epsilon","line":370,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.omega0_opow_epsilon","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.omega0_opow_epsilon\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_opow_epsilon</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon\">epsilon</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon\">epsilon</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L366-L368","name":"Ordinal.epsilon0_le_of_omega0_opow_le","line":366,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon0_le_of_omega0_opow_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon0_le_of_omega0_opow_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">epsilon0_le_of_omega0_opow_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon\">epsilon</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L363-L364","name":"Ordinal.epsilon_succ_eq_nfp","line":363,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon_succ_eq_nfp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon_succ_eq_nfp\"><span class=\"name\">Ordinal</span>.<span class=\"name\">epsilon_succ_eq_nfp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon\">epsilon</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.nfp\">nfp</a> <span class=\"fn\">(fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon\">epsilon</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L360-L361","name":"Ordinal.epsilon0_eq_nfp","line":360,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon0_eq_nfp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon0_eq_nfp\"><span class=\"name\">Ordinal</span>.<span class=\"name\">epsilon0_eq_nfp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon\">epsilon</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.nfp\">nfp</a> <span class=\"fn\">(fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L357-L358","name":"Ordinal.epsilon_eq_deriv","line":357,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon_eq_deriv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon_eq_deriv\"><span class=\"name\">Ordinal</span>.<span class=\"name\">epsilon_eq_deriv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon\">epsilon</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.deriv\">deriv</a> <span class=\"fn\">(fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L354-L355","name":"Ordinal.termε₀","line":354,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.termε₀","doc":"`ε₀` is the first fixed point of `ω ^ ⬝`, i.e. the supremum of `ω`, `ω ^ ω`, `ω ^ ω ^ ω`, … "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.termε₀\"><span class=\"name\">Ordinal</span>.<span class=\"name\">termε₀</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L352-L352","name":"Ordinal.termε_","line":352,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.termε_","doc":"The epsilon function enumerates the fixed points of `ω ^ ⬝`.\nThis is an abbreviation for `veblen 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.termε_\"><span class=\"name\">Ordinal</span>.<span class=\"name\">termε_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L348-L350","name":"Ordinal.epsilon","line":348,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon","doc":"The epsilon function enumerates the fixed points of `ω ^ ⬝`.\nThis is an abbreviation for `veblen 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.epsilon\"><span class=\"name\">Ordinal</span>.<span class=\"name\">epsilon</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L335-L342","name":"Ordinal.veblen_eq_veblen_iff","line":335,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_eq_veblen_iff","doc":"`veblen o₁ a ≤ veblen o₂ b` iff one of the following holds:\n* `o₁ = o₂` and `a = b`\n* `o₁ < o₂` and `a = veblen o₂ b`\n* `o₁ > o₂` and `veblen o₁ a = b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_eq_veblen_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_eq_veblen_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L326-L333","name":"Ordinal.veblen_le_veblen_iff","line":326,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_le_veblen_iff","doc":"`veblen o₁ a ≤ veblen o₂ b` iff one of the following holds:\n* `o₁ = o₂` and `a ≤ b`\n* `o₁ < o₂` and `a ≤ veblen o₂ b`\n* `o₁ > o₂` and `veblen o₁ a ≤ b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_le_veblen_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_le_veblen_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L317-L324","name":"Ordinal.veblen_lt_veblen_iff","line":317,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_lt_veblen_iff","doc":"`veblen o₁ a < veblen o₂ b` iff one of the following holds:\n* `o₁ = o₂` and `a < b`\n* `o₁ < o₂` and `a < veblen o₂ b`\n* `o₁ > o₂` and `veblen o₁ a < b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_lt_veblen_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_lt_veblen_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L310-L315","name":"Ordinal.cmp_veblen","line":310,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.cmp_veblen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.cmp_veblen\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cmp_veblen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">o₁</span> <span class=\"fn\">o₂</span></span> with\n  | <a href=\"./Init/Data/Ord.html#Ordering.eq\">Ordering.eq</a> =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>\n  | <a href=\"./Init/Data/Ord.html#Ordering.lt\">Ordering.lt</a> =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span>)</span></span>\n  | <a href=\"./Init/Data/Ord.html#Ordering.gt\">Ordering.gt</a> =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L307-L308","name":"Ordinal.isNormal_veblen_zero","line":307,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblen_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblen_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_veblen_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L304-L305","name":"Ordinal.left_le_veblen","line":304,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.left_le_veblen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.left_le_veblen\"><span class=\"name\">Ordinal</span>.<span class=\"name\">left_le_veblen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L300-L302","name":"Ordinal.veblen_zero_inj","line":300,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_inj\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_zero_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L296-L298","name":"Ordinal.veblen_zero_le_veblen_zero","line":296,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_le_veblen_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_le_veblen_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_zero_le_veblen_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L292-L294","name":"Ordinal.veblen_zero_lt_veblen_zero","line":292,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_lt_veblen_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_lt_veblen_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_zero_lt_veblen_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L289-L290","name":"Ordinal.veblen_zero_strictMono","line":289,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_strictMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_zero_strictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L285-L287","name":"Ordinal.veblen_pos","line":285,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_pos\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L282-L283","name":"Ordinal.veblen_left_monotone","line":282,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_left_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_left_monotone\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_left_monotone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">x</span> <span class=\"fn\">o</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L279-L280","name":"Ordinal.right_le_veblen","line":279,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.right_le_veblen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.right_le_veblen\"><span class=\"name\">Ordinal</span>.<span class=\"name\">right_le_veblen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L275-L277","name":"Ordinal.veblen_inj","line":275,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_inj\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L272-L273","name":"Ordinal.veblen_injective","line":272,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_injective\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_injective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L268-L270","name":"Ordinal.veblen_le_veblen_iff_right","line":268,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_le_veblen_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_le_veblen_iff_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_le_veblen_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L264-L266","name":"Ordinal.veblen_lt_veblen_iff_right","line":264,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_lt_veblen_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_lt_veblen_iff_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_lt_veblen_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L261-L262","name":"Ordinal.veblen_right_strictMono","line":261,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_right_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_right_strictMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_right_strictMono</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L258-L259","name":"Ordinal.veblen_succ","line":258,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.deriv\">deriv</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L255-L256","name":"Ordinal.veblen_veblen_of_lt","line":255,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_veblen_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_veblen_of_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_veblen_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L252-L253","name":"Ordinal.isNormal_veblen","line":252,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblen\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_veblen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L249-L250","name":"Ordinal.veblen_of_ne_zero","line":249,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_of_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_of_ne_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_of_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.derivFamily\">derivFamily</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L246-L247","name":"Ordinal.veblen_zero_apply","line":246,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_apply\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_zero_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L242-L244","name":"Ordinal.veblen_zero","line":242,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L233-L240","name":"Ordinal.veblen","line":233,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen","doc":"`veblen o` is the `o`-th function in the Veblen hierarchy starting with `ω ^ ·`. That is:\n\n- `veblen 0 a = ω ^ a`.\n- `veblen o` for `o ≠ 0` enumerates the fixed points of `veblen o'` for `o' < o`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L217-L225","name":"Ordinal.veblenWith_eq_veblenWith_iff","line":217,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_eq_veblenWith_iff","doc":"`veblenWith f o₁ a = veblenWith f o₂ b` iff one of the following holds:\n* `o₁ = o₂` and `a = b`\n* `o₁ < o₂` and `a = veblenWith f o₂ b`\n* `o₁ > o₂` and `veblenWith f o₁ a = b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_eq_veblenWith_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_eq_veblenWith_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L207-L215","name":"Ordinal.veblenWith_le_veblenWith_iff","line":207,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_le_veblenWith_iff","doc":"`veblenWith f o₁ a ≤ veblenWith f o₂ b` iff one of the following holds:\n* `o₁ = o₂` and `a ≤ b`\n* `o₁ < o₂` and `a ≤ veblenWith f o₂ b`\n* `o₁ > o₂` and `veblenWith f o₁ a ≤ b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_le_veblenWith_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_le_veblenWith_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L197-L205","name":"Ordinal.veblenWith_lt_veblenWith_iff","line":197,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_lt_veblenWith_iff","doc":"`veblenWith f o₁ a < veblenWith f o₂ b` iff one of the following holds:\n* `o₁ = o₂` and `a < b`\n* `o₁ < o₂` and `a < veblenWith f o₂ b`\n* `o₁ > o₂` and `veblenWith f o₁ a < b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_lt_veblenWith_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_lt_veblenWith_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L185-L195","name":"Ordinal.cmp_veblenWith","line":185,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.cmp_veblenWith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.cmp_veblenWith\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cmp_veblenWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">o₁</span> <span class=\"fn\">o₂</span></span> with\n  | <a href=\"./Init/Data/Ord.html#Ordering.eq\">Ordering.eq</a> =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>\n  | <a href=\"./Init/Data/Ord.html#Ordering.lt\">Ordering.lt</a> =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span>)</span></span>\n  | <a href=\"./Init/Data/Ord.html#Ordering.gt\">Ordering.gt</a> =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L166-L183","name":"Ordinal.IsNormal.veblenWith_zero","line":166,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.IsNormal.veblenWith_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.IsNormal.veblenWith_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">veblenWith_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L162-L164","name":"Ordinal.left_le_veblenWith","line":162,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.left_le_veblenWith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.left_le_veblenWith\"><span class=\"name\">Ordinal</span>.<span class=\"name\">left_le_veblenWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L159-L160","name":"Ordinal.veblenWith_zero_inj","line":159,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_inj\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_zero_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L155-L157","name":"Ordinal.veblenWith_zero_le_veblenWith_zero","line":155,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_le_veblenWith_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_le_veblenWith_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_zero_le_veblenWith_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L151-L153","name":"Ordinal.veblenWith_zero_lt_veblenWith_zero","line":151,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_lt_veblenWith_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_lt_veblenWith_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_zero_lt_veblenWith_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L145-L149","name":"Ordinal.veblenWith_zero_strictMono","line":145,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_strictMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_zero_strictMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L136-L143","name":"Ordinal.veblenWith_pos","line":136,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_pos\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L130-L134","name":"Ordinal.veblenWith_left_monotone","line":130,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_left_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_left_monotone\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_left_monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L127-L128","name":"Ordinal.right_le_veblenWith","line":127,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.right_le_veblenWith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.right_le_veblenWith\"><span class=\"name\">Ordinal</span>.<span class=\"name\">right_le_veblenWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L123-L125","name":"Ordinal.veblenWith_inj","line":123,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_inj\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L120-L121","name":"Ordinal.veblenWith_injective","line":120,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_injective\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L116-L118","name":"Ordinal.veblenWith_le_veblenWith_iff_right","line":116,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_le_veblenWith_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_le_veblenWith_iff_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_le_veblenWith_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L112-L114","name":"Ordinal.veblenWith_lt_veblenWith_iff_right","line":112,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_lt_veblenWith_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_lt_veblenWith_iff_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_lt_veblenWith_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L109-L110","name":"Ordinal.veblenWith_right_strictMono","line":109,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_right_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_right_strictMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_right_strictMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L95-L107","name":"Ordinal.veblenWith_succ","line":95,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.deriv\">deriv</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L88-L93","name":"Ordinal.veblenWith_veblenWith_of_lt","line":88,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_veblenWith_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_veblenWith_of_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_veblenWith_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L86-L86","name":"Ordinal.IsNormal.veblenWith","line":86,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.IsNormal.veblenWith","doc":"**Alias** of `Ordinal.isNormal_veblenWith`.\n\n---\n\n`veblenWith f o` is always normal whenever `f` is. See `isNormal_veblenWith'` for a version\nwhich does not assume `IsNormal f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.IsNormal.veblenWith\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">veblenWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L79-L84","name":"Ordinal.isNormal_veblenWith","line":79,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblenWith","doc":"`veblenWith f o` is always normal whenever `f` is. See `isNormal_veblenWith'` for a version\nwhich does not assume `IsNormal f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblenWith\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_veblenWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L70-L74","name":"Ordinal.isNormal_veblenWith'","line":70,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblenWith'","doc":"`veblenWith f o` is always normal for `o ≠ 0`. See `isNormal_veblenWith` for a version which\nassumes `IsNormal f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblenWith'\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_veblenWith'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L66-L68","name":"Ordinal.veblenWith_of_ne_zero","line":66,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_of_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_of_ne_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_of_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.derivFamily\">derivFamily</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L62-L64","name":"Ordinal.veblenWith_zero","line":62,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Veblen.lean#L50-L60","name":"Ordinal.veblenWith","line":50,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith","doc":"`veblenWith f o` is the `o`-th function in the Veblen hierarchy starting with `f`. This is\ndefined so that\n\n- `veblenWith f 0 = f`.\n- `veblenWith f o` for `o ≠ 0` enumerates the common fixed points of `veblenWith f o'` over all\n  `o' < o`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"}]}