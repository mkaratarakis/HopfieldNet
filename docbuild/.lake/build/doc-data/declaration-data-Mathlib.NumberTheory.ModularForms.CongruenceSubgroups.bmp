{"name":"Mathlib.NumberTheory.ModularForms.CongruenceSubgroups","instances":[{"typeNames":["CongruenceSubgroup.Gamma"],"name":"CongruenceSubgroup.instFiniteIndexGamma","className":"Subgroup.FiniteIndex"},{"typeNames":["CongruenceSubgroup.Gamma0"],"name":"CongruenceSubgroup.instFiniteIndexGamma0","className":"Subgroup.FiniteIndex"},{"typeNames":["CongruenceSubgroup.Gamma1"],"name":"CongruenceSubgroup.instFiniteIndexGamma1","className":"Subgroup.FiniteIndex"}],"imports":["Init","Mathlib.Analysis.Complex.UpperHalfPlane.MoebiusAction"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L237-L242","name":"CongruenceSubgroup.conj_cong_is_cong","line":237,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.conj_cong_is_cong","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.conj_cong_is_cong\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">conj_cong_is_cong</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/ConjAct.html#ConjAct\">ConjAct</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">IsCongruenceSubgroup</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">IsCongruenceSubgroup</a> (<span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">Γ</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L234-L235","name":"CongruenceSubgroup.Gamma_cong_eq_self","line":234,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_cong_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_cong_eq_self\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma_cong_eq_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/ConjAct.html#ConjAct\">ConjAct</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">Gamma</a> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">Gamma</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L226-L232","name":"CongruenceSubgroup.conjGLPos_coe","line":226,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.conjGLPos_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.conjGLPos_coe\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">conjGLPos_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.conjGLPos\">conjGLPos</a> <span class=\"fn\">Γ</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/ConjAct.html#ConjAct.toConjAct\">ConjAct.toConjAct</a> <span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">Γ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L220-L224","name":"CongruenceSubgroup.mem_conjGLPos'","line":220,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.mem_conjGLPos'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.mem_conjGLPos'\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">mem_conjGLPos'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/GeneralLinearGroup/Defs.html#Matrix.GLPos\">Matrix.GLPos</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.conjGLPos\">conjGLPos</a> <span class=\"fn\">Γ</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">y</span> ∈ <span class=\"fn\">Γ</span>, <span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L215-L218","name":"CongruenceSubgroup.mem_conjGLPos","line":215,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.mem_conjGLPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.mem_conjGLPos\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">mem_conjGLPos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/GeneralLinearGroup/Defs.html#Matrix.GLPos\">Matrix.GLPos</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.conjGLPos\">conjGLPos</a> <span class=\"fn\">Γ</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">y</span> ∈ <span class=\"fn\">Γ</span>, <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L211-L213","name":"CongruenceSubgroup.conjGLPos","line":211,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.conjGLPos","doc":"The subgroup `SL(2, ℤ) ∩ g⁻¹ Γ g`, for `Γ` a subgroup of `SL(2, ℤ)` and `g in GL(2, ℝ)⁺`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.conjGLPos\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">conjGLPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/GeneralLinearGroup/Defs.html#Matrix.GLPos\">Matrix.GLPos</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L202-L203","name":"CongruenceSubgroup.instFiniteIndexGamma1","line":202,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.instFiniteIndexGamma1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.instFiniteIndexGamma1\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">instFiniteIndexGamma1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1\">Gamma1</a> <span class=\"fn\">N</span>)</span>.<a href=\"./Mathlib/GroupTheory/Index.html#Subgroup.FiniteIndex\">FiniteIndex</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L199-L200","name":"CongruenceSubgroup.instFiniteIndexGamma0","line":199,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.instFiniteIndexGamma0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.instFiniteIndexGamma0\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">instFiniteIndexGamma0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">Gamma0</a> <span class=\"fn\">N</span>)</span>.<a href=\"./Mathlib/GroupTheory/Index.html#Subgroup.FiniteIndex\">FiniteIndex</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L193-L197","name":"CongruenceSubgroup.IsCongruenceSubgroup.finiteIndex","line":193,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup.finiteIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup.finiteIndex\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">IsCongruenceSubgroup</span>.<span class=\"name\">finiteIndex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">IsCongruenceSubgroup</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Γ</span>.<a href=\"./Mathlib/GroupTheory/Index.html#Subgroup.FiniteIndex\">FiniteIndex</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L190-L191","name":"CongruenceSubgroup.Gamma0_is_congruence","line":190,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0_is_congruence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0_is_congruence\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma0_is_congruence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">IsCongruenceSubgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">Gamma0</a> <span class=\"fn\">N</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L186-L188","name":"CongruenceSubgroup.Gamma1_is_congruence","line":186,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_is_congruence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_is_congruence\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma1_is_congruence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">IsCongruenceSubgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1\">Gamma1</a> <span class=\"fn\">N</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L183-L184","name":"CongruenceSubgroup.Gamma_is_cong_sub","line":183,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_is_cong_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_is_cong_sub\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma_is_cong_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">IsCongruenceSubgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">Gamma</a> <span class=\"fn\">N</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L178-L181","name":"CongruenceSubgroup.isCongruenceSubgroup_trans","line":178,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.isCongruenceSubgroup_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.isCongruenceSubgroup_trans\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">isCongruenceSubgroup_trans</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H </span><span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">IsCongruenceSubgroup</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">IsCongruenceSubgroup</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L173-L176","name":"CongruenceSubgroup.IsCongruenceSubgroup","line":173,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup","doc":"A congruence subgroup is a subgroup of `SL(2, ℤ)` which contains some `Gamma N` for some\n`N ≠ 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">IsCongruenceSubgroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L166-L169","name":"CongruenceSubgroup.Gamma1_in_Gamma0","line":166,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_in_Gamma0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_in_Gamma0\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma1_in_Gamma0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1\">Gamma1</a> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">Gamma0</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L145-L164","name":"CongruenceSubgroup.Gamma1_mem","line":145,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_mem\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma1_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1\">Gamma1</a> <span class=\"fn\">N</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">A</span></span> <span class=\"fn\">0</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">A</span></span> <span class=\"fn\">1</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">A</span></span> <span class=\"fn\">1</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L140-L143","name":"CongruenceSubgroup.Gamma1","line":140,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1","doc":"The congruence subgroup `Gamma1` of `SL(2, ℤ)` consisting of matrices\nwhose bottom row is congruent to `(0,1)` modulo `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L122-L138","name":"CongruenceSubgroup.Gamma1_to_Gamma0_mem","line":122,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_to_Gamma0_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_to_Gamma0_mem\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma1_to_Gamma0_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">Gamma0</a> <span class=\"fn\">N</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1'\">Gamma1'</a> <span class=\"fn\">N</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">A</span></span></span> <span class=\"fn\">0</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">A</span></span></span> <span class=\"fn\">1</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">A</span></span></span> <span class=\"fn\">1</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L118-L120","name":"CongruenceSubgroup.Gamma1_mem'","line":118,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_mem'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_mem'\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma1_mem'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">Gamma0</a> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1'\">Gamma1'</a> <span class=\"fn\">N</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0Map\">Gamma0Map</a> <span class=\"fn\">N</span>)</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L113-L116","name":"CongruenceSubgroup.Gamma1'","line":113,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1'","doc":"The congruence subgroup `Gamma1` (as a subgroup of `Gamma0`) of matrices whose bottom\nrow is congruent to `(0, 1)` modulo `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1'\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma1'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">Gamma0</a> <span class=\"fn\">N</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L103-L111","name":"CongruenceSubgroup.Gamma0Map","line":103,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0Map","doc":"The group homomorphism from `CongruenceSubgroup.Gamma0` to `ZMod N` given by\nmapping a matrix to its lower right-hand entry. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0Map\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma0Map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">Gamma0</a> <span class=\"fn\">N</span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L99-L101","name":"CongruenceSubgroup.Gamma0_mem","line":99,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0_mem\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma0_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">Gamma0</a> <span class=\"fn\">N</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">A</span></span> <span class=\"fn\">1</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L79-L97","name":"CongruenceSubgroup.Gamma0","line":79,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0","doc":"The congruence subgroup of `SL(2, ℤ)` of matrices whose lower left-hand entry reduces to zero\nmodulo `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L77-L77","name":"CongruenceSubgroup.instFiniteIndexGamma","line":77,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.instFiniteIndexGamma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.instFiniteIndexGamma\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">instFiniteIndexGamma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">Gamma</a> <span class=\"fn\">N</span>)</span>.<a href=\"./Mathlib/GroupTheory/Index.html#Subgroup.FiniteIndex\">FiniteIndex</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L69-L75","name":"CongruenceSubgroup.ModularGroup_T_pow_mem_Gamma","line":69,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.ModularGroup_T_pow_mem_Gamma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.ModularGroup_T_pow_mem_Gamma\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">ModularGroup_T_pow_mem_Gamma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N </span><span class=\"fn\">M</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hNM</span> : <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.T\">ModularGroup.T</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">Gamma</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L67-L67","name":"CongruenceSubgroup.Gamma_zero_bot","line":67,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_zero_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_zero_bot\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma_zero_bot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">Gamma</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L64-L65","name":"CongruenceSubgroup.mem_Gamma_one","line":64,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.mem_Gamma_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.mem_Gamma_one\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">mem_Gamma_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">Gamma</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L60-L62","name":"CongruenceSubgroup.Gamma_one_top","line":60,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_one_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_one_top\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma_one_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">Gamma</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L57-L58","name":"CongruenceSubgroup.Gamma_normal","line":57,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_normal\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma_normal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">Gamma</a> <span class=\"fn\">N</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L44-L55","name":"CongruenceSubgroup.Gamma_mem","line":44,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_mem\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">Gamma</a> <span class=\"fn\">N</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">γ</span></span> <span class=\"fn\">0</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">γ</span></span> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">γ</span></span> <span class=\"fn\">1</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">γ</span></span> <span class=\"fn\">1</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L41-L42","name":"CongruenceSubgroup.Gamma_mem'","line":41,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_mem'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_mem'\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma_mem'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">Gamma</a> <span class=\"fn\">N</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup.map\">Matrix.SpecialLinearGroup.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#Int.castRingHom\">Int.castRingHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">N</span>)</span>)</span>)</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L39-L39","name":"CongruenceSubgroup.«termΓ(_)»","line":39,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.«termΓ(_)»","doc":"The full level `N` congruence subgroup of `SL(2, ℤ)` of matrices that reduce to the identity\nmodulo `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.«termΓ(_)»\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">«termΓ(_)»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L34-L37","name":"CongruenceSubgroup.Gamma","line":34,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma","doc":"The full level `N` congruence subgroup of `SL(2, ℤ)` of matrices that reduce to the identity\nmodulo `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L27-L30","name":"SL_reduction_mod_hom_val","line":27,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#SL_reduction_mod_hom_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#SL_reduction_mod_hom_val\"><span class=\"name\">SL_reduction_mod_hom_val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup.map\">Matrix.SpecialLinearGroup.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#Int.castRingHom\">Int.castRingHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">N</span>)</span>)</span>)</span> <span class=\"fn\">γ</span>)</span></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">γ</span></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></div></div>"}]}