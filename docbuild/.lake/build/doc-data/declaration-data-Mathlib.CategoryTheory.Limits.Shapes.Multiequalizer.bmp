{"name":"Mathlib.CategoryTheory.Limits.Shapes.Multiequalizer","instances":[{"typeNames":["CategoryTheory.Limits.WalkingMulticospan"],"name":"CategoryTheory.Limits.WalkingMulticospan.instInhabitedOfL","className":"Inhabited"},{"typeNames":["CategoryTheory.Limits.WalkingMulticospan.Hom"],"name":"CategoryTheory.Limits.WalkingMulticospan.instInhabitedHom","className":"Inhabited"},{"typeNames":["CategoryTheory.Limits.WalkingMulticospan"],"name":"CategoryTheory.Limits.WalkingMulticospan.instSmallCategory","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Limits.WalkingMultispan"],"name":"CategoryTheory.Limits.WalkingMultispan.instInhabitedOfL","className":"Inhabited"},{"typeNames":["CategoryTheory.Limits.WalkingMultispan.Hom"],"name":"CategoryTheory.Limits.WalkingMultispan.instInhabitedHom","className":"Inhabited"},{"typeNames":["CategoryTheory.Limits.WalkingMultispan"],"name":"CategoryTheory.Limits.WalkingMultispan.instSmallCategory","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Limits.MulticospanIndex.fstPiMap","CategoryTheory.Limits.MulticospanIndex.sndPiMap"],"name":"CategoryTheory.Limits.Multiequalizer.instHasEqualizerFstPiMapSndPiMap","className":"CategoryTheory.Limits.HasLimit"},{"typeNames":["CategoryTheory.Limits.Multiequalizer.ιPi"],"name":"CategoryTheory.Limits.Multiequalizer.instMonoιPi","className":"CategoryTheory.Mono"},{"typeNames":["CategoryTheory.Limits.MultispanIndex.fstSigmaMap","CategoryTheory.Limits.MultispanIndex.sndSigmaMap"],"name":"CategoryTheory.Limits.Multicoequalizer.instHasCoequalizerFstSigmaMapSndSigmaMap","className":"CategoryTheory.Limits.HasColimit"},{"typeNames":["CategoryTheory.Limits.Multicoequalizer.sigmaπ"],"name":"CategoryTheory.Limits.Multicoequalizer.instEpiSigmaπ","className":"CategoryTheory.Epi"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Shapes.Products","Mathlib.CategoryTheory.Limits.Shapes.Equalizers","Mathlib.CategoryTheory.Limits.ConeCategory"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L983-L994","name":"CategoryTheory.Limits.Multicofork.isColimitToLinearOrder","line":983,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.isColimitToLinearOrder","doc":"If `ι` is a linearly ordered type, `I : MultispanIndex (.prod ι) C`, and\n`c` a colimit multicofork for `I`, then `c.toLinearOrder` is a colimit\nmulticofork for `I.toLinearOrder`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.isColimitToLinearOrder\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">isColimitToLinearOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">IsColimit</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct\">SymmStruct</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">IsColimit</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.toLinearOrder\">toLinearOrder</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L969-L981","name":"CategoryTheory.Limits.Multicofork.ofLinearOrder","line":969,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofLinearOrder","doc":"The multicofork for `I : MultispanIndex (.prod ι) C` deduced from\na multicofork for `I.toLinearOrder` when `ι` is linearly ordered\nand `I` is symmetric. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofLinearOrder\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">ofLinearOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder\">toLinearOrder</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct\">SymmStruct</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L964-L967","name":"CategoryTheory.Limits.Multicofork.toLinearOrder","line":964,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.toLinearOrder","doc":"The multicofork for `I.toLinearOrder` deduced from a multicofork\nfor `I : MultispanIndex (.prod ι) C` when `ι` is linearly ordered. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.toLinearOrder\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">toLinearOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder\">toLinearOrder</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L950-L950","name":"CategoryTheory.Limits.MultispanIndex.toLinearOrderMultispanIso_inv_app","line":950,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrderMultispanIso_inv_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrderMultispanIso_inv_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">toLinearOrderMultispanIso_inv_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">MultispanShape.ofLinearOrder</a> <span class=\"fn\">ι</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrderMultispanIso\">toLinearOrderMultispanIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(match <span class=\"fn\">X</span> with\n    | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">WalkingMultispan.left</a> <span class=\"fn\">a</span></span> =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">Iso.refl</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <span class=\"fn\">↑<span class=\"fn\">a</span></span>)</span></span>\n    | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">WalkingMultispan.right</a> <span class=\"fn\">a</span></span> =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">Iso.refl</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">a</span>)</span></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L950-L950","name":"CategoryTheory.Limits.MultispanIndex.toLinearOrderMultispanIso_hom_app","line":950,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrderMultispanIso_hom_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrderMultispanIso_hom_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">toLinearOrderMultispanIso_hom_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">MultispanShape.ofLinearOrder</a> <span class=\"fn\">ι</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrderMultispanIso\">toLinearOrderMultispanIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(match <span class=\"fn\">X</span> with\n    | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">WalkingMultispan.left</a> <span class=\"fn\">a</span></span> =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">Iso.refl</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <span class=\"fn\">↑<span class=\"fn\">a</span></span>)</span></span>\n    | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">WalkingMultispan.right</a> <span class=\"fn\">a</span></span> =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">Iso.refl</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">a</span>)</span></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L946-L956","name":"CategoryTheory.Limits.MultispanIndex.toLinearOrderMultispanIso","line":946,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrderMultispanIso","doc":"Given a linearly ordered type `ι` and `I : MultispanIndex (.prod ι) C`,\nthis is the isomorphism of functors between\n`WalkingMultispan.inclusionOfLinearOrder ι ⋙ I.multispan`\nand `I.toLinearOrder.multispan`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrderMultispanIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">toLinearOrderMultispanIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.inclusionOfLinearOrder\">WalkingMultispan.inclusionOfLinearOrder</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder\">toLinearOrder</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L939-L939","name":"CategoryTheory.Limits.MultispanIndex.toLinearOrder_left","line":939,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">toLinearOrder_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">MultispanShape.ofLinearOrder</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder\">toLinearOrder</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <span class=\"fn\">↑<span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L939-L939","name":"CategoryTheory.Limits.MultispanIndex.toLinearOrder_snd","line":939,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder_snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">toLinearOrder_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">MultispanShape.ofLinearOrder</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder\">toLinearOrder</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">↑<span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L939-L939","name":"CategoryTheory.Limits.MultispanIndex.toLinearOrder_right","line":939,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">toLinearOrder_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">MultispanShape.ofLinearOrder</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder\">toLinearOrder</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L939-L939","name":"CategoryTheory.Limits.MultispanIndex.toLinearOrder_fst","line":939,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder_fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">toLinearOrder_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">MultispanShape.ofLinearOrder</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder\">toLinearOrder</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">↑<span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L937-L944","name":"CategoryTheory.Limits.MultispanIndex.toLinearOrder","line":937,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder","doc":"The multispan index for `MultispanShape.ofLinearOrder ι` deduced from\na multispan index for `MultispanShape.prod ι` when `ι` is linearly ordered. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toLinearOrder\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">toLinearOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">MultispanShape.ofLinearOrder</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L933-L933","name":"CategoryTheory.Limits.MultispanIndex.SymmStruct.iso_hom_snd_assoc","line":933,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.iso_hom_snd_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.iso_hom_snd_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">SymmStruct</span>.<span class=\"name\">iso_hom_snd_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct\">SymmStruct</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.iso\">iso</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L933-L933","name":"CategoryTheory.Limits.MultispanIndex.SymmStruct.iso_hom_fst_assoc","line":933,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.iso_hom_fst_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.iso_hom_fst_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">SymmStruct</span>.<span class=\"name\">iso_hom_fst_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct\">SymmStruct</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.iso\">iso</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L931-L931","name":"CategoryTheory.Limits.MultispanIndex.SymmStruct.fst_eq_snd","line":931,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.fst_eq_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.fst_eq_snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">SymmStruct</span>.<span class=\"name\">fst_eq_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct\">SymmStruct</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L930-L930","name":"CategoryTheory.Limits.MultispanIndex.SymmStruct.iso_hom_snd","line":930,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.iso_hom_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.iso_hom_snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">SymmStruct</span>.<span class=\"name\">iso_hom_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct\">SymmStruct</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.iso\">iso</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L929-L929","name":"CategoryTheory.Limits.MultispanIndex.SymmStruct.iso_hom_fst","line":929,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.iso_hom_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.iso_hom_fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">SymmStruct</span>.<span class=\"name\">iso_hom_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct\">SymmStruct</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.iso\">iso</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L928-L928","name":"CategoryTheory.Limits.MultispanIndex.SymmStruct.iso","line":928,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.iso","doc":"the symmetry isomorphism "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.iso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">SymmStruct</span>.<span class=\"name\">iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct\">SymmStruct</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L926-L926","name":"CategoryTheory.Limits.MultispanIndex.SymmStruct.mk","line":926,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">SymmStruct</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iso</span> : <span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iso_hom_fst</span> : <span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">iso</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iso_hom_snd</span> : <span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">iso</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fst_eq_snd</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct\">SymmStruct</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L923-L931","name":"CategoryTheory.Limits.MultispanIndex.SymmStruct","line":923,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct","doc":"Structure expressing a symmetry of `I : MultispanIndex (.prod ι) C` which\nallows to compare the corresponding multicoequalizer to the multicoequalizer\nof `I.toLinearOrder`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.SymmStruct\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">SymmStruct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max v w)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L908-L908","name":"CategoryTheory.Limits.WalkingMultispan.inclusionOfLinearOrder_map","line":908,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.inclusionOfLinearOrder_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.inclusionOfLinearOrder_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">inclusionOfLinearOrder_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">MultispanShape.ofLinearOrder</a> <span class=\"fn\">ι</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.inclusionOfLinearOrder\">inclusionOfLinearOrder</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">x</span>, <span class=\"fn\">y</span>, <span class=\"fn\">f</span> with\n  | <span class=\"fn\">x</span>, <span class=\"fn\">.(<span class=\"fn\">x</span>)</span>, <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.id\">Hom.id</a> <span class=\"fn\">.(<span class=\"fn\">x</span>)</span></span> =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a>\n      <span class=\"fn\">(match <span class=\"fn\">x</span> with\n      | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">left</a> <span class=\"fn\">a</span></span> =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">left</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span>\n      | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">right</a> <span class=\"fn\">b</span></span> =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">right</a> <span class=\"fn\">b</span></span>)</span></span>\n  | <span class=\"fn\">.(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">left</a> <span class=\"fn\">b</span></span>)</span>, <span class=\"fn\">.(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">right</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">MultispanShape.ofLinearOrder</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span>)</span>, <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.fst\">Hom.fst</a> <span class=\"fn\">b</span></span> =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.fst\">Hom.fst</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span>\n  | <span class=\"fn\">.(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">left</a> <span class=\"fn\">b</span></span>)</span>, <span class=\"fn\">.(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">right</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">MultispanShape.ofLinearOrder</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span>)</span>, <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.snd\">Hom.snd</a> <span class=\"fn\">b</span></span> =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.snd\">Hom.snd</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L908-L908","name":"CategoryTheory.Limits.WalkingMultispan.inclusionOfLinearOrder_obj","line":908,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.inclusionOfLinearOrder_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.inclusionOfLinearOrder_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">inclusionOfLinearOrder_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">MultispanShape.ofLinearOrder</a> <span class=\"fn\">ι</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.inclusionOfLinearOrder\">inclusionOfLinearOrder</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">x</span> with\n  | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">left</a> <span class=\"fn\">a</span></span> =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">left</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span>\n  | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">right</a> <span class=\"fn\">b</span></span> =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">right</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L907-L915","name":"CategoryTheory.Limits.WalkingMultispan.inclusionOfLinearOrder","line":907,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.inclusionOfLinearOrder","doc":"The inclusion functor `WalkingMultispan (.ofLinearOrder ι) ⥤ WalkingMultispan (.prod ι)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.inclusionOfLinearOrder\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">inclusionOfLinearOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">MultispanShape.ofLinearOrder</a> <span class=\"fn\">ι</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">MultispanShape.prod</a> <span class=\"fn\">ι</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L901-L901","name":"CategoryTheory.Limits.Multicoequalizer.instEpiSigmaπ","line":901,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.instEpiSigmaπ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.instEpiSigmaπ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">instEpiSigmaπ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">Epi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.sigmaπ\">sigmaπ</a> <span class=\"fn\">I</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L893-L893","name":"CategoryTheory.Limits.Multicoequalizer.ι_sigmaπ_assoc","line":893,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.ι_sigmaπ_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.ι_sigmaπ_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">ι_sigmaπ_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multicoequalizer\">multicoequalizer</a> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">Sigma.ι</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.sigmaπ\">sigmaπ</a> <span class=\"fn\">I</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L893-L899","name":"CategoryTheory.Limits.Multicoequalizer.ι_sigmaπ","line":893,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.ι_sigmaπ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.ι_sigmaπ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">ι_sigmaπ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">Sigma.ι</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.sigmaπ\">sigmaπ</a> <span class=\"fn\">I</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L889-L891","name":"CategoryTheory.Limits.Multicoequalizer.sigmaπ","line":889,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.sigmaπ","doc":"The canonical projection `∐ I.right ⟶ multicoequalizer I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.sigmaπ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">sigmaπ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">∐</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multicoequalizer\">multicoequalizer</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L882-L887","name":"CategoryTheory.Limits.Multicoequalizer.isoCoequalizer","line":882,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.isoCoequalizer","doc":"The multicoequalizer is isomorphic to the coequalizer of `∐ I.left ⇉ ∐ I.right`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.isoCoequalizer\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">isoCoequalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multicoequalizer\">multicoequalizer</a> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.coequalizer\">coequalizer</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L877-L880","name":"CategoryTheory.Limits.Multicoequalizer.instHasCoequalizerFstSigmaMapSndSigmaMap","line":877,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.instHasCoequalizerFstSigmaMapSndSigmaMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.instHasCoequalizerFstSigmaMapSndSigmaMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">instHasCoequalizerFstSigmaMapSndSigmaMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">HasCoequalizer</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L866-L866","name":"CategoryTheory.Limits.Multicoequalizer.hom_ext_iff","line":866,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.hom_ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multicoequalizer\">multicoequalizer</a> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">W</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L866-L873","name":"CategoryTheory.Limits.Multicoequalizer.hom_ext","line":866,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.hom_ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multicoequalizer\">multicoequalizer</a> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">W</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L860-L860","name":"CategoryTheory.Limits.Multicoequalizer.π_desc_assoc","line":860,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π_desc_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π_desc_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">π_desc_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h✝</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.desc\">desc</a> <span class=\"fn\">I</span> <span class=\"fn\">W</span> <span class=\"fn\">k</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">h✝</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">h✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L860-L864","name":"CategoryTheory.Limits.Multicoequalizer.π_desc","line":860,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π_desc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π_desc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">π_desc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.desc\">desc</a> <span class=\"fn\">I</span> <span class=\"fn\">W</span> <span class=\"fn\">k</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L855-L858","name":"CategoryTheory.Limits.Multicoequalizer.desc","line":855,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.desc","doc":"Construct a morphism from the multicoequalizer from its universal property. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.desc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">desc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multicoequalizer\">multicoequalizer</a> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">W</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L850-L850","name":"CategoryTheory.Limits.Multicoequalizer.condition_assoc","line":850,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.condition_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.condition_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">condition_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multicoequalizer\">multicoequalizer</a> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L850-L853","name":"CategoryTheory.Limits.Multicoequalizer.condition","line":850,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.condition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.condition\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">condition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L845-L848","name":"CategoryTheory.Limits.Multicoequalizer.multicofork_ι_app_right'","line":845,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.multicofork_ι_app_right'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.multicofork_ι_app_right'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">multicofork_ι_app_right'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit.ι\">colimit.ι</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">WalkingMultispan.right</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L841-L843","name":"CategoryTheory.Limits.Multicoequalizer.multicofork_ι_app_right","line":841,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.multicofork_ι_app_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.multicofork_ι_app_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">multicofork_ι_app_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.multicofork\">multicofork</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.ι\">ι</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">WalkingMultispan.right</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L836-L838","name":"CategoryTheory.Limits.Multicoequalizer.multicofork_π","line":836,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.multicofork_π","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.multicofork_π\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">multicofork_π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.multicofork\">multicofork</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\">π</a> <span class=\"fn\">I</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L832-L834","name":"CategoryTheory.Limits.Multicoequalizer.multicofork","line":832,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.multicofork","doc":"The multicofork associated to the multicoequalizer. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.multicofork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">multicofork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L828-L830","name":"CategoryTheory.Limits.Multicoequalizer.π","line":828,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π","doc":"The canonical map from the multiequalizer to the objects on the left. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicoequalizer.π\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicoequalizer</span>.<span class=\"name\">π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multicoequalizer\">multicoequalizer</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L820-L820","name":"CategoryTheory.Limits.Multiequalizer.instMonoιPi","line":820,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.instMonoιPi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.instMonoιPi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">instMonoιPi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">Mono</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ιPi\">ιPi</a> <span class=\"fn\">I</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L815-L815","name":"CategoryTheory.Limits.Multiequalizer.ιPi_π_assoc","line":815,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ιPi_π_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ιPi_π_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">ιPi_π_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ιPi\">ιPi</a> <span class=\"fn\">I</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Pi.π</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\">ι</a> <span class=\"fn\">I</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L815-L818","name":"CategoryTheory.Limits.Multiequalizer.ιPi_π","line":815,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ιPi_π","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ιPi_π\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">ιPi_π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ιPi\">ιPi</a> <span class=\"fn\">I</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Pi.π</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\">ι</a> <span class=\"fn\">I</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L811-L813","name":"CategoryTheory.Limits.Multiequalizer.ιPi","line":811,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ιPi","doc":"The canonical injection `multiequalizer I ⟶ ∏ᶜ I.left`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ιPi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">ιPi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multiequalizer\">multiequalizer</a> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L806-L809","name":"CategoryTheory.Limits.Multiequalizer.isoEqualizer","line":806,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.isoEqualizer","doc":"The multiequalizer is isomorphic to the equalizer of `∏ᶜ I.left ⇉ ∏ᶜ I.right`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.isoEqualizer\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">isoEqualizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multiequalizer\">multiequalizer</a> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.equalizer\">equalizer</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L803-L804","name":"CategoryTheory.Limits.Multiequalizer.instHasEqualizerFstPiMapSndPiMap","line":803,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.instHasEqualizerFstPiMapSndPiMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.instHasEqualizerFstPiMapSndPiMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">instHasEqualizerFstPiMapSndPiMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasEqualizer\">HasEqualizer</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L796-L796","name":"CategoryTheory.Limits.Multiequalizer.hom_ext_iff","line":796,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.hom_ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multiequalizer\">multiequalizer</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">i</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\">ι</a> <span class=\"fn\">I</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">j</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\">ι</a> <span class=\"fn\">I</span> <span class=\"fn\">a</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L796-L799","name":"CategoryTheory.Limits.Multiequalizer.hom_ext","line":796,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.hom_ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multiequalizer\">multiequalizer</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">i</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\">ι</a> <span class=\"fn\">I</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">j</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\">ι</a> <span class=\"fn\">I</span> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L790-L790","name":"CategoryTheory.Limits.Multiequalizer.lift_ι_assoc","line":790,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.lift_ι_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.lift_ι_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">lift_ι_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>) → <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h✝</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.lift\">lift</a> <span class=\"fn\">I</span> <span class=\"fn\">W</span> <span class=\"fn\">k</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\">ι</a> <span class=\"fn\">I</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">h✝</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">h✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L790-L794","name":"CategoryTheory.Limits.Multiequalizer.lift_ι","line":790,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.lift_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.lift_ι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">lift_ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>) → <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.lift\">lift</a> <span class=\"fn\">I</span> <span class=\"fn\">W</span> <span class=\"fn\">k</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\">ι</a> <span class=\"fn\">I</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L785-L788","name":"CategoryTheory.Limits.Multiequalizer.lift","line":785,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.lift","doc":"Construct a morphism to the multiequalizer from its universal property. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.lift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>) → <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multiequalizer\">multiequalizer</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L780-L780","name":"CategoryTheory.Limits.Multiequalizer.condition_assoc","line":780,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.condition_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.condition_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">condition_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\">ι</a> <span class=\"fn\">I</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\">ι</a> <span class=\"fn\">I</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L780-L783","name":"CategoryTheory.Limits.Multiequalizer.condition","line":780,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.condition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.condition\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">condition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\">ι</a> <span class=\"fn\">I</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\">ι</a> <span class=\"fn\">I</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L775-L778","name":"CategoryTheory.Limits.Multiequalizer.multifork_π_app_left","line":775,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.multifork_π_app_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.multifork_π_app_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">multifork_π_app_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.multifork\">multifork</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.π\">π</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.left\">WalkingMulticospan.left</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\">ι</a> <span class=\"fn\">I</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L771-L773","name":"CategoryTheory.Limits.Multiequalizer.multifork_ι","line":771,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.multifork_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.multifork_ι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">multifork_ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.multifork\">multifork</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\">ι</a> <span class=\"fn\">I</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L767-L769","name":"CategoryTheory.Limits.Multiequalizer.multifork","line":767,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.multifork","doc":"The multifork associated to the multiequalizer. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.multifork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">multifork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L763-L765","name":"CategoryTheory.Limits.Multiequalizer.ι","line":763,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι","doc":"The canonical map from the multiequalizer to the objects on the left. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multiequalizer.ι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multiequalizer</span>.<span class=\"name\">ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multiequalizer\">multiequalizer</a> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L754-L757","name":"CategoryTheory.Limits.multicoequalizer","line":754,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multicoequalizer","doc":"The multiecoqualizer of `I : MultispanIndex J C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multicoequalizer\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">multicoequalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">HasMulticoequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L749-L752","name":"CategoryTheory.Limits.HasMulticoequalizer","line":749,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer","doc":"For `I : MultispanIndex J C`, we say that it has a multicoequalizer if\nthe associated multicospan has a limit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">HasMulticoequalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L744-L747","name":"CategoryTheory.Limits.multiequalizer","line":744,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multiequalizer","doc":"The multiequalizer of `I : MulticospanIndex J C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.multiequalizer\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">multiequalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\">HasMultiequalizer</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L737-L740","name":"CategoryTheory.Limits.HasMultiequalizer","line":737,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer","doc":"For `I : MulticospanIndex J C`, we say that it has a multiequalizer if the associated\nmulticospan has a limit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMultiequalizer\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">HasMultiequalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L718-L718","name":"CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork_counitIso","line":718,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork_counitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork_counitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">multicoforkEquivSigmaCofork_counitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork\">multicoforkEquivSigmaCofork</a></span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatIso.html#CategoryTheory.NatIso.ofComponents\">NatIso.ofComponents</a>\n    <span class=\"fn\">(fun (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork\">Cofork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span></span>) =&gt;\n      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork.ext\">Cofork.ext</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">Iso.refl</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ofSigmaCoforkFunctor\">ofSigmaCoforkFunctor</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toSigmaCoforkFunctor\">toSigmaCoforkFunctor</a></span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span>)</span> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L718-L718","name":"CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork_functor","line":718,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">multicoforkEquivSigmaCofork_functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork\">multicoforkEquivSigmaCofork</a></span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toSigmaCoforkFunctor\">toSigmaCoforkFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L718-L718","name":"CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork_inverse","line":718,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork_inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">multicoforkEquivSigmaCofork_inverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork\">multicoforkEquivSigmaCofork</a></span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ofSigmaCoforkFunctor\">ofSigmaCoforkFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L718-L718","name":"CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork_unitIso","line":718,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork_unitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork_unitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">multicoforkEquivSigmaCofork_unitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork\">multicoforkEquivSigmaCofork</a></span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatIso.html#CategoryTheory.NatIso.ofComponents\">NatIso.ofComponents</a> <span class=\"fn\">(fun (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocones.ext\">Cocones.ext</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">Iso.refl</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span>)</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L713-L733","name":"CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork","line":713,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork","doc":"The category of multicoforks is equivalent to the category of coforks over `∐ I.left ⇉ ∐ I.right`.\nIt then follows from `CategoryTheory.IsColimit.ofPreservesCoconeInitial` (or `reflects`) that\nit preserves and reflects colimit cocones.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">multicoforkEquivSigmaCofork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork\">Cofork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L698-L698","name":"CategoryTheory.Limits.MultispanIndex.ofSigmaCoforkFunctor_obj","line":698,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ofSigmaCoforkFunctor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ofSigmaCoforkFunctor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">ofSigmaCoforkFunctor_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork\">Cofork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ofSigmaCoforkFunctor\">ofSigmaCoforkFunctor</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork\">Multicofork.ofSigmaCofork</a> <span class=\"fn\">I</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L698-L698","name":"CategoryTheory.Limits.MultispanIndex.ofSigmaCoforkFunctor_map_hom","line":698,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ofSigmaCoforkFunctor_map_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ofSigmaCoforkFunctor_map_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">ofSigmaCoforkFunctor_map_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K₁ </span><span class=\"fn\">K₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork\">Cofork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ofSigmaCoforkFunctor\">ofSigmaCoforkFunctor</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.CoconeMorphism.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.CoconeMorphism.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L697-L711","name":"CategoryTheory.Limits.MultispanIndex.ofSigmaCoforkFunctor","line":697,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ofSigmaCoforkFunctor","doc":"`Multicofork.ofSigmaCofork` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ofSigmaCoforkFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">ofSigmaCoforkFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork\">Cofork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L685-L685","name":"CategoryTheory.Limits.MultispanIndex.toSigmaCoforkFunctor_map_hom","line":685,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toSigmaCoforkFunctor_map_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toSigmaCoforkFunctor_map_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">toSigmaCoforkFunctor_map_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K₁ </span><span class=\"fn\">K₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toSigmaCoforkFunctor\">toSigmaCoforkFunctor</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.CoconeMorphism.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.CoconeMorphism.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L685-L685","name":"CategoryTheory.Limits.MultispanIndex.toSigmaCoforkFunctor_obj","line":685,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toSigmaCoforkFunctor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toSigmaCoforkFunctor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">toSigmaCoforkFunctor_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toSigmaCoforkFunctor\">toSigmaCoforkFunctor</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.toSigmaCofork\">toSigmaCofork</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L684-L695","name":"CategoryTheory.Limits.MultispanIndex.toSigmaCoforkFunctor","line":684,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toSigmaCoforkFunctor","doc":"`Multicofork.toSigmaCofork` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.toSigmaCoforkFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">toSigmaCoforkFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork\">Cofork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L671-L671","name":"CategoryTheory.Limits.Multicofork.ext_inv_hom","line":671,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ext_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ext_inv_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">ext_inv_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">K'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">K'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">i</span></span></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ext\">ext</a> <span class=\"fn\">e</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.CoconeMorphism.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L671-L671","name":"CategoryTheory.Limits.Multicofork.ext_hom_hom","line":671,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ext_hom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ext_hom_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">ext_hom_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">K'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">K'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">i</span></span></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ext\">ext</a> <span class=\"fn\">e</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.CoconeMorphism.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L670-L675","name":"CategoryTheory.Limits.Multicofork.ext","line":670,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ext","doc":"Constructor for isomorphisms between multicoforks. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">K'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">K'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K'</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">i</span></span></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">K</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">K'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L664-L667","name":"CategoryTheory.Limits.Multicofork.ofSigmaCofork_ι_app_right'","line":664,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork_ι_app_right'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork_ι_app_right'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">ofSigmaCofork_ι_app_right'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork\">Cofork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork\">ofSigmaCofork</a> <span class=\"fn\">I</span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">Sigma.ι</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork.π\">π</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L660-L662","name":"CategoryTheory.Limits.Multicofork.ofSigmaCofork_ι_app_right","line":660,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork_ι_app_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork_ι_app_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">ofSigmaCofork_ι_app_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork\">Cofork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork\">ofSigmaCofork</a> <span class=\"fn\">I</span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.ι\">ι</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">WalkingMultispan.right</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">Sigma.ι</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork.π\">π</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L653-L657","name":"CategoryTheory.Limits.Multicofork.ofSigmaCofork_ι_app_left","line":653,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork_ι_app_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork_ι_app_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">ofSigmaCofork_ι_app_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork\">Cofork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork\">ofSigmaCofork</a> <span class=\"fn\">I</span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.ι\">ι</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">WalkingMultispan.left</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">Sigma.ι</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork.π\">π</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L638-L638","name":"CategoryTheory.Limits.Multicofork.ofSigmaCofork_pt","line":638,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">ofSigmaCofork_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork\">Cofork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork\">ofSigmaCofork</a> <span class=\"fn\">I</span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L637-L651","name":"CategoryTheory.Limits.Multicofork.ofSigmaCofork","line":637,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork","doc":"Given a cofork over `∐ I.left ⇉ ∐ I.right`, we may obtain a multicofork. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofSigmaCofork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">ofSigmaCofork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork\">Cofork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L631-L633","name":"CategoryTheory.Limits.Multicofork.toSigmaCofork_π","line":631,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.toSigmaCofork_π","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.toSigmaCofork_π\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">toSigmaCofork_π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.toSigmaCofork\">toSigmaCofork</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork.π\">π</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.desc\">Sigma.desc</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L618-L618","name":"CategoryTheory.Limits.Multicofork.toSigmaCofork_pt","line":618,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.toSigmaCofork_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.toSigmaCofork_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">toSigmaCofork_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.toSigmaCofork\">toSigmaCofork</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L617-L629","name":"CategoryTheory.Limits.Multicofork.toSigmaCofork","line":617,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.toSigmaCofork","doc":"Given a multicofork, we may obtain a cofork over `∐ I.left ⇉ ∐ I.right`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.toSigmaCofork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">toSigmaCofork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork\">Cofork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L612-L612","name":"CategoryTheory.Limits.Multicofork.sigma_condition_assoc","line":612,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.sigma_condition_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.sigma_condition_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">sigma_condition_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.desc\">Sigma.desc</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.desc\">Sigma.desc</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L612-L615","name":"CategoryTheory.Limits.Multicofork.sigma_condition","line":612,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.sigma_condition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.sigma_condition\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">sigma_condition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.desc\">Sigma.desc</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.desc\">Sigma.desc</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L605-L608","name":"CategoryTheory.Limits.Multicofork.IsColimit.hom_ext","line":605,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.IsColimit.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.IsColimit.hom_ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hK</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">IsColimit</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L585-L585","name":"CategoryTheory.Limits.Multicofork.IsColimit.mk_desc","line":585,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.IsColimit.mk_desc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.IsColimit.mk_desc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">mk_desc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">desc</span> : <span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>) → <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fac</span> : <span class=\"fn\">∀ (<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">desc</span> <span class=\"fn\">E</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">uniq</span> : <span class=\"fn\">∀ (<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>) (<span class=\"fn\">m</span> : <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span>), <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">i</span></span>)</span> → <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">desc</span> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.IsColimit.mk\">mk</a> <span class=\"fn\">K</span> <span class=\"fn\">desc</span> <span class=\"fn\">fac</span> <span class=\"fn\">uniq</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.desc\">desc</a></span> <span class=\"fn\">E</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">desc</span> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L584-L602","name":"CategoryTheory.Limits.Multicofork.IsColimit.mk","line":584,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.IsColimit.mk","doc":"This definition provides a convenient way to show that a multicofork is a colimit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.IsColimit.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">IsColimit</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">desc</span> : <span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>) → <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fac</span> : <span class=\"fn\">∀ (<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">desc</span> <span class=\"fn\">E</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">uniq</span> : <span class=\"fn\">∀ (<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>) (<span class=\"fn\">m</span> : <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span>), <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">i</span></span>)</span> → <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">desc</span> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">IsColimit</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L580-L580","name":"CategoryTheory.Limits.Multicofork.condition_assoc","line":580,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.condition_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.condition_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">condition_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L580-L582","name":"CategoryTheory.Limits.Multicofork.condition","line":580,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.condition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.condition\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">condition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L563-L563","name":"CategoryTheory.Limits.Multicofork.ofπ_ι_app","line":563,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofπ_ι_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofπ_ι_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">ofπ_ι_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofπ\">ofπ</a> <span class=\"fn\">I</span> <span class=\"fn\">P</span> <span class=\"fn\">π</span> <span class=\"fn\">w</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.ι\">ι</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">x</span> with\n  | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">WalkingMultispan.left</a> <span class=\"fn\">a</span></span> =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span>)</span></span>\n  | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">WalkingMultispan.right</a> <span class=\"fn\">a</span></span> =&gt; <span class=\"fn\"><span class=\"fn\">π</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L563-L563","name":"CategoryTheory.Limits.Multicofork.ofπ_pt","line":563,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofπ_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofπ_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">ofπ_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofπ\">ofπ</a> <span class=\"fn\">I</span> <span class=\"fn\">P</span> <span class=\"fn\">π</span> <span class=\"fn\">w</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L562-L578","name":"CategoryTheory.Limits.Multicofork.ofπ","line":562,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofπ","doc":"Construct a multicofork using a collection `π` of morphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.ofπ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">ofπ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L558-L558","name":"CategoryTheory.Limits.Multicofork.π_comp_hom_assoc","line":558,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π_comp_hom_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π_comp_hom_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">π_comp_hom_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K₁ </span><span class=\"fn\">K₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">K₂</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₁</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.CoconeMorphism.hom\">hom</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₂</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L558-L560","name":"CategoryTheory.Limits.Multicofork.π_comp_hom","line":558,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π_comp_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π_comp_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">π_comp_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K₁ </span><span class=\"fn\">K₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₁</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.CoconeMorphism.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K₂</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L553-L553","name":"CategoryTheory.Limits.Multicofork.snd_app_right_assoc","line":553,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.snd_app_right_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.snd_app_right_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">snd_app_right_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Const.html#CategoryTheory.Functor.const\">Functor.const</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">J</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">WalkingMultispan.left</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.ι\">ι</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">WalkingMultispan.left</a> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L553-L556","name":"CategoryTheory.Limits.Multicofork.snd_app_right","line":553,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.snd_app_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.snd_app_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">snd_app_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.ι\">ι</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">WalkingMultispan.left</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L548-L551","name":"CategoryTheory.Limits.Multicofork.fst_app_right","line":548,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.fst_app_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.fst_app_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">fst_app_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.ι\">ι</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">WalkingMultispan.left</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L544-L546","name":"CategoryTheory.Limits.Multicofork.π_eq_app_right","line":544,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π_eq_app_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π_eq_app_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">π_eq_app_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.ι\">ι</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">WalkingMultispan.right</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\">π</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L540-L542","name":"CategoryTheory.Limits.Multicofork.π","line":540,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π","doc":"The maps to the cocone point of a multicofork from the objects on the right. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork.π\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span>.<span class=\"name\">π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\">Multicofork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L523-L523","name":"CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork_counitIso","line":523,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork_counitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork_counitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">multiforkEquivPiFork_counitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork\">multiforkEquivPiFork</a></span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatIso.html#CategoryTheory.NatIso.ofComponents\">NatIso.ofComponents</a>\n    <span class=\"fn\">(fun (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork\">Fork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span></span>) =&gt;\n      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork.ext\">Fork.ext</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">Iso.refl</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.ofPiForkFunctor\">ofPiForkFunctor</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.toPiForkFunctor\">toPiForkFunctor</a></span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span>)</span> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L523-L523","name":"CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork_inverse","line":523,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork_inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">multiforkEquivPiFork_inverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork\">multiforkEquivPiFork</a></span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.ofPiForkFunctor\">ofPiForkFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L523-L523","name":"CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork_unitIso","line":523,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork_unitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork_unitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">multiforkEquivPiFork_unitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork\">multiforkEquivPiFork</a></span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatIso.html#CategoryTheory.NatIso.ofComponents\">NatIso.ofComponents</a> <span class=\"fn\">(fun (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cones.ext\">Cones.ext</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">Iso.refl</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span>)</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L523-L523","name":"CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork_functor","line":523,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">multiforkEquivPiFork_functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork\">multiforkEquivPiFork</a></span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.toPiForkFunctor\">toPiForkFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L519-L532","name":"CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork","line":519,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork","doc":"The category of multiforks is equivalent to the category of forks over `∏ᶜ I.left ⇉ ∏ᶜ I.right`.\nIt then follows from `CategoryTheory.IsLimit.ofPreservesConeTerminal` (or `reflects`) that it\npreserves and reflects limit cones.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">multiforkEquivPiFork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork\">Fork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L512-L512","name":"CategoryTheory.Limits.MulticospanIndex.ofPiForkFunctor_obj","line":512,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.ofPiForkFunctor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.ofPiForkFunctor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">ofPiForkFunctor_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork\">Fork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.ofPiForkFunctor\">ofPiForkFunctor</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofPiFork\">Multifork.ofPiFork</a> <span class=\"fn\">I</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L512-L512","name":"CategoryTheory.Limits.MulticospanIndex.ofPiForkFunctor_map_hom","line":512,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.ofPiForkFunctor_map_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.ofPiForkFunctor_map_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">ofPiForkFunctor_map_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K₁ </span><span class=\"fn\">K₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork\">Fork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.ofPiForkFunctor\">ofPiForkFunctor</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.ConeMorphism.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.ConeMorphism.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L511-L517","name":"CategoryTheory.Limits.MulticospanIndex.ofPiForkFunctor","line":511,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.ofPiForkFunctor","doc":"`Multifork.ofPiFork` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.ofPiForkFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">ofPiForkFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork\">Fork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L496-L496","name":"CategoryTheory.Limits.MulticospanIndex.toPiForkFunctor_obj","line":496,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.toPiForkFunctor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.toPiForkFunctor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">toPiForkFunctor_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.toPiForkFunctor\">toPiForkFunctor</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.toPiFork\">toPiFork</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L496-L496","name":"CategoryTheory.Limits.MulticospanIndex.toPiForkFunctor_map_hom","line":496,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.toPiForkFunctor_map_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.toPiForkFunctor_map_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">toPiForkFunctor_map_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K₁ </span><span class=\"fn\">K₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.toPiForkFunctor\">toPiForkFunctor</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.ConeMorphism.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.ConeMorphism.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L495-L509","name":"CategoryTheory.Limits.MulticospanIndex.toPiForkFunctor","line":495,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.toPiForkFunctor","doc":"`Multifork.toPiFork` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.toPiForkFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">toPiForkFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork\">Fork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L483-L486","name":"CategoryTheory.Limits.Multifork.ofPiFork_π_app_right","line":483,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofPiFork_π_app_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofPiFork_π_app_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">ofPiFork_π_app_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork\">Fork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofPiFork\">ofPiFork</a> <span class=\"fn\">I</span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.π\">π</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.right\">WalkingMulticospan.right</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork.ι\">ι</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Pi.π</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <span class=\"fn\">a</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L478-L481","name":"CategoryTheory.Limits.Multifork.ofPiFork_π_app_left","line":478,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofPiFork_π_app_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofPiFork_π_app_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">ofPiFork_π_app_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork\">Fork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofPiFork\">ofPiFork</a> <span class=\"fn\">I</span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork.ι\">ι</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Pi.π</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L463-L463","name":"CategoryTheory.Limits.Multifork.ofPiFork_pt","line":463,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofPiFork_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofPiFork_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">ofPiFork_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork\">Fork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofPiFork\">ofPiFork</a> <span class=\"fn\">I</span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L462-L476","name":"CategoryTheory.Limits.Multifork.ofPiFork","line":462,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofPiFork","doc":"Given a fork over `∏ᶜ I.left ⇉ ∏ᶜ I.right`, we may obtain a multifork. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofPiFork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">ofPiFork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork\">Fork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L456-L458","name":"CategoryTheory.Limits.Multifork.toPiFork_π_app_one","line":456,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.toPiFork_π_app_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.toPiFork_π_app_one\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">toPiFork_π_app_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.toPiFork\">toPiFork</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.π\">π</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair.one\">WalkingParallelPair.one</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.lift\">Pi.lift</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span>)</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L452-L454","name":"CategoryTheory.Limits.Multifork.toPiFork_π_app_zero","line":452,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.toPiFork_π_app_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.toPiFork_π_app_zero\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">toPiFork_π_app_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.toPiFork\">toPiFork</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork.ι\">ι</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.lift\">Pi.lift</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L438-L438","name":"CategoryTheory.Limits.Multifork.toPiFork_pt","line":438,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.toPiFork_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.toPiFork_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">toPiFork_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.toPiFork\">toPiFork</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L437-L450","name":"CategoryTheory.Limits.Multifork.toPiFork","line":437,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.toPiFork","doc":"Given a multifork, we may obtain a fork over `∏ᶜ I.left ⇉ ∏ᶜ I.right`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.toPiFork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">toPiFork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork\">Fork</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L432-L432","name":"CategoryTheory.Limits.Multifork.pi_condition_assoc","line":432,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.pi_condition_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.pi_condition_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">pi_condition_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.lift\">Pi.lift</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.lift\">Pi.lift</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L432-L435","name":"CategoryTheory.Limits.Multifork.pi_condition","line":432,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.pi_condition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.pi_condition\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">pi_condition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.lift\">Pi.lift</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span>)</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.lift\">Pi.lift</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span>)</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L422-L422","name":"CategoryTheory.Limits.Multifork.IsLimit.fac_assoc","line":422,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.fac_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.fac_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">fac_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hK</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">IsLimit</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>) → <span class=\"fn\">T</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.lift\">lift</a> <span class=\"fn\">hK</span> <span class=\"fn\">k</span> <span class=\"fn\">hk</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L422-L426","name":"CategoryTheory.Limits.Multifork.IsLimit.fac","line":422,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.fac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.fac\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">fac</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hK</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">IsLimit</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>) → <span class=\"fn\">T</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.lift\">lift</a> <span class=\"fn\">hK</span> <span class=\"fn\">k</span> <span class=\"fn\">hk</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L416-L420","name":"CategoryTheory.Limits.Multifork.IsLimit.lift","line":416,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.lift","doc":"Constructor for morphisms to the point of a limit multifork. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.lift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hK</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">IsLimit</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>) → <span class=\"fn\">T</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">T</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L408-L414","name":"CategoryTheory.Limits.Multifork.IsLimit.hom_ext","line":408,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.hom_ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hK</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">IsLimit</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">T</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L387-L387","name":"CategoryTheory.Limits.Multifork.IsLimit.mk_lift","line":387,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.mk_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.mk_lift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">mk_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lift</span> : <span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>) → <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fac</span> : <span class=\"fn\">∀ (<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">lift</span> <span class=\"fn\">E</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">uniq</span> : <span class=\"fn\">∀ (<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>) (<span class=\"fn\">m</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span>), <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">i</span></span>)</span> → <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">lift</span> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.mk\">mk</a> <span class=\"fn\">K</span> <span class=\"fn\">lift</span> <span class=\"fn\">fac</span> <span class=\"fn\">uniq</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit.lift\">lift</a></span> <span class=\"fn\">E</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">lift</span> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L386-L404","name":"CategoryTheory.Limits.Multifork.IsLimit.mk","line":386,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.mk","doc":"This definition provides a convenient way to show that a multifork is a limit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.IsLimit.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lift</span> : <span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>) → <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fac</span> : <span class=\"fn\">∀ (<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">lift</span> <span class=\"fn\">E</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">uniq</span> : <span class=\"fn\">∀ (<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>) (<span class=\"fn\">m</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span>), <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">i</span></span>)</span> → <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">lift</span> <span class=\"fn\">E</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">IsLimit</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L382-L382","name":"CategoryTheory.Limits.Multifork.condition_assoc","line":382,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.condition_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.condition_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">condition_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L382-L384","name":"CategoryTheory.Limits.Multifork.condition","line":382,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.condition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.condition\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">condition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L367-L367","name":"CategoryTheory.Limits.Multifork.ofι_π_app","line":367,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofι_π_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofι_π_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">ofι_π_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>) → <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofι\">ofι</a> <span class=\"fn\">I</span> <span class=\"fn\">P</span> <span class=\"fn\">ι</span> <span class=\"fn\">w</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.π\">π</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">x</span> with\n  | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.left\">WalkingMulticospan.left</a> <span class=\"fn\">a</span></span> =&gt; <span class=\"fn\"><span class=\"fn\">ι</span> <span class=\"fn\">a</span></span>\n  | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.right\">WalkingMulticospan.right</a> <span class=\"fn\">b</span></span> =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L367-L367","name":"CategoryTheory.Limits.Multifork.ofι_pt","line":367,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofι_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofι_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">ofι_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>) → <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofι\">ofι</a> <span class=\"fn\">I</span> <span class=\"fn\">P</span> <span class=\"fn\">ι</span> <span class=\"fn\">w</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L366-L380","name":"CategoryTheory.Limits.Multifork.ofι","line":366,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofι","doc":"Construct a multifork using a collection `ι` of morphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ofι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">ofι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>) → <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L362-L362","name":"CategoryTheory.Limits.Multifork.hom_comp_ι_assoc","line":362,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.hom_comp_ι_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.hom_comp_ι_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">hom_comp_ι_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K₁ </span><span class=\"fn\">K₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.ConeMorphism.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₂</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₁</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L362-L364","name":"CategoryTheory.Limits.Multifork.hom_comp_ι","line":362,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.hom_comp_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.hom_comp_ι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">hom_comp_ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K₁ </span><span class=\"fn\">K₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.ConeMorphism.hom\">hom</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₂</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K₁</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L356-L356","name":"CategoryTheory.Limits.Multifork.app_right_eq_ι_comp_snd_assoc","line":356,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.app_right_eq_ι_comp_snd_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.app_right_eq_ι_comp_snd_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">app_right_eq_ι_comp_snd_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multicospan\">multicospan</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.right\">WalkingMulticospan.right</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.π\">π</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.right\">WalkingMulticospan.right</a> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L356-L360","name":"CategoryTheory.Limits.Multifork.app_right_eq_ι_comp_snd","line":356,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.app_right_eq_ι_comp_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.app_right_eq_ι_comp_snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">app_right_eq_ι_comp_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.π\">π</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.right\">WalkingMulticospan.right</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L350-L354","name":"CategoryTheory.Limits.Multifork.app_right_eq_ι_comp_fst","line":350,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.app_right_eq_ι_comp_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.app_right_eq_ι_comp_fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">app_right_eq_ι_comp_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.π\">π</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.right\">WalkingMulticospan.right</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L346-L348","name":"CategoryTheory.Limits.Multifork.app_left_eq_ι","line":346,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.app_left_eq_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.app_left_eq_ι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">app_left_eq_ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.π\">π</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.left\">WalkingMulticospan.left</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L342-L344","name":"CategoryTheory.Limits.Multifork.ι","line":342,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι","doc":"The maps from the cone point of a multifork to the objects on the left. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span>.<span class=\"name\">ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Multifork</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L334-L336","name":"CategoryTheory.Limits.Multicofork","line":334,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork","doc":"A multicofork is a cocone over a multispan. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multicofork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multicofork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max (max w w') u) v)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L330-L332","name":"CategoryTheory.Limits.Multifork","line":330,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork","doc":"A multifork is a cone over a multicospan. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Multifork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max (max w w') u) v)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L319-L324","name":"CategoryTheory.Limits.MultispanIndex.parallelPairDiagram","line":319,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.parallelPairDiagram","doc":"Taking the multicoequalizer over the multispan index is equivalent to taking the coequalizer over\nthe two morphsims `∐ I.left ⇉ ∐ I.right`. This is the diagram of the latter.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.parallelPairDiagram\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">parallelPairDiagram</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">WalkingParallelPair</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L315-L315","name":"CategoryTheory.Limits.MultispanIndex.ι_sndSigmaMap_assoc","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ι_sndSigmaMap_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ι_sndSigmaMap_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">ι_sndSigmaMap_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">∐</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">Sigma.ι</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">Sigma.ι</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L315-L317","name":"CategoryTheory.Limits.MultispanIndex.ι_sndSigmaMap","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ι_sndSigmaMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ι_sndSigmaMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">ι_sndSigmaMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">Sigma.ι</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\">sndSigmaMap</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">Sigma.ι</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L311-L311","name":"CategoryTheory.Limits.MultispanIndex.ι_fstSigmaMap_assoc","line":311,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ι_fstSigmaMap_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ι_fstSigmaMap_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">ι_fstSigmaMap_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">∐</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">Sigma.ι</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">Sigma.ι</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L311-L313","name":"CategoryTheory.Limits.MultispanIndex.ι_fstSigmaMap","line":311,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ι_fstSigmaMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.ι_fstSigmaMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">ι_fstSigmaMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">Sigma.ι</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\">fstSigmaMap</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">Sigma.ι</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L307-L309","name":"CategoryTheory.Limits.MultispanIndex.sndSigmaMap","line":307,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap","doc":"The induced map `∐ I.left ⟶ ∐ I.right` via `I.snd`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.sndSigmaMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">sndSigmaMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">∐</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">∐</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L303-L305","name":"CategoryTheory.Limits.MultispanIndex.fstSigmaMap","line":303,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap","doc":"The induced map `∐ I.left ⟶ ∐ I.right` via `I.fst`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fstSigmaMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">fstSigmaMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">∐</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">∐</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L297-L299","name":"CategoryTheory.Limits.MultispanIndex.multispan_map_snd","line":297,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan_map_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan_map_snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">multispan_map_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.snd\">WalkingMultispan.Hom.snd</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L293-L295","name":"CategoryTheory.Limits.MultispanIndex.multispan_map_fst","line":293,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan_map_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan_map_fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">multispan_map_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.fst\">WalkingMultispan.Hom.fst</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L289-L291","name":"CategoryTheory.Limits.MultispanIndex.multispan_obj_right","line":289,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan_obj_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan_obj_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">multispan_obj_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">WalkingMultispan.right</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L285-L287","name":"CategoryTheory.Limits.MultispanIndex.multispan_obj_left","line":285,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan_obj_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan_obj_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">multispan_obj_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">WalkingMultispan.left</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L269-L283","name":"CategoryTheory.Limits.MultispanIndex.multispan","line":269,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan","doc":"The multispan associated to `I : MultispanIndex`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">multispan</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">J</span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L258-L258","name":"CategoryTheory.Limits.MulticospanIndex.parallelPairDiagram_map","line":258,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.parallelPairDiagram_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.parallelPairDiagram_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">parallelPairDiagram_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">WalkingParallelPair</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.parallelPairDiagram\">parallelPairDiagram</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">X✝</span>, <span class=\"fn\">Y✝</span>, <span class=\"fn\">h</span> with\n  | <span class=\"fn\">x</span>, <span class=\"fn\">.(<span class=\"fn\">x</span>)</span>, <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPairHom.id\">WalkingParallelPairHom.id</a> <span class=\"fn\">.(<span class=\"fn\">x</span>)</span></span> =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a>\n      <span class=\"fn\">(match <span class=\"fn\">x</span> with\n      | <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair.zero\">WalkingParallelPair.zero</a> =&gt; <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span>\n      | <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair.one\">WalkingParallelPair.one</a> =&gt; <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span>)</span></span>\n  | .(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair.zero\">WalkingParallelPair.zero</a>), .(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair.one\">WalkingParallelPair.one</a>), <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPairHom.left\">WalkingParallelPairHom.left</a> =&gt; <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span>\n  | .(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair.zero\">WalkingParallelPair.zero</a>), .(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair.one\">WalkingParallelPair.one</a>), <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPairHom.right\">WalkingParallelPairHom.right</a> =&gt; <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L258-L258","name":"CategoryTheory.Limits.MulticospanIndex.parallelPairDiagram_obj","line":258,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.parallelPairDiagram_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.parallelPairDiagram_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">parallelPairDiagram_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">WalkingParallelPair</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.parallelPairDiagram\">parallelPairDiagram</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">x</span> with\n  | <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair.zero\">WalkingParallelPair.zero</a> =&gt; <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span>\n  | <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair.one\">WalkingParallelPair.one</a> =&gt; <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L255-L260","name":"CategoryTheory.Limits.MulticospanIndex.parallelPairDiagram","line":255,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.parallelPairDiagram","doc":"Taking the multiequalizer over the multicospan index is equivalent to taking the equalizer over\nthe two morphisms `∏ᶜ I.left ⇉ ∏ᶜ I.right`. This is the diagram of the latter.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.parallelPairDiagram\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">parallelPairDiagram</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">WalkingParallelPair</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L251-L251","name":"CategoryTheory.Limits.MulticospanIndex.sndPiMap_π_assoc","line":251,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap_π_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap_π_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">sndPiMap_π_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Pi.π</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Pi.π</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L251-L253","name":"CategoryTheory.Limits.MulticospanIndex.sndPiMap_π","line":251,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap_π","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap_π\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">sndPiMap_π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\">sndPiMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Pi.π</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Pi.π</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L247-L247","name":"CategoryTheory.Limits.MulticospanIndex.fstPiMap_π_assoc","line":247,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap_π_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap_π_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">fstPiMap_π_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Pi.π</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Pi.π</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L247-L249","name":"CategoryTheory.Limits.MulticospanIndex.fstPiMap_π","line":247,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap_π","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap_π\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">fstPiMap_π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\">fstPiMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Pi.π</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Pi.π</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L243-L245","name":"CategoryTheory.Limits.MulticospanIndex.sndPiMap","line":243,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap","doc":"The induced map `∏ᶜ I.left ⟶ ∏ᶜ I.right` via `I.snd`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.sndPiMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">sndPiMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L239-L241","name":"CategoryTheory.Limits.MulticospanIndex.fstPiMap","line":239,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap","doc":"The induced map `∏ᶜ I.left ⟶ ∏ᶜ I.right` via `I.fst`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fstPiMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">fstPiMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">HasProduct</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L221-L221","name":"CategoryTheory.Limits.MulticospanIndex.multicospan_obj","line":221,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multicospan_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multicospan_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">multicospan_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multicospan\">multicospan</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">x</span> with\n  | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.left\">WalkingMulticospan.left</a> <span class=\"fn\">a</span></span> =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span>\n  | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.right\">WalkingMulticospan.right</a> <span class=\"fn\">b</span></span> =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L221-L221","name":"CategoryTheory.Limits.MulticospanIndex.multicospan_map","line":221,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multicospan_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multicospan_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">multicospan_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multicospan\">multicospan</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">x</span>, <span class=\"fn\">y</span>, <span class=\"fn\">f</span> with\n  | <span class=\"fn\">x</span>, <span class=\"fn\">.(<span class=\"fn\">x</span>)</span>, <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.id\">WalkingMulticospan.Hom.id</a> <span class=\"fn\">.(<span class=\"fn\">x</span>)</span></span> =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a>\n      <span class=\"fn\">(match <span class=\"fn\">x</span> with\n      | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.left\">WalkingMulticospan.left</a> <span class=\"fn\">a</span></span> =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">a</span></span>\n      | <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.right\">WalkingMulticospan.right</a> <span class=\"fn\">b</span></span> =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <span class=\"fn\">b</span></span>)</span></span>\n  | <span class=\"fn\">.(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.left\">WalkingMulticospan.left</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span>)</span>, <span class=\"fn\">.(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.right\">WalkingMulticospan.right</a> <span class=\"fn\">b</span></span>)</span>, <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.fst\">WalkingMulticospan.Hom.fst</a> <span class=\"fn\">b</span></span> =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">b</span></span>\n  | <span class=\"fn\">.(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.left\">WalkingMulticospan.left</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span>)</span>, <span class=\"fn\">.(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.right\">WalkingMulticospan.right</a> <span class=\"fn\">b</span></span>)</span>, <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.snd\">WalkingMulticospan.Hom.snd</a> <span class=\"fn\">b</span></span> =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L220-L235","name":"CategoryTheory.Limits.MulticospanIndex.multicospan","line":220,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multicospan","doc":"The multicospan associated to `I : MulticospanIndex`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.multicospan\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">multicospan</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L213-L213","name":"CategoryTheory.Limits.MultispanIndex.snd","line":213,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd","doc":"A family of maps from `left a` to `right (J.snd a)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L211-L211","name":"CategoryTheory.Limits.MultispanIndex.fst","line":211,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst","doc":"A family of maps from `left a` to `right (J.fst a)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L209-L209","name":"CategoryTheory.Limits.MultispanIndex.right","line":209,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right","doc":"Right map, from `J.R` to `C` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span> → <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L207-L207","name":"CategoryTheory.Limits.MultispanIndex.left","line":207,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left","doc":"Left map, from `J.L` to `C` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span> → <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L204-L204","name":"CategoryTheory.Limits.MultispanIndex.mk","line":204,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">left</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">right</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fst</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>) → <span class=\"fn\"><span class=\"fn\">left</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">right</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snd</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>) → <span class=\"fn\"><span class=\"fn\">left</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">right</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">MultispanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L202-L213","name":"CategoryTheory.Limits.MultispanIndex","line":202,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex","doc":"This is a structure encapsulating the data necessary to define a `Multispan`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max (max u v) w) w')</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L200-L200","name":"CategoryTheory.Limits.MulticospanIndex.snd","line":200,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd","doc":"A family of maps from `left (J.snd b)` to `right b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L198-L198","name":"CategoryTheory.Limits.MulticospanIndex.fst","line":198,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst","doc":"A family of maps from `left (J.fst b)` to `right b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L196-L196","name":"CategoryTheory.Limits.MulticospanIndex.right","line":196,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right","doc":"Right map, from `J.R` to `C` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span> → <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L194-L194","name":"CategoryTheory.Limits.MulticospanIndex.left","line":194,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left","doc":"Left map, from `J.L` to `C` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span> → <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L191-L191","name":"CategoryTheory.Limits.MulticospanIndex.mk","line":191,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">left</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">right</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fst</span> : <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>) → <span class=\"fn\"><span class=\"fn\">left</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">right</span> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snd</span> : <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>) → <span class=\"fn\"><span class=\"fn\">left</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">right</span> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">MulticospanIndex</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L189-L200","name":"CategoryTheory.Limits.MulticospanIndex","line":189,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex","doc":"This is a structure encapsulating the data necessary to define a `Multicospan`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max (max u v) w) w')</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L183-L185","name":"CategoryTheory.Limits.WalkingMultispan.Hom.comp_eq_comp","line":183,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.comp_eq_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.comp_eq_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp_eq_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.comp\">comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L180-L181","name":"CategoryTheory.Limits.WalkingMultispan.Hom.id_eq_id","line":180,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.id_eq_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.id_eq_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id_eq_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.id\">id</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L169-L178","name":"CategoryTheory.Limits.WalkingMultispan.instSmallCategory","line":169,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.instSmallCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.instSmallCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">instSmallCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">J</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L163-L167","name":"CategoryTheory.Limits.WalkingMultispan.Hom.comp","line":163,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.comp","doc":"Composition of morphisms for `WalkingMultispan`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom\">Hom</a></span> <span class=\"fn\">B</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom\">Hom</a></span> <span class=\"fn\">C</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom\">Hom</a></span> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L160-L161","name":"CategoryTheory.Limits.WalkingMultispan.instInhabitedHom","line":160,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.instInhabitedHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.instInhabitedHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">instInhabitedHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom\">Hom</a></span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L158-L158","name":"CategoryTheory.Limits.WalkingMultispan.Hom.snd","line":158,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">Hom</span>.<span class=\"name\">snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">left</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom\">Hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">right</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">a</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L157-L157","name":"CategoryTheory.Limits.WalkingMultispan.Hom.fst","line":157,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">Hom</span>.<span class=\"name\">fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">left</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom\">Hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">right</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">a</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L156-L156","name":"CategoryTheory.Limits.WalkingMultispan.Hom.id","line":156,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom\">Hom</a></span> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L154-L158","name":"CategoryTheory.Limits.WalkingMultispan.Hom","line":154,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom","doc":"Morphisms for `WalkingMultispan`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.Hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">J</span></span> → <a href=\"./foundational_types.html\">Type</a> (max w w')</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L149-L150","name":"CategoryTheory.Limits.WalkingMultispan.instInhabitedOfL","line":149,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.instInhabitedOfL","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.instInhabitedOfL\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">instInhabitedOfL</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">J</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L139-L141","name":"CategoryTheory.Limits.WalkingMulticospan.Hom.comp_eq_comp","line":139,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.comp_eq_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.comp_eq_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMulticospan</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp_eq_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.comp\">comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L135-L137","name":"CategoryTheory.Limits.WalkingMulticospan.Hom.id_eq_id","line":135,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.id_eq_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.id_eq_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMulticospan</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id_eq_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.id\">id</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L124-L133","name":"CategoryTheory.Limits.WalkingMulticospan.instSmallCategory","line":124,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.instSmallCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.instSmallCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMulticospan</span>.<span class=\"name\">instSmallCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L118-L122","name":"CategoryTheory.Limits.WalkingMulticospan.Hom.comp","line":118,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.comp","doc":"Composition of morphisms for `WalkingMulticospan`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMulticospan</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom\">Hom</a></span> <span class=\"fn\">B</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom\">Hom</a></span> <span class=\"fn\">C</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom\">Hom</a></span> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L115-L116","name":"CategoryTheory.Limits.WalkingMulticospan.instInhabitedHom","line":115,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.instInhabitedHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.instInhabitedHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMulticospan</span>.<span class=\"name\">instInhabitedHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom\">Hom</a></span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L113-L113","name":"CategoryTheory.Limits.WalkingMulticospan.Hom.snd","line":113,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMulticospan</span>.<span class=\"name\">Hom</span>.<span class=\"name\">snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.left\">left</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">b</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom\">Hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.right\">right</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L112-L112","name":"CategoryTheory.Limits.WalkingMulticospan.Hom.fst","line":112,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMulticospan</span>.<span class=\"name\">Hom</span>.<span class=\"name\">fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.left\">left</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">b</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom\">Hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.right\">right</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L111-L111","name":"CategoryTheory.Limits.WalkingMulticospan.Hom.id","line":111,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMulticospan</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom\">Hom</a></span> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L109-L113","name":"CategoryTheory.Limits.WalkingMulticospan.Hom","line":109,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom","doc":"Morphisms for `WalkingMulticospan`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.Hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMulticospan</span>.<span class=\"name\">Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span></span> → <a href=\"./foundational_types.html\">Type</a> (max w w')</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L104-L105","name":"CategoryTheory.Limits.WalkingMulticospan.instInhabitedOfL","line":104,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.instInhabitedOfL","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.instInhabitedOfL\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMulticospan</span>.<span class=\"name\">instInhabitedOfL</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L98-L98","name":"CategoryTheory.Limits.WalkingMultispan.right","line":98,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L97-L97","name":"CategoryTheory.Limits.WalkingMultispan.left","line":97,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span>.<span class=\"name\">left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\">WalkingMultispan</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L95-L98","name":"CategoryTheory.Limits.WalkingMultispan","line":95,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan","doc":"The type underlying the multiecoqualizer diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMultispan</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max w w')</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L93-L93","name":"CategoryTheory.Limits.WalkingMulticospan.right","line":93,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMulticospan</span>.<span class=\"name\">right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L92-L92","name":"CategoryTheory.Limits.WalkingMulticospan.left","line":92,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan.left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMulticospan</span>.<span class=\"name\">left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\">WalkingMulticospan</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L90-L93","name":"CategoryTheory.Limits.WalkingMulticospan","line":90,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan","doc":"The type underlying the multiequalizer diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMulticospan\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">WalkingMulticospan</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max w w')</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L83-L83","name":"CategoryTheory.Limits.MultispanShape.ofLinearOrder_R","line":83,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder_R","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder_R\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">ofLinearOrder_R</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">ofLinearOrder</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ι</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L83-L83","name":"CategoryTheory.Limits.MultispanShape.ofLinearOrder_snd","line":83,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder_snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">ofLinearOrder_snd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">ι</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">ofLinearOrder</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">x</span>)</span>.2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L83-L83","name":"CategoryTheory.Limits.MultispanShape.ofLinearOrder_fst","line":83,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder_fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">ofLinearOrder_fst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">ι</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">ofLinearOrder</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">x</span>)</span>.1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L83-L83","name":"CategoryTheory.Limits.MultispanShape.ofLinearOrder_L","line":83,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder_L","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder_L\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">ofLinearOrder_L</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\">ofLinearOrder</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">ι</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L80-L88","name":"CategoryTheory.Limits.MultispanShape.ofLinearOrder","line":80,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder","doc":"Given a linearly ordered type `ι`, this is the shape of multicoequalizer diagrams\ncorresponding to situations where we want to coequalize two families of maps\n`V ⟨i, j⟩ ⟶ U i` and `V ⟨i, j⟩ ⟶ U j` with `i < j`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.ofLinearOrder\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">ofLinearOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L73-L73","name":"CategoryTheory.Limits.MultispanShape.prod_R","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod_R","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod_R\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">prod_R</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">prod</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ι</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L73-L73","name":"CategoryTheory.Limits.MultispanShape.prod_fst","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod_fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">prod_fst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">prod</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\">fst</a></span> <span class=\"fn\">self</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L73-L73","name":"CategoryTheory.Limits.MultispanShape.prod_L","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod_L","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod_L\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">prod_L</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">prod</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">ι</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L73-L73","name":"CategoryTheory.Limits.MultispanShape.prod_snd","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod_snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">prod_snd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">prod</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\">snd</a></span> <span class=\"fn\">self</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L70-L78","name":"CategoryTheory.Limits.MultispanShape.prod","line":70,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod","doc":"Given a type `ι`, this is the shape of multicoequalizer diagrams corresponding\nto situations where we want to coequalize two families of maps `V ⟨i, j⟩ ⟶ U i`\nand `V ⟨i, j⟩ ⟶ U j` with `i : ι` and `j : ι`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">prod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L68-L68","name":"CategoryTheory.Limits.MultispanShape.snd","line":68,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd","doc":"the second map `L → R` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">snd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span> → <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L66-L66","name":"CategoryTheory.Limits.MultispanShape.fst","line":66,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst","doc":"the first map `L → R` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">fst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\">L</a></span> → <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\">R</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L64-L64","name":"CategoryTheory.Limits.MultispanShape.R","line":64,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R","doc":"the right type "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.R\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">R</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> w'</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L62-L62","name":"CategoryTheory.Limits.MultispanShape.L","line":62,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L","doc":"the left type "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.L\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">L</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> w</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L60-L60","name":"CategoryTheory.Limits.MultispanShape.mk","line":60,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fst </span><span class=\"fn\">snd</span> : <span class=\"fn\"><span class=\"fn\">L</span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\">MultispanShape</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L57-L68","name":"CategoryTheory.Limits.MultispanShape","line":57,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape","doc":"The shape of a multicoequalizer diagram. It involves two types `L` and `R`,\nand two maps `L → R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MultispanShape</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (w + 1) (w' + 1))</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L50-L50","name":"CategoryTheory.Limits.MulticospanShape.prod_L","line":50,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.prod_L","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.prod_L\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanShape</span>.<span class=\"name\">prod_L</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.prod\">prod</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ι</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L50-L50","name":"CategoryTheory.Limits.MulticospanShape.prod_snd","line":50,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.prod_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.prod_snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanShape</span>.<span class=\"name\">prod_snd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.prod\">prod</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">self</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L50-L50","name":"CategoryTheory.Limits.MulticospanShape.prod_fst","line":50,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.prod_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.prod_fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanShape</span>.<span class=\"name\">prod_fst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.prod\">prod</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">self</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L50-L50","name":"CategoryTheory.Limits.MulticospanShape.prod_R","line":50,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.prod_R","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.prod_R\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanShape</span>.<span class=\"name\">prod_R</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.prod\">prod</a> <span class=\"fn\">ι</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">ι</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L47-L55","name":"CategoryTheory.Limits.MulticospanShape.prod","line":47,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.prod","doc":"Given a type `ι`, this is the shape of multiequalizer diagrams corresponding\nto situations where we want to equalize two families of maps `U i ⟶ V ⟨i, j⟩`\nand `U j ⟶ V ⟨i, j⟩` with `i : ι` and `j : ι`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.prod\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanShape</span>.<span class=\"name\">prod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L45-L45","name":"CategoryTheory.Limits.MulticospanShape.snd","line":45,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd","doc":"the second map `R → L` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanShape</span>.<span class=\"name\">snd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span> → <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L43-L43","name":"CategoryTheory.Limits.MulticospanShape.fst","line":43,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst","doc":"the first map `R → L` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanShape</span>.<span class=\"name\">fst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span> → <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L41-L41","name":"CategoryTheory.Limits.MulticospanShape.R","line":41,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R","doc":"the right type "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanShape</span>.<span class=\"name\">R</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> w'</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L39-L39","name":"CategoryTheory.Limits.MulticospanShape.L","line":39,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L","doc":"the left type "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanShape</span>.<span class=\"name\">L</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> w</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L37-L37","name":"CategoryTheory.Limits.MulticospanShape.mk","line":37,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanShape</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fst </span><span class=\"fn\">snd</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">MulticospanShape</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean#L34-L45","name":"CategoryTheory.Limits.MulticospanShape","line":34,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape","doc":"The shape of a multiequalizer diagram. It involves two types `L` and `R`,\nand two maps `R → L`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">MulticospanShape</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (w + 1) (w' + 1))</div></div>"}]}