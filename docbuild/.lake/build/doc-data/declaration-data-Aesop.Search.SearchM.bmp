{"name":"Aesop.Search.SearchM","instances":[{"typeNames":["Aesop.NormSimpContext"],"name":"Aesop.instInhabitedNormSimpContext","className":"Inhabited"},{"typeNames":["Aesop.SearchM.Context"],"name":"Aesop.SearchM.instNonemptyContext","className":"Nonempty"},{"typeNames":["Aesop.SearchM.State"],"name":"Aesop.SearchM.instInhabitedState","className":"Inhabited"},{"typeNames":["Aesop.SearchM"],"name":"Aesop.SearchM.instMonad","className":"Monad"},{"typeNames":["Aesop.SearchM"],"name":"Aesop.SearchM.instMonadRef","className":"Lean.MonadRef"},{"typeNames":["Aesop.SearchM"],"name":"Aesop.SearchM.instInhabited","className":"Inhabited"},{"typeNames":["Aesop.SearchM.State","Aesop.SearchM"],"name":"Aesop.SearchM.instMonadStateState","className":"MonadState"},{"typeNames":["Aesop.SearchM.Context","Aesop.SearchM"],"name":"Aesop.SearchM.instMonadReaderContext","className":"MonadReader"},{"typeNames":["Aesop.TreeM","Aesop.SearchM"],"name":"Aesop.SearchM.instMonadLiftTreeM","className":"MonadLift"}],"imports":["Init","Aesop.Options","Aesop.Search.Queue.Class","Aesop.Stats.Basic","Aesop.RuleSet","Aesop.Tree.TreeM"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L134-L135","name":"Aesop.wasMaxRuleApplicationDepthReached","line":134,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.wasMaxRuleApplicationDepthReached","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.wasMaxRuleApplicationDepthReached\"><span class=\"name\">Aesop</span>.<span class=\"name\">wasMaxRuleApplicationDepthReached</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L131-L132","name":"Aesop.setMaxRuleApplicationDepthReached","line":131,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.setMaxRuleApplicationDepthReached","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.setMaxRuleApplicationDepthReached\"><span class=\"name\">Aesop</span>.<span class=\"name\">setMaxRuleApplicationDepthReached</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L126-L129","name":"Aesop.enqueueGoals","line":126,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.enqueueGoals","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.enqueueGoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">enqueueGoals</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">gs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">GoalRef</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L120-L124","name":"Aesop.popGoal?","line":120,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.popGoal?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.popGoal?\"><span class=\"name\">Aesop</span>.<span class=\"name\">popGoal?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">GoalRef</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L117-L118","name":"Aesop.incrementIteration","line":117,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.incrementIteration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.incrementIteration\"><span class=\"name\">Aesop</span>.<span class=\"name\">incrementIteration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L114-L115","name":"Aesop.getIteration","line":114,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.getIteration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.getIteration\"><span class=\"name\">Aesop</span>.<span class=\"name\">getIteration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Tree/Data.html#Aesop.Iteration\">Iteration</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L111-L112","name":"Aesop.modifyTree","line":111,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.modifyTree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.modifyTree\"><span class=\"name\">Aesop</span>.<span class=\"name\">modifyTree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Tree</a> → <a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Tree</a>)</span> → <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L108-L109","name":"Aesop.setTree","line":108,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.setTree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.setTree\"><span class=\"name\">Aesop</span>.<span class=\"name\">setTree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Tree</a> → <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L105-L106","name":"Aesop.getTree","line":105,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.getTree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.getTree\"><span class=\"name\">Aesop</span>.<span class=\"name\">getTree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Tree</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L81-L101","name":"Aesop.SearchM.run","line":81,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.run\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ruleSet</span> : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">options</span> : <a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Options'</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simpConfig</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.Simp.Config\">Lean.Meta.Simp.Config</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simpConfigStx?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Tree</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L75-L79","name":"Aesop.SearchM.run'","line":75,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.run'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.run'\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">run'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tree</span> : <a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Tree</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Tree</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L67-L73","name":"Aesop.SearchM.instMonadLiftTreeM","line":67,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadLiftTreeM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadLiftTreeM\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonadLiftTreeM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Aesop/Tree/TreeM.html#Aesop.TreeM\">TreeM</a> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L64-L65","name":"Aesop.SearchM.instMonadReaderContext","line":64,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadReaderContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadReaderContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonadReaderContext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadReader\">MonadReader</a> <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Context</a> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L61-L62","name":"Aesop.SearchM.instMonadStateState","line":61,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadStateState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadStateState\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonadStateState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadState\">MonadState</a> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span>)</span> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L58-L59","name":"Aesop.SearchM.instInhabited","line":58,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instInhabited\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L55-L56","name":"Aesop.SearchM.instMonadRef","line":55,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadRef\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonadRef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadRef\">Lean.MonadRef</a> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L52-L53","name":"Aesop.SearchM.instMonad","line":52,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonad\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L42-L44","name":"Aesop.SearchM","line":42,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L38-L38","name":"Aesop.SearchM.instInhabitedState","line":38,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instInhabitedState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instInhabitedState\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instInhabitedState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝¹</span> : <span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">a✝</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">a✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L37-L37","name":"Aesop.SearchM.State.maxRuleApplicationDepthReached","line":37,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State.maxRuleApplicationDepthReached","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State.maxRuleApplicationDepthReached\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">maxRuleApplicationDepthReached</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L36-L36","name":"Aesop.SearchM.State.queue","line":36,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State.queue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State.queue\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">queue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L35-L35","name":"Aesop.SearchM.State.iteration","line":35,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State.iteration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State.iteration\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">iteration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Tree/Data.html#Aesop.Iteration\">Iteration</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L34-L34","name":"Aesop.SearchM.State.mk","line":34,"kind":"ctor","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iteration</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.Iteration\">Iteration</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">queue</span> : <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">maxRuleApplicationDepthReached</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L34-L38","name":"Aesop.SearchM.State","line":34,"kind":"structure","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L32-L32","name":"Aesop.SearchM.instNonemptyContext","line":32,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instNonemptyContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instNonemptyContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instNonemptyContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Context</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L31-L31","name":"Aesop.SearchM.Context.options","line":31,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.options","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.options\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span>.<span class=\"name\">options</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Options'</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L30-L30","name":"Aesop.SearchM.Context.normSimpContext","line":30,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.normSimpContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.normSimpContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span>.<span class=\"name\">normSimpContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L29-L29","name":"Aesop.SearchM.Context.ruleSet","line":29,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.ruleSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.ruleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span>.<span class=\"name\">ruleSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">LocalRuleSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L28-L28","name":"Aesop.SearchM.Context.mk","line":28,"kind":"ctor","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ruleSet</span> : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">normSimpContext</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">options</span> : <a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Options'</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L28-L32","name":"Aesop.SearchM.Context","line":28,"kind":"structure","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L24-L24","name":"Aesop.instInhabitedNormSimpContext","line":24,"kind":"instance","docLink":"./Aesop/Search/SearchM.html#Aesop.instInhabitedNormSimpContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.instInhabitedNormSimpContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedNormSimpContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L23-L23","name":"Aesop.NormSimpContext.simprocs","line":23,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.simprocs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.simprocs\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">simprocs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Simproc.html#Lean.Meta.Simp.SimprocsArray\">Lean.Meta.Simp.SimprocsArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L22-L22","name":"Aesop.NormSimpContext.configStx?","line":22,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.configStx?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.configStx?\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">configStx?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L21-L21","name":"Aesop.NormSimpContext.useHyps","line":21,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.useHyps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.useHyps\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">useHyps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L20-L20","name":"Aesop.NormSimpContext.enabled","line":20,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.enabled","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.enabled\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">enabled</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L19-L19","name":"Aesop.NormSimpContext.toContext","line":19,"kind":"def","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.toContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.toContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">toContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context\">Lean.Meta.Simp.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L18-L18","name":"Aesop.NormSimpContext.mk","line":18,"kind":"ctor","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toContext</span> : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context\">Lean.Meta.Simp.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">enabled </span><span class=\"fn\">useHyps</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">configStx?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simprocs</span> : <a href=\"./Lean/Meta/Tactic/Simp/Simproc.html#Lean.Meta.Simp.SimprocsArray\">Lean.Meta.Simp.SimprocsArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/9264d548cf1ccf0ba454b82f931f44c37c299fc1/Aesop/Search/SearchM.lean#L18-L24","name":"Aesop.NormSimpContext","line":18,"kind":"structure","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}