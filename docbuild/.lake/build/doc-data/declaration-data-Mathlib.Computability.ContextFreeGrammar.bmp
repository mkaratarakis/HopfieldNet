{"name":"Mathlib.Computability.ContextFreeGrammar","instances":[{"typeNames":["Eq"],"name":"instDecidableEqContextFreeRule","className":"Decidable"},{"typeNames":["ContextFreeRule"],"name":"instReprContextFreeRule","className":"Repr"}],"imports":["Init","Mathlib.Computability.Language"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L326-L328","name":"Language.IsContextFree.reverse","line":326,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#Language.IsContextFree.reverse","doc":"The class of context-free languages is closed under reversal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#Language.IsContextFree.reverse\"><span class=\"name\">Language</span>.<span class=\"name\">IsContextFree</span>.<span class=\"name\">reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Language\">Language</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#Language.IsContextFree\">IsContextFree</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Computability/Language.html#Language.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#Language.IsContextFree\">IsContextFree</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L322-L322","name":"ContextFreeGrammar.language_reverse","line":322,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language_reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">language_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language\">language</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language\">language</a></span>.<a href=\"./Mathlib/Computability/Language.html#Language.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L319-L320","name":"ContextFreeGrammar.generates_reverse_comm","line":319,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.generates_reverse_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.generates_reverse_comm\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">generates_reverse_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates\">Generates</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates\">Generates</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L317-L317","name":"ContextFreeGrammar.Generates.reverse","line":317,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates.reverse","doc":"**Alias** of the reverse direction of `ContextFreeGrammar.generates_reverse`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates.reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Generates</span>.<span class=\"name\">reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates\">Generates</a></span> <span class=\"fn\">u</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates\">Generates</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L315-L315","name":"ContextFreeGrammar.generates_reverse","line":315,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.generates_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.generates_reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">generates_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates\">Generates</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates\">Generates</a></span> <span class=\"fn\">u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L312-L313","name":"ContextFreeGrammar.derives_reverse_comm","line":312,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.derives_reverse_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.derives_reverse_comm\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">derives_reverse_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L309-L310","name":"ContextFreeGrammar.derives_reverse","line":309,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.derives_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.derives_reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">derives_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L304-L307","name":"ContextFreeGrammar.Derives.reverse","line":304,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L300-L302","name":"ContextFreeGrammar.produces_reverse_comm","line":300,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.produces_reverse_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.produces_reverse_comm\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">produces_reverse_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L298-L298","name":"ContextFreeGrammar.Produces.reverse","line":298,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.reverse","doc":"**Alias** of the reverse direction of `ContextFreeGrammar.produces_reverse`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Produces</span>.<span class=\"name\">reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L294-L296","name":"ContextFreeGrammar.produces_reverse","line":294,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.produces_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.produces_reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">produces_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L291-L292","name":"ContextFreeGrammar.reverse_surjective","line":291,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_surjective\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L288-L289","name":"ContextFreeGrammar.reverse_injective","line":288,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_injective\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L285-L286","name":"ContextFreeGrammar.reverse_bijective","line":285,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_bijective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_bijective\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L282-L283","name":"ContextFreeGrammar.reverse_involutive","line":282,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_involutive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_involutive\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_involutive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.Involutive\">Function.Involutive</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L279-L280","name":"ContextFreeGrammar.reverse_reverse","line":279,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L276-L276","name":"ContextFreeGrammar.reverse_initial","line":276,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_initial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_initial\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_initial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.initial\">initial</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.initial\">initial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L276-L276","name":"ContextFreeGrammar.reverse_NT","line":276,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_NT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_NT\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_NT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L276-L276","name":"ContextFreeGrammar.reverse_rules","line":276,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_rules","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_rules\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_rules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.rules\">rules</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">ContextFreeRule.reverse</a>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.rules\">rules</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L275-L277","name":"ContextFreeGrammar.reverse","line":275,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse","doc":"Grammar for a reversed language. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L267-L268","name":"ContextFreeRule.rewrites_reverse_comm","line":267,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_reverse_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_reverse_comm\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">rewrites_reverse_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L264-L265","name":"ContextFreeRule.rewrites_reverse","line":264,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_reverse\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">rewrites_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L260-L262","name":"ContextFreeRule.Rewrites.reverse","line":260,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.reverse\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L257-L258","name":"ContextFreeRule.reverse_surjective","line":257,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_surjective\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">reverse_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L254-L255","name":"ContextFreeRule.reverse_injective","line":254,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_injective\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">reverse_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L251-L252","name":"ContextFreeRule.reverse_bijective","line":251,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_bijective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_bijective\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">reverse_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L248-L249","name":"ContextFreeRule.reverse_involutive","line":248,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_involutive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_involutive\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">reverse_involutive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.Involutive\">Function.Involutive</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L245-L246","name":"ContextFreeRule.reverse_comp_reverse","line":245,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_comp_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_comp_reverse\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">reverse_comp_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#id\">id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L243-L243","name":"ContextFreeRule.reverse_reverse","line":243,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_reverse\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">reverse_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L240-L241","name":"ContextFreeRule.reverse","line":240,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse","doc":"Rules for a grammar for a reversed language. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L231-L233","name":"Language.IsContextFree","line":231,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#Language.IsContextFree","doc":"Context-free languages are defined by context-free grammars. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#Language.IsContextFree\"><span class=\"name\">Language</span>.<span class=\"name\">IsContextFree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Language\">Language</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L226-L227","name":"ContextFreeGrammar.language_eq_zero_of_forall_input_ne_initial","line":226,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language_eq_zero_of_forall_input_ne_initial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language_eq_zero_of_forall_input_ne_initial\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">language_eq_zero_of_forall_input_ne_initial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\">∀ <span class=\"fn\">r</span> ∈ <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.rules\">rules</a></span>, <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.initial\">initial</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language\">language</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L216-L224","name":"ContextFreeGrammar.derives_nonterminal","line":216,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.derives_nonterminal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.derives_nonterminal\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">derives_nonterminal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hgt</span> : <span class=\"fn\">∀ <span class=\"fn\">r</span> ∈ <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.rules\">rules</a></span>, <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\">t</span></span><a href=\"./Init/Prelude.html#List.cons\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\">t</span></span><a href=\"./Init/Prelude.html#List.cons\">]</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L211-L214","name":"ContextFreeGrammar.Produces.exists_nonterminal_input_mem","line":211,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.exists_nonterminal_input_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.exists_nonterminal_input_mem\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Produces</span>.<span class=\"name\">exists_nonterminal_input_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hguv</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">r</span> ∈ <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.rules\">rules</a></span>, <span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L203-L209","name":"ContextFreeGrammar.Derives.append_right","line":203,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.append_right","doc":"Add extra postfix to context-free deriving. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.append_right\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">append_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> (<span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">p</span>) (<span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">p</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L195-L201","name":"ContextFreeGrammar.Derives.append_left","line":195,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.append_left","doc":"Add extra prefix to context-free deriving. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.append_left\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">append_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">v</span>) (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">w</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L189-L193","name":"ContextFreeGrammar.Produces.append_right","line":189,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.append_right","doc":"Add extra postfix to context-free producing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.append_right\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Produces</span>.<span class=\"name\">append_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> (<span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">p</span>) (<span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">p</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L183-L187","name":"ContextFreeGrammar.Produces.append_left","line":183,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.append_left","doc":"Add extra prefix to context-free producing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.append_left\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Produces</span>.<span class=\"name\">append_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">v</span>) (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">w</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L179-L181","name":"ContextFreeGrammar.derives_iff_eq_or_tail","line":179,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.derives_iff_eq_or_tail","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.derives_iff_eq_or_tail\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">derives_iff_eq_or_tail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L175-L177","name":"ContextFreeGrammar.Derives.eq_or_tail","line":175,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.eq_or_tail","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.eq_or_tail\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">eq_or_tail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L171-L173","name":"ContextFreeGrammar.derives_iff_eq_or_head","line":171,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.derives_iff_eq_or_head","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.derives_iff_eq_or_head\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">derives_iff_eq_or_head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L167-L169","name":"ContextFreeGrammar.Derives.eq_or_head","line":167,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.eq_or_head","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.eq_or_head\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">eq_or_head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L162-L165","name":"ContextFreeGrammar.Produces.trans_derives","line":162,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.trans_derives","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.trans_derives\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Produces</span>.<span class=\"name\">trans_derives</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huv</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L157-L160","name":"ContextFreeGrammar.Derives.trans_produces","line":157,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.trans_produces","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.trans_produces\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">trans_produces</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huv</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L152-L155","name":"ContextFreeGrammar.Derives.trans","line":152,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.trans\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huv</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L149-L150","name":"ContextFreeGrammar.Produces.single","line":149,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.single","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.single\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Produces</span>.<span class=\"name\">single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L145-L147","name":"ContextFreeGrammar.Derives.refl","line":145,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.refl\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">w</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L135-L141","name":"ContextFreeGrammar.mem_language_iff","line":135,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.mem_language_iff","doc":"A given word `w` belongs to the language generated by a given context-free grammar `g` iff\n`g` can derive the word `w` (wrapped as a string) from the initial nonterminal of `g` in some\nnumber of steps. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.mem_language_iff\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">mem_language_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language\">language</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.initial\">initial</a></span></span><a href=\"./Init/Prelude.html#List.cons\">]</a> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <a href=\"./Mathlib/Computability/Language.html#Symbol.terminal\">Symbol.terminal</a> <span class=\"fn\">w</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L131-L133","name":"ContextFreeGrammar.language","line":131,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language","doc":"The language (set of words) that can be generated by a given context-free grammar `g`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">language</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Language\">Language</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L125-L129","name":"ContextFreeGrammar.Generates","line":125,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates","doc":"Given a context-free grammar `g` and a string `s`\n`g.Generates s` means that `g` can transform its initial nonterminal to `s` in some number of\nrewriting steps. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Generates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L119-L123","name":"ContextFreeGrammar.Derives","line":119,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives","doc":"Given a context-free grammar `g` and strings `u` and `v`\n`g.Derives u v` means that `g` can transform `u` to `v` in some number of rewriting steps. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L113-L117","name":"ContextFreeGrammar.Produces","line":113,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces","doc":"Given a context-free grammar `g` and strings `u` and `v`\n`g.Produces u v` means that one step of a context-free transformation by a rule from `g` sends\n`u` to `v`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Produces</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L101-L107","name":"ContextFreeRule.Rewrites.append_right","line":101,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.append_right","doc":"Add extra postfix to context-free rewriting. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.append_right\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">append_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> (<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">p</span>) (<span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">p</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L93-L99","name":"ContextFreeRule.Rewrites.append_left","line":93,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.append_left","doc":"Add extra prefix to context-free rewriting. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.append_left\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">append_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">u</span>) (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">v</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L90-L91","name":"ContextFreeRule.Rewrites.nonterminal_input_mem","line":90,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.nonterminal_input_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.nonterminal_input_mem\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">nonterminal_input_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L82-L88","name":"ContextFreeRule.rewrites_iff","line":82,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_iff","doc":"Rule `r` rewrites string `u` is to string `v` iff they share both a prefix `p` and postfix `q`\nsuch that the remaining middle part of `u` is the input of `r` and the remaining middle part\nof `u` is the output of `r`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_iff\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">rewrites_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>) (<span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>), <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span></span><a href=\"./Init/Prelude.html#List.cons\">]</a> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L76-L80","name":"ContextFreeRule.rewrites_of_exists_parts","line":76,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_of_exists_parts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_of_exists_parts\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">rewrites_of_exists_parts</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span></span><a href=\"./Init/Prelude.html#List.cons\">]</a> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span>) (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L73-L74","name":"ContextFreeRule.Rewrites.input_output","line":73,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.input_output","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.input_output\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">input_output</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span></span><a href=\"./Init/Prelude.html#List.cons\">]</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L61-L71","name":"ContextFreeRule.Rewrites.exists_parts","line":61,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.exists_parts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.exists_parts\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">exists_parts</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>) (<span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>), <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span></span><a href=\"./Init/Prelude.html#List.cons\">]</a> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L57-L59","name":"ContextFreeRule.Rewrites.cons","line":57,"kind":"ctor","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.cons","doc":"There is a replacement later in the string. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.cons\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrs</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">s₁</span> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">s₁</span>) (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">s₂</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L54-L56","name":"ContextFreeRule.Rewrites.head","line":54,"kind":"ctor","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.head","doc":"The replacement is at the start of the remaining string. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.head\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> (<span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span></span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">s</span>) (<span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">s</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L51-L59","name":"ContextFreeRule.Rewrites","line":51,"kind":"inductive","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites","doc":"Inductive definition of a single application of a given context-free rule `r` to a string `u`;\n`r.Rewrites u v` means that the `r` sends `u` to `v` (there may be multiple such strings `v`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L44-L44","name":"ContextFreeGrammar.rules","line":44,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.rules","doc":"Rewrite rules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.rules\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">rules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L42-L42","name":"ContextFreeGrammar.initial","line":42,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.initial","doc":"Initial nonterminal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.initial\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">initial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L40-L40","name":"ContextFreeGrammar.NT","line":40,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT","doc":"Type of nonterminals. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">NT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L38-L38","name":"ContextFreeGrammar.mk","line":38,"kind":"ctor","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.mk\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">NT</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initial</span> : <span class=\"fn\">NT</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rules</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">NT</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L37-L44","name":"ContextFreeGrammar","line":37,"kind":"structure","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar","doc":"Context-free grammar that generates words over the alphabet `T` (a type of terminals). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\"><span class=\"name\">ContextFreeGrammar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max 1 u_1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L35-L35","name":"instReprContextFreeRule","line":35,"kind":"instance","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#instReprContextFreeRule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#instReprContextFreeRule\"><span class=\"name\">instReprContextFreeRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N✝</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">T✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">N✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T✝</span> <span class=\"fn\">N✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L35-L35","name":"instDecidableEqContextFreeRule","line":35,"kind":"instance","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#instDecidableEqContextFreeRule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#instDecidableEqContextFreeRule\"><span class=\"name\">instDecidableEqContextFreeRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N✝</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">T✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">N✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T✝</span> <span class=\"fn\">N✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L34-L34","name":"ContextFreeRule.output","line":34,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output","doc":"Output string a.k.a. right-hand side. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">output</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L32-L32","name":"ContextFreeRule.input","line":32,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input","doc":"Input nonterminal a.k.a. left-hand side. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">input</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L30-L30","name":"ContextFreeRule.mk","line":30,"kind":"ctor","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.mk\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">output</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L29-L29","name":"ContextFreeRule.ext_iff","line":29,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.ext_iff\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L29-L29","name":"ContextFreeRule.ext","line":29,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.ext\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">output</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/Computability/ContextFreeGrammar.lean#L28-L35","name":"ContextFreeRule","line":28,"kind":"structure","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule","doc":"Rule that rewrites a single nonterminal to any string (a list of symbols). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\"><span class=\"name\">ContextFreeRule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"}]}