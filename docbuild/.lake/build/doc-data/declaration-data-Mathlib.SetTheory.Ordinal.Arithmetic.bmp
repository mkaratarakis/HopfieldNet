{"name":"Mathlib.SetTheory.Ordinal.Arithmetic","instances":[{"typeNames":["Ordinal"],"name":"Ordinal.instAddLeftReflectLE","className":"ContravariantClass"},{"typeNames":["Ordinal"],"name":"Ordinal.instIsLeftCancelAdd","className":"IsLeftCancelAdd"},{"typeNames":["Ordinal"],"name":"Ordinal.instAddLeftStrictMono","className":"CovariantClass"},{"typeNames":["Ordinal"],"name":"Ordinal.instAddLeftReflectLT","className":"ContravariantClass"},{"typeNames":["Ordinal"],"name":"Ordinal.instAddRightReflectLT","className":"ContravariantClass"},{"typeNames":["Ordinal.toType"],"name":"Ordinal.orderTopToTypeSucc","className":"OrderTop"},{"typeNames":["Ordinal"],"name":"Ordinal.sub","className":"Sub"},{"typeNames":["Ordinal"],"name":"Ordinal.existsAddOfLE","className":"ExistsAddOfLE"},{"typeNames":["Ordinal"],"name":"Ordinal.monoid","className":"Monoid"},{"typeNames":["Ordinal"],"name":"Ordinal.monoidWithZero","className":"MonoidWithZero"},{"typeNames":["Ordinal"],"name":"Ordinal.noZeroDivisors","className":"NoZeroDivisors"},{"typeNames":["Ordinal"],"name":"Ordinal.leftDistribClass","className":"LeftDistribClass"},{"typeNames":["Ordinal"],"name":"Ordinal.mulLeftMono","className":"CovariantClass"},{"typeNames":["Ordinal"],"name":"Ordinal.mulRightMono","className":"CovariantClass"},{"typeNames":["Ordinal"],"name":"Ordinal.div","className":"Div"},{"typeNames":["Ordinal"],"name":"Ordinal.isAntisymm","className":"IsAntisymm"},{"typeNames":["Ordinal"],"name":"Ordinal.mod","className":"Mod"},{"typeNames":["Ordinal"],"name":"Ordinal.instCharZero","className":"CharZero"}],"imports":["Init","Mathlib.Algebra.GroupWithZero.Divisibility","Mathlib.Data.Nat.SuccPred","Mathlib.Order.SuccPred.InitialSeg","Mathlib.SetTheory.Ordinal.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1204-L1205","name":"Cardinal.noMaxOrder","line":1204,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Cardinal.noMaxOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Cardinal.noMaxOrder\"><span class=\"name\">Cardinal</span>.<span class=\"name\">noMaxOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#NoMaxOrder\">NoMaxOrder</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1192-L1202","name":"Cardinal.isLimit_ord","line":1192,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Cardinal.isLimit_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Cardinal.isLimit_ord\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isLimit_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">co</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1187-L1190","name":"Cardinal.add_one_of_aleph0_le","line":1187,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Cardinal.add_one_of_aleph0_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Cardinal.add_one_of_aleph0_le\"><span class=\"name\">Cardinal</span>.<span class=\"name\">add_one_of_aleph0_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1177-L1179","name":"Ordinal.natCast_mod_omega0","line":1177,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.natCast_mod_omega0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.natCast_mod_omega0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">natCast_mod_omega0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1162-L1175","name":"Ordinal.isLimit_iff_omega0_dvd","line":1162,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_iff_omega0_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_iff_omega0_dvd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isLimit_iff_omega0_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1156-L1158","name":"Ordinal.one_add_of_omega0_le","line":1156,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.one_add_of_omega0_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.one_add_of_omega0_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">one_add_of_omega0_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1152-L1154","name":"Ordinal.natCast_add_of_omega0_le","line":1152,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.natCast_add_of_omega0_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.natCast_add_of_omega0_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">natCast_add_of_omega0_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1148-L1150","name":"Ordinal.add_omega0","line":1148,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_omega0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_omega0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_omega0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1145-L1146","name":"Ordinal.one_add_omega0","line":1145,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.one_add_omega0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.one_add_omega0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">one_add_omega0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1138-L1143","name":"Ordinal.natCast_add_omega0","line":1138,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.natCast_add_omega0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.natCast_add_omega0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">natCast_add_omega0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1135-L1136","name":"Ordinal.omega0_le_of_isLimit","line":1135,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.omega0_le_of_isLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.omega0_le_of_isLimit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_le_of_isLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1131-L1133","name":"Ordinal.nat_lt_limit","line":1131,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.nat_lt_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.nat_lt_limit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nat_lt_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1125-L1129","name":"Ordinal.omega0_le","line":1125,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.omega0_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.omega0_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1119-L1123","name":"Ordinal.isLimit_omega0","line":1119,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_omega0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_omega0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isLimit_omega0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1117-L1117","name":"Ordinal.one_lt_omega0","line":1117,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.one_lt_omega0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.one_lt_omega0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">one_lt_omega0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1114-L1115","name":"Ordinal.omega0_ne_zero","line":1114,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.omega0_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.omega0_ne_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_ne_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1111-L1112","name":"Ordinal.omega0_pos","line":1111,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.omega0_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.omega0_pos\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_pos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1106-L1109","name":"Ordinal.eq_nat_or_omega0_le","line":1106,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.eq_nat_or_omega0_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.eq_nat_or_omega0_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">eq_nat_or_omega0_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1103-L1104","name":"Ordinal.nat_lt_omega0","line":1103,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.nat_lt_omega0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.nat_lt_omega0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">nat_lt_omega0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1100-L1101","name":"Ordinal.lt_omega0","line":1100,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_omega0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_omega0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_omega0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1095-L1098","name":"Ordinal.lift_ofNat","line":1095,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_ofNat\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lift_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">AtLeastTwo</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u, v}</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1090-L1093","name":"Ordinal.lift_natCast","line":1090,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_natCast\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lift_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u, v}</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1085-L1088","name":"Ordinal.natCast_mod","line":1085,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.natCast_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.natCast_mod\"><span class=\"name\">Ordinal</span>.<span class=\"name\">natCast_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1073-L1083","name":"Ordinal.natCast_div","line":1073,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.natCast_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.natCast_div\"><span class=\"name\">Ordinal</span>.<span class=\"name\">natCast_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1066-L1071","name":"Ordinal.natCast_sub","line":1066,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.natCast_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.natCast_sub\"><span class=\"name\">Ordinal</span>.<span class=\"name\">natCast_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1061-L1064","name":"Ordinal.natCast_mul","line":1061,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.natCast_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.natCast_mul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">natCast_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1056-L1059","name":"Ordinal.one_add_ofNat","line":1056,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.one_add_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.one_add_ofNat\"><span class=\"name\">Ordinal</span>.<span class=\"name\">one_add_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">AtLeastTwo</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">m</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1051-L1054","name":"Ordinal.one_add_natCast","line":1051,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.one_add_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.one_add_natCast\"><span class=\"name\">Ordinal</span>.<span class=\"name\">one_add_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">m</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1047-L1049","name":"Ordinal.instCharZero","line":1047,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.instCharZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.instCharZero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">instCharZero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1041-L1043","name":"Ordinal.mod_mod","line":1041,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_mod\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mod_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1036-L1039","name":"Ordinal.mod_mod_of_dvd","line":1036,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_mod_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_mod_of_dvd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mod_mod_of_dvd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1030-L1034","name":"Ordinal.mul_mod_mul","line":1030,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_mod_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_mod_mul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_mod_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">z</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1024-L1028","name":"Ordinal.mul_add_mod_mul","line":1024,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_add_mod_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_add_mod_mul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_add_mod_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w </span><span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hw</span> : <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">w</span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">z</span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">w</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1020-L1022","name":"Ordinal.mul_mod","line":1020,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_mod\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1014-L1018","name":"Ordinal.mul_add_mod_self","line":1014,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_add_mod_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_add_mod_self\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_add_mod_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1011-L1012","name":"Ordinal.dvd_iff_mod_eq_zero","line":1011,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.dvd_iff_mod_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.dvd_iff_mod_eq_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">dvd_iff_mod_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1005-L1009","name":"Ordinal.mod_eq_zero_of_dvd","line":1005,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_eq_zero_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_eq_zero_of_dvd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mod_eq_zero_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L1002-L1003","name":"Ordinal.dvd_of_mod_eq_zero","line":1002,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.dvd_of_mod_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.dvd_of_mod_eq_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">dvd_of_mod_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L999-L1000","name":"Ordinal.mod_one","line":999,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mod_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L994-L997","name":"Ordinal.mod_self","line":994,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_self\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mod_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L991-L992","name":"Ordinal.mod_lt","line":991,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mod_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L988-L989","name":"Ordinal.div_add_mod","line":988,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_add_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_add_mod\"><span class=\"name\">Ordinal</span>.<span class=\"name\">div_add_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L985-L986","name":"Ordinal.zero_mod","line":985,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.zero_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.zero_mod\"><span class=\"name\">Ordinal</span>.<span class=\"name\">zero_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L982-L983","name":"Ordinal.mod_eq_of_lt","line":982,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_eq_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_eq_of_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mod_eq_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L979-L980","name":"Ordinal.mod_zero","line":979,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mod_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L976-L977","name":"Ordinal.mod_le","line":976,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mod_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L973-L974","name":"Ordinal.mod_def","line":973,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod_def\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mod_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L968-L971","name":"Ordinal.mod","line":968,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod","doc":"`a % b` is the unique ordinal `o'` satisfying\n`a = b * o + o'` with `o' < b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mod\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mod</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mod\">Mod</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L965-L966","name":"Ordinal.isAntisymm","line":965,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isAntisymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isAntisymm\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isAntisymm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsAntisymm\">IsAntisymm</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L959-L963","name":"Ordinal.dvd_antisymm","line":959,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.dvd_antisymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.dvd_antisymm\"><span class=\"name\">Ordinal</span>.<span class=\"name\">dvd_antisymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L949-L957","name":"Ordinal.le_of_dvd","line":949,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_of_dvd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L946-L947","name":"Ordinal.div_mul_cancel","line":946,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_mul_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_mul_cancel\"><span class=\"name\">Ordinal</span>.<span class=\"name\">div_mul_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">a</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L940-L944","name":"Ordinal.dvd_add_iff","line":940,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.dvd_add_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.dvd_add_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">dvd_add_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span> → (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">c</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L925-L938","name":"Ordinal.isLimit_add_iff","line":925,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_add_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_add_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isLimit_add_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L920-L923","name":"Ordinal.mul_sub","line":920,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_sub\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L916-L918","name":"Ordinal.div_self","line":916,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_self\"><span class=\"name\">Ordinal</span>.<span class=\"name\">div_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L912-L914","name":"Ordinal.div_one","line":912,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">div_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L908-L910","name":"Ordinal.mul_div_mul_cancel","line":908,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_div_mul_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_div_mul_cancel\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_div_mul_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L892-L906","name":"Ordinal.mul_add_div_mul","line":892,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_add_div_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_add_div_mul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_add_div_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b </span><span class=\"fn\">d</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">d</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L888-L890","name":"Ordinal.mul_div_cancel","line":888,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_div_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_div_cancel\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_div_cancel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b0</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L884-L886","name":"Ordinal.div_eq_zero_of_lt","line":884,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_eq_zero_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_eq_zero_of_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">div_eq_zero_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L876-L882","name":"Ordinal.mul_add_div","line":876,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_add_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_add_div\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_add_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b0</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L870-L874","name":"Ordinal.div_le_left","line":870,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_le_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_le_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">div_le_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L867-L868","name":"Ordinal.mul_div_le","line":867,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_div_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_div_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_div_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L863-L865","name":"Ordinal.zero_div","line":863,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.zero_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.zero_div\"><span class=\"name\">Ordinal</span>.<span class=\"name\">zero_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L860-L861","name":"Ordinal.mul_lt_of_lt_div","line":860,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_lt_of_lt_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_lt_of_lt_div\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_lt_of_lt_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span> → <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L855-L858","name":"Ordinal.div_le_of_le_mul","line":855,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_le_of_le_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_le_of_le_mul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">div_le_of_le_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L852-L853","name":"Ordinal.div_lt","line":852,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">div_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b0</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L844-L850","name":"Ordinal.le_div","line":844,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_div\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c0</span> : <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L842-L842","name":"Ordinal.div_pos","line":842,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_pos\"><span class=\"name\">Ordinal</span>.<span class=\"name\">div_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L839-L840","name":"Ordinal.lt_div","line":839,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_div\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L835-L837","name":"Ordinal.div_le","line":835,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">div_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b0</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L832-L833","name":"Ordinal.lt_mul_div_add","line":832,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_mul_div_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_mul_div_add\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_mul_div_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L829-L830","name":"Ordinal.lt_mul_succ_div","line":829,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_mul_succ_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_mul_succ_div\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_mul_succ_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L822-L824","name":"Ordinal.div_zero","line":822,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">div_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L818-L820","name":"Ordinal.div","line":818,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div","doc":"`a / b` is the unique ordinal `o` satisfying `a = b * o + o'` with `o' < b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.div\"><span class=\"name\">Ordinal</span>.<span class=\"name\">div</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L806-L807","name":"Ordinal.add_mul_limit","line":806,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_mul_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_mul_limit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_mul_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ba</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L798-L804","name":"Ordinal.add_mul_succ","line":798,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_mul_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_mul_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_mul_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ba</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L781-L783","name":"Ordinal.smul_eq_mul","line":781,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.smul_eq_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.smul_eq_mul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">smul_eq_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L774-L779","name":"Ordinal.isLimit_mul_left","line":774,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_mul_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_mul_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isLimit_mul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b0</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L771-L772","name":"Ordinal.isLimit_mul","line":771,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_mul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isLimit_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a0</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> → <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L768-L769","name":"Ordinal.mul_right_inj","line":768,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_right_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_right_inj\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_right_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a0</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L765-L766","name":"Ordinal.le_of_mul_le_mul_left","line":765,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_of_mul_le_mul_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_of_mul_le_mul_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_of_mul_le_mul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h0</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L762-L763","name":"Ordinal.mul_ne_zero","line":762,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_ne_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L759-L760","name":"Ordinal.mul_pos","line":759,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_pos\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L756-L757","name":"Ordinal.mul_lt_mul_of_pos_left","line":756,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_lt_mul_of_pos_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_lt_mul_of_pos_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_lt_mul_of_pos_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c0</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L753-L754","name":"Ordinal.mul_le_mul_iff_left","line":753,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_le_mul_iff_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_le_mul_iff_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_le_mul_iff_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a0</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L750-L751","name":"Ordinal.mul_lt_mul_iff_left","line":750,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_lt_mul_iff_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_lt_mul_iff_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_lt_mul_iff_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a0</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L746-L748","name":"Ordinal.lt_mul_of_limit","line":746,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_mul_of_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_mul_of_limit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_mul_of_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">c'</span> &lt; <span class=\"fn\">c</span>, <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L738-L744","name":"Ordinal.isNormal_mul_right","line":738,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isNormal_mul_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isNormal_mul_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_mul_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>) =&gt; <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L728-L736","name":"Ordinal.mul_le_of_limit","line":728,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_le_of_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_le_of_limit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_le_of_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L686-L688","name":"Ordinal.le_mul_right","line":686,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_mul_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_mul_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_mul_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L682-L684","name":"Ordinal.le_mul_left","line":682,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_mul_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_mul_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_mul_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L673-L680","name":"Ordinal.mulRightMono","line":673,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mulRightMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mulRightMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mulRightMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Unbundled/Defs.html#MulRightMono\">MulRightMono</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L664-L671","name":"Ordinal.mulLeftMono","line":664,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mulLeftMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mulLeftMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mulLeftMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Unbundled/Defs.html#MulLeftMono\">MulLeftMono</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L661-L662","name":"Ordinal.mul_succ","line":661,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mul_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mul_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L650-L659","name":"Ordinal.leftDistribClass","line":650,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.leftDistribClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.leftDistribClass\"><span class=\"name\">Ordinal</span>.<span class=\"name\">leftDistribClass</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#LeftDistribClass\">LeftDistribClass</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L646-L648","name":"Ordinal.card_mul","line":646,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.card_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.card_mul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L638-L644","name":"Ordinal.lift_mul","line":638,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_mul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lift_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{v}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u, v}</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u, v}</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u, v}</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L635-L636","name":"Ordinal.noZeroDivisors","line":635,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.noZeroDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.noZeroDivisors\"><span class=\"name\">Ordinal</span>.<span class=\"name\">noZeroDivisors</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#NoZeroDivisors\">NoZeroDivisors</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L629-L633","name":"Ordinal.monoidWithZero","line":629,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.monoidWithZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.monoidWithZero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">monoidWithZero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L617-L620","name":"Ordinal.type_prod_lex","line":617,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.type_prod_lex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.type_prod_lex\"><span class=\"name\">Ordinal</span>.<span class=\"name\">type_prod_lex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">β</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\">β</span> <span class=\"fn\">s</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">type</a> <span class=\"fn\">(<a href=\"./Init/WF.html#Prod.Lex\">Prod.Lex</a> <span class=\"fn\">s</span> <span class=\"fn\">r</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">type</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">type</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L584-L615","name":"Ordinal.monoid","line":584,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.monoid","doc":"The multiplication of ordinals `o₁` and `o₂` is the (well founded) lexicographic order on\n`o₂ × o₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.monoid\"><span class=\"name\">Ordinal</span>.<span class=\"name\">monoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L574-L579","name":"Ordinal.isLimit_sub","line":574,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_sub\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isLimit_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L569-L572","name":"Ordinal.add_le_of_forall_add_lt","line":569,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_le_of_forall_add_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_le_of_forall_add_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_le_of_forall_add_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ <span class=\"fn\">d</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L566-L567","name":"Ordinal.add_le_iff","line":566,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_le_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">d</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L561-L564","name":"Ordinal.lt_add_iff","line":561,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_add_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_add_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_add_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">d</span> &lt; <span class=\"fn\">c</span>, <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L556-L559","name":"Ordinal.sub_lt_of_lt_add","line":556,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_lt_of_lt_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_lt_of_lt_add\"><span class=\"name\">Ordinal</span>.<span class=\"name\">sub_lt_of_lt_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L552-L554","name":"Ordinal.le_sub_of_add_le","line":552,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_sub_of_add_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_sub_of_add_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_sub_of_add_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L548-L550","name":"Ordinal.add_sub_add_cancel","line":548,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_sub_add_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_sub_add_cancel\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_sub_add_cancel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L545-L546","name":"Ordinal.sub_sub","line":545,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_sub\"><span class=\"name\">Ordinal</span>.<span class=\"name\">sub_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L542-L543","name":"Ordinal.sub_ne_zero_iff_lt","line":542,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_ne_zero_iff_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_ne_zero_iff_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">sub_ne_zero_iff_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L538-L540","name":"Ordinal.sub_eq_zero_iff_le","line":538,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_eq_zero_iff_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_eq_zero_iff_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">sub_eq_zero_iff_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L535-L536","name":"Ordinal.sub_self","line":535,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_self\"><span class=\"name\">Ordinal</span>.<span class=\"name\">sub_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L532-L533","name":"Ordinal.zero_sub","line":532,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.zero_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.zero_sub\"><span class=\"name\">Ordinal</span>.<span class=\"name\">zero_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L529-L530","name":"Ordinal.sub_zero","line":529,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">sub_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L526-L527","name":"Ordinal.existsAddOfLE","line":526,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.existsAddOfLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.existsAddOfLE\"><span class=\"name\">Ordinal</span>.<span class=\"name\">existsAddOfLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Unbundled/ExistsOfLE.html#ExistsAddOfLE\">ExistsAddOfLE</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L523-L524","name":"Ordinal.sub_lt_of_le","line":523,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_lt_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_lt_of_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">sub_lt_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L520-L521","name":"Ordinal.le_sub_of_le","line":520,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_sub_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_sub_of_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_sub_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L511-L518","name":"Ordinal.add_sub_cancel_of_le","line":511,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_sub_cancel_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_sub_cancel_of_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_sub_cancel_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L508-L509","name":"Ordinal.sub_le_self","line":508,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_le_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_le_self\"><span class=\"name\">Ordinal</span>.<span class=\"name\">sub_le_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L505-L506","name":"Ordinal.sub_eq_of_add_eq","line":505,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_eq_of_add_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_eq_of_add_eq\"><span class=\"name\">Ordinal</span>.<span class=\"name\">sub_eq_of_add_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L502-L503","name":"Ordinal.add_sub_cancel","line":502,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_sub_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_sub_cancel\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_sub_cancel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L499-L500","name":"Ordinal.lt_sub","line":499,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_sub\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L496-L497","name":"Ordinal.sub_le","line":496,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">sub_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L493-L494","name":"Ordinal.le_add_sub","line":493,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_add_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_add_sub\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_add_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L489-L491","name":"Ordinal.sub","line":489,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub","doc":"`a - b` is the unique ordinal satisfying `b + (a - b) = a` when `b ≤ a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.sub\"><span class=\"name\">Ordinal</span>.<span class=\"name\">sub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L480-L480","name":"Ordinal.IsLimit.add","line":480,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.add","doc":"**Alias** of `Ordinal.isLimit_add`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.add\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> → <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L477-L478","name":"Ordinal.isLimit_add","line":477,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_add\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isLimit_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> → <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L474-L475","name":"Ordinal.isNormal_add_right","line":474,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isNormal_add_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isNormal_add_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_add_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>) =&gt; <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L446-L472","name":"Ordinal.add_le_of_limit","line":446,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_le_of_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_le_of_limit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_le_of_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">b'</span> &lt; <span class=\"fn\">b</span>, <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L437-L444","name":"Ordinal.IsNormal.isLimit","line":437,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.isLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.isLimit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">isLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L433-L435","name":"Ordinal.IsNormal.trans","line":433,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.trans\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_6}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₁</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₂</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">g</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L430-L431","name":"Ordinal.IsNormal.refl","line":430,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.refl\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">refl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <a href=\"./Init/Prelude.html#id\">id</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L426-L428","name":"Ordinal.IsNormal.le_set'","line":426,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.le_set'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.le_set'\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">le_set'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p0</span> : <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₂</span> : <span class=\"fn\">∀ (<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>), <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">p</span>, <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">p</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L409-L424","name":"Ordinal.IsNormal.le_set","line":409,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.le_set","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.le_set\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">le_set</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p0</span> : <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₂</span> : <span class=\"fn\">∀ (<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>), <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">p</span>, <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">p</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L406-L407","name":"Ordinal.IsNormal.le_iff_eq","line":406,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.le_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.le_iff_eq\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">le_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L403-L404","name":"Ordinal.IsNormal.le_apply","line":403,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.le_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.le_apply\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">le_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L400-L401","name":"Ordinal.IsNormal.id_le","line":400,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.id_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.id_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">id_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#id\">id</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L397-L398","name":"Ordinal.IsNormal.inj","line":397,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.inj\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L394-L395","name":"Ordinal.IsNormal.le_iff","line":394,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.le_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L391-L392","name":"Ordinal.IsNormal.lt_iff","line":391,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.lt_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.lt_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">lt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L385-L389","name":"Ordinal.isNormal_iff_strictMono_limit","line":385,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isNormal_iff_strictMono_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isNormal_iff_strictMono_limit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_iff_strictMono_limit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> → <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a>), <span class=\"fn\"><span class=\"fn\">(∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L382-L383","name":"Ordinal.IsNormal.monotone","line":382,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.monotone\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L376-L380","name":"Ordinal.IsNormal.strictMono","line":376,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.strictMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">strictMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L372-L374","name":"Ordinal.IsNormal.limit_lt","line":372,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.limit_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.limit_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">limit_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">b</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L368-L370","name":"Ordinal.IsNormal.limit_le","line":368,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.limit_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal.limit_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">limit_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> → <span class=\"fn\">∀ {<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a>}, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L362-L366","name":"Ordinal.IsNormal","line":362,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal","doc":"A normal ordinal function is a strictly increasing function which is\norder-continuous, i.e., the image `f o` of a limit ordinal `o` is the sup of `f a` for\n`a < o`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L354-L357","name":"Ordinal.mk_Iio_ordinal","line":354,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mk_Iio_ordinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.mk_Iio_ordinal\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mk_Iio_ordinal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">Cardinal.lift.{u + 1, u}</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L347-L352","name":"Ordinal.typein_ordinal","line":347,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.typein_ordinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.typein_ordinal\"><span class=\"name\">Ordinal</span>.<span class=\"name\">typein_ordinal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.typein\">typein</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span></span>)</span>.<a href=\"./Mathlib/Order/InitialSeg.html#PrincipalSeg.toRelEmbedding\">toRelEmbedding</a></span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u + 1, u}</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L338-L345","name":"Ordinal.bounded_singleton","line":338,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.bounded_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.bounded_singleton\"><span class=\"name\">Ordinal</span>.<span class=\"name\">bounded_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">type</a> <span class=\"fn\">r</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#Set.Bounded\">Set.Bounded</a> <span class=\"fn\">r</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">x</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L335-L336","name":"Ordinal.toType_noMax_of_succ_lt","line":335,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.toType_noMax_of_succ_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.toType_noMax_of_succ_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toType_noMax_of_succ_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\">∀ <span class=\"fn\">a</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#NoMaxOrder\">NoMaxOrder</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L328-L333","name":"Ordinal.has_succ_of_type_succ_lt","line":328,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.has_succ_of_type_succ_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.has_succ_of_type_succ_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">has_succ_of_type_succ_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">wo</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <span class=\"fn\">α</span> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ <span class=\"fn\">a</span> &lt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">type</a> <span class=\"fn\">r</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">type</a> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">y</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L324-L326","name":"Ordinal.enum_succ_eq_top","line":324,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.enum_succ_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.enum_succ_eq_top\"><span class=\"name\">Ordinal</span>.<span class=\"name\">enum_succ_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.enum\">enum</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span></span>)</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">o</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L321-L322","name":"Ordinal.orderTopToTypeSucc","line":321,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.orderTopToTypeSucc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.orderTopToTypeSucc\"><span class=\"name\">Ordinal</span>.<span class=\"name\">orderTopToTypeSucc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L315-L319","name":"Ordinal.boundedLimitRec_limit","line":315,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.boundedLimitRec_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.boundedLimitRec_limit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">boundedLimitRec_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lLim</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">motive</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span> → <a href=\"./foundational_types.html\">Sort</a> u_5</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₁</span> : <span class=\"fn\"><span class=\"fn\">motive</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">0</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₂</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span> → <span class=\"fn\"><span class=\"fn\">motive</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">↑<span class=\"fn\">o</span></span></span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₃</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> → <span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">o'</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>) → <span class=\"fn\"><span class=\"fn\">o'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o'</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oLim</span> : <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.boundedLimitRecOn\">boundedLimitRecOn</a> <span class=\"fn\">lLim</span> <span class=\"fn\">o</span> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span> <span class=\"fn\">H₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">H₃</span> <span class=\"fn\">o</span> <span class=\"fn\">oLim</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>) (<span class=\"fn\">x_1</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.boundedLimitRecOn\">boundedLimitRecOn</a> <span class=\"fn\">lLim</span> <span class=\"fn\">x</span> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span> <span class=\"fn\">H₃</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L308-L313","name":"Ordinal.boundedLimitRec_succ","line":308,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.boundedLimitRec_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.boundedLimitRec_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">boundedLimitRec_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lLim</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">motive</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span> → <a href=\"./foundational_types.html\">Sort</a> u_5</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₁</span> : <span class=\"fn\"><span class=\"fn\">motive</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">0</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₂</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span> → <span class=\"fn\"><span class=\"fn\">motive</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">↑<span class=\"fn\">o</span></span></span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₃</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> → <span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">o'</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>) → <span class=\"fn\"><span class=\"fn\">o'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o'</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.boundedLimitRecOn\">boundedLimitRecOn</a> <span class=\"fn\">lLim</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">↑<span class=\"fn\">o</span></span></span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span> <span class=\"fn\">H₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">H₂</span> <span class=\"fn\">o</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.boundedLimitRecOn\">boundedLimitRecOn</a> <span class=\"fn\">lLim</span> <span class=\"fn\">o</span> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span> <span class=\"fn\">H₃</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L303-L306","name":"Ordinal.boundedLimitRec_zero","line":303,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.boundedLimitRec_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.boundedLimitRec_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">boundedLimitRec_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lLim</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">motive</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span> → <a href=\"./foundational_types.html\">Sort</a> u_5</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₁</span> : <span class=\"fn\"><span class=\"fn\">motive</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">0</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₂</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span> → <span class=\"fn\"><span class=\"fn\">motive</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">↑<span class=\"fn\">o</span></span></span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₃</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> → <span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">o'</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>) → <span class=\"fn\"><span class=\"fn\">o'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o'</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.boundedLimitRecOn\">boundedLimitRecOn</a> <span class=\"fn\">lLim</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">0</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span> <span class=\"fn\">H₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H₁</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L292-L301","name":"Ordinal.boundedLimitRecOn","line":292,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.boundedLimitRecOn","doc":"Bounded recursion on ordinals. Similar to `limitRecOn`, with the assumption `o < l`\nadded to all cases. The final term's domain is the ordinals below `l`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.boundedLimitRecOn\"><span class=\"name\">Ordinal</span>.<span class=\"name\">boundedLimitRecOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lLim</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">motive</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span> → <a href=\"./foundational_types.html\">Sort</a> u_4</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zero</span> : <span class=\"fn\"><span class=\"fn\">motive</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">0</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">succ</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span> → <span class=\"fn\"><span class=\"fn\">motive</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">↑<span class=\"fn\">o</span></span></span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isLimit</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> → <span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">o'</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">l</span>)</span></span>) → <span class=\"fn\"><span class=\"fn\">o'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o'</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L287-L290","name":"Ordinal.limitRecOn_limit","line":287,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limitRecOn_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limitRecOn_limit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">limitRecOn_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">motive</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./foundational_types.html\">Sort</a> u_5</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₁</span> : <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₂</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₃</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> → <span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">o'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>) → <span class=\"fn\"><span class=\"fn\">o'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o'</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limitRecOn\">limitRecOn</a> <span class=\"fn\">o</span> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span> <span class=\"fn\">H₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">H₃</span> <span class=\"fn\">o</span> <span class=\"fn\">h</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>) (<span class=\"fn\">_h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limitRecOn\">limitRecOn</a> <span class=\"fn\">x</span> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span> <span class=\"fn\">H₃</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L282-L285","name":"Ordinal.limitRecOn_succ","line":282,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limitRecOn_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limitRecOn_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">limitRecOn_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">motive</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./foundational_types.html\">Sort</a> u_5</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₁</span> : <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₂</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₃</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> → <span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">o'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>) → <span class=\"fn\"><span class=\"fn\">o'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o'</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limitRecOn\">limitRecOn</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span> <span class=\"fn\">H₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">H₂</span> <span class=\"fn\">o</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limitRecOn\">limitRecOn</a> <span class=\"fn\">o</span> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span> <span class=\"fn\">H₃</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L278-L280","name":"Ordinal.limitRecOn_zero","line":278,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limitRecOn_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limitRecOn_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">limitRecOn_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">motive</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a> → <a href=\"./foundational_types.html\">Sort</a> u_5</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₁</span> : <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₂</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₃</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> → <span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">o'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>) → <span class=\"fn\"><span class=\"fn\">o'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o'</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limitRecOn\">limitRecOn</a> <span class=\"fn\">0</span> <span class=\"fn\">H₁</span> <span class=\"fn\">H₂</span> <span class=\"fn\">H₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H₁</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L268-L276","name":"Ordinal.limitRecOn","line":268,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limitRecOn","doc":"Main induction principle of ordinals: if one can prove a property by\ninduction at successor ordinals and at limit ordinals, then it holds for all ordinals. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limitRecOn\"><span class=\"name\">Ordinal</span>.<span class=\"name\">limitRecOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">motive</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a> → <a href=\"./foundational_types.html\">Sort</a> u_4</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zero</span> : <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">succ</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isLimit</span> : <span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> → <span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">o'</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_5}</a>) → <span class=\"fn\"><span class=\"fn\">o'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o'</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L265-L266","name":"Ordinal.IsLimit.iSup_Iio","line":265,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.iSup_Iio","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.iSup_Iio\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">iSup_Iio</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⨆ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>), <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L259-L263","name":"Ordinal.IsLimit.sSup_Iio","line":259,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.sSup_Iio","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.sSup_Iio\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">sSup_Iio</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#SupSet.sSup\">sSup</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L255-L256","name":"Ordinal.isLimit_of_not_succ_of_ne_zero","line":255,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_of_not_succ_of_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_of_not_succ_of_ne_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isLimit_of_not_succ_of_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>), <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'</span> : <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L252-L253","name":"Ordinal.zero_or_succ_or_limit","line":252,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.zero_or_succ_or_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.zero_or_succ_or_limit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">zero_or_succ_or_limit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">(∃ (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>), <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L248-L250","name":"Ordinal.IsLimit.nat_lt","line":248,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.nat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.nat_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">nat_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L245-L246","name":"Ordinal.IsLimit.one_lt","line":245,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.one_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.one_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">one_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L242-L243","name":"Ordinal.IsLimit.ne_zero","line":242,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.ne_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L239-L240","name":"Ordinal.IsLimit.pos","line":239,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.pos\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L235-L237","name":"Ordinal.lift_isLimit","line":235,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_isLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_isLimit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lift_isLimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{v}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u, v}</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L231-L233","name":"Ordinal.lt_limit","line":231,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_limit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">x</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L227-L229","name":"Ordinal.limit_le","line":227,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limit_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.limit_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">limit_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">x</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L224-L225","name":"Ordinal.le_succ_of_isLimit","line":224,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_succ_of_isLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.le_succ_of_isLimit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_succ_of_isLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L221-L222","name":"Ordinal.succ_lt_of_isLimit","line":221,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.succ_lt_of_isLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.succ_lt_of_isLimit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">succ_lt_of_isLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L218-L219","name":"Ordinal.not_succ_of_isLimit","line":218,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.not_succ_of_isLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.not_succ_of_isLimit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">not_succ_of_isLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>), <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L215-L216","name":"Ordinal.not_succ_isLimit","line":215,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.not_succ_isLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.not_succ_isLimit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">not_succ_isLimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L212-L213","name":"Ordinal.not_zero_isLimit","line":212,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.not_zero_isLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.not_zero_isLimit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">not_zero_isLimit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L210-L210","name":"Ordinal.isSuccPrelimit_zero","line":210,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isSuccPrelimit_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isSuccPrelimit_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isSuccPrelimit_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccPrelimit\">Order.IsSuccPrelimit</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L207-L208","name":"Ordinal.IsLimit.succ_lt","line":207,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.succ_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.succ_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">succ_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span> → <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L204-L205","name":"Ordinal.IsLimit.isSuccPrelimit","line":204,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.isSuccPrelimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit.isSuccPrelimit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsLimit</span>.<span class=\"name\">isSuccPrelimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccPrelimit\">Order.IsSuccPrelimit</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L201-L202","name":"Ordinal.isLimit_iff","line":201,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.isLimit_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isLimit_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\">IsLimit</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccPrelimit\">Order.IsSuccPrelimit</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L195-L199","name":"Ordinal.IsLimit","line":195,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit","doc":"A limit ordinal is an ordinal which is not zero and not a successor.\n\nTODO: deprecate this in favor of `Order.IsSuccLimit`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsLimit\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsLimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L186-L190","name":"Ordinal.lift_pred","line":186,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_pred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_pred\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lift_pred</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{v}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u, v}</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred\">pred</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u, v}</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred\">pred</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L179-L184","name":"Ordinal.lift_is_succ","line":179,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_is_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_is_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lift_is_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{v}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∃ (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max v u}</a>), <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u, v}</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{v}</a>), <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L176-L177","name":"Ordinal.pred_le","line":176,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">pred_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred\">pred</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L169-L174","name":"Ordinal.lt_pred","line":169,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_pred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lt_pred\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lt_pred</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred\">pred</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L166-L167","name":"Ordinal.succ_lt_of_not_succ","line":166,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.succ_lt_of_not_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.succ_lt_of_not_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">succ_lt_of_not_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>), <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L163-L164","name":"Ordinal.succ_pred_iff_is_succ","line":163,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.succ_pred_iff_is_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.succ_pred_iff_is_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">succ_pred_iff_is_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred\">pred</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>), <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L159-L161","name":"Ordinal.pred_zero","line":159,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">pred_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred\">pred</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L155-L157","name":"Ordinal.pred_lt_iff_is_succ","line":155,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred_lt_iff_is_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred_lt_iff_is_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">pred_lt_iff_is_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred\">pred</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>), <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L152-L153","name":"Ordinal.pred_eq_iff_not_succ'","line":152,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred_eq_iff_not_succ'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred_eq_iff_not_succ'\"><span class=\"name\">Ordinal</span>.<span class=\"name\">pred_eq_iff_not_succ'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred\">pred</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>), <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L149-L150","name":"Ordinal.pred_eq_iff_not_succ","line":149,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred_eq_iff_not_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred_eq_iff_not_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">pred_eq_iff_not_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred\">pred</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>), <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L142-L147","name":"Ordinal.pred_le_self","line":142,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred_le_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred_le_self\"><span class=\"name\">Ordinal</span>.<span class=\"name\">pred_le_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred\">pred</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L137-L140","name":"Ordinal.pred_succ","line":137,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">pred_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred\">pred</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L132-L135","name":"Ordinal.pred","line":132,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred","doc":"The ordinal predecessor of `o` is `o'` if `o = succ o'`,\nand `o` otherwise. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.pred\"><span class=\"name\">Ordinal</span>.<span class=\"name\">pred</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L126-L127","name":"Ordinal.right_eq_zero_of_add_eq_zero","line":126,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.right_eq_zero_of_add_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.right_eq_zero_of_add_eq_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">right_eq_zero_of_add_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L123-L124","name":"Ordinal.left_eq_zero_of_add_eq_zero","line":123,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.left_eq_zero_of_add_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.left_eq_zero_of_add_eq_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">left_eq_zero_of_add_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L118-L121","name":"Ordinal.add_eq_zero_iff","line":118,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_eq_zero_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L115-L116","name":"Ordinal.add_right_cancel","line":115,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_right_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_right_cancel\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_right_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L110-L113","name":"Ordinal.add_le_add_iff_right","line":110,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_le_add_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_le_add_iff_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_le_add_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L107-L108","name":"Ordinal.instAddRightReflectLT","line":107,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.instAddRightReflectLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.instAddRightReflectLT\"><span class=\"name\">Ordinal</span>.<span class=\"name\">instAddRightReflectLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Unbundled/Defs.html#AddRightReflectLT\">AddRightReflectLT</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L104-L105","name":"Ordinal.instAddLeftReflectLT","line":104,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.instAddLeftReflectLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.instAddLeftReflectLT\"><span class=\"name\">Ordinal</span>.<span class=\"name\">instAddLeftReflectLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Unbundled/Defs.html#AddLeftReflectLT\">AddLeftReflectLT</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L101-L102","name":"Ordinal.instAddLeftStrictMono","line":101,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.instAddLeftStrictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.instAddLeftStrictMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">instAddLeftStrictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Unbundled/Defs.html#AddLeftStrictMono\">AddLeftStrictMono</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L94-L96","name":"Ordinal.add_left_cancel","line":94,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_left_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.add_left_cancel\"><span class=\"name\">Ordinal</span>.<span class=\"name\">add_left_cancel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L91-L92","name":"Ordinal.instIsLeftCancelAdd","line":91,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.instIsLeftCancelAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.instIsLeftCancelAdd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">instIsLeftCancelAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelAdd\">IsLeftCancelAdd</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_4}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L75-L89","name":"Ordinal.instAddLeftReflectLE","line":75,"kind":"instance","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.instAddLeftReflectLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.instAddLeftReflectLE\"><span class=\"name\">Ordinal</span>.<span class=\"name\">instAddLeftReflectLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Unbundled/Defs.html#AddLeftReflectLE\">AddLeftReflectLE</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L70-L73","name":"Ordinal.lift_succ","line":70,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lift_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{v}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u, v}</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u, v}</a> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/SetTheory/Ordinal/Arithmetic.lean#L63-L68","name":"Ordinal.lift_add","line":63,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.lift_add\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lift_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{v}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u, v}</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u, v}</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{u, v}</a> <span class=\"fn\">b</span></span></div></div>"}]}