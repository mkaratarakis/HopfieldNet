{"name":"Mathlib.ModelTheory.LanguageMap","instances":[{"typeNames":["FirstOrder.Language.LHom"],"name":"FirstOrder.Language.LHom.instInhabited","className":"Inhabited"},{"typeNames":["FirstOrder.Language.LHom"],"name":"FirstOrder.Language.LHom.instUniqueOfIsAlgebraicOfIsRelational","className":"Unique"},{"typeNames":["FirstOrder.Language.LHom.id"],"name":"FirstOrder.Language.LHom.id_isExpansionOn","className":"FirstOrder.Language.LHom.IsExpansionOn"},{"typeNames":["FirstOrder.Language.LHom.ofIsEmpty"],"name":"FirstOrder.Language.LHom.ofIsEmpty_isExpansionOn","className":"FirstOrder.Language.LHom.IsExpansionOn"},{"typeNames":["FirstOrder.Language.LHom.sumElim"],"name":"FirstOrder.Language.LHom.sumElim_isExpansionOn","className":"FirstOrder.Language.LHom.IsExpansionOn"},{"typeNames":["FirstOrder.Language.LHom.sumMap"],"name":"FirstOrder.Language.LHom.sumMap_isExpansionOn","className":"FirstOrder.Language.LHom.IsExpansionOn"},{"typeNames":["FirstOrder.Language.LHom.sumInl"],"name":"FirstOrder.Language.LHom.sumInl_isExpansionOn","className":"FirstOrder.Language.LHom.IsExpansionOn"},{"typeNames":["FirstOrder.Language.LHom.sumInr"],"name":"FirstOrder.Language.LHom.sumInr_isExpansionOn","className":"FirstOrder.Language.LHom.IsExpansionOn"},{"typeNames":[],"name":"FirstOrder.Language.LHom.isExpansionOn_reduct","className":"FirstOrder.Language.LHom.IsExpansionOn"},{"typeNames":["FirstOrder.Language.LEquiv"],"name":"FirstOrder.Language.LEquiv.instInhabited","className":"Inhabited"},{"typeNames":["FirstOrder.Language.Relations"],"name":"FirstOrder.Language.isAlgebraic_constantsOn","className":"IsEmpty"},{"typeNames":["FirstOrder.Language.Functions"],"name":"FirstOrder.Language.isEmpty_functions_constantsOn_succ","className":"IsEmpty"},{"typeNames":["FirstOrder.Language.Functions"],"name":"FirstOrder.Language.isRelational_constantsOn","className":"IsEmpty"},{"typeNames":["FirstOrder.Language.constantsOn"],"name":"FirstOrder.Language.paramsStructure","className":"FirstOrder.Language.Structure"},{"typeNames":["FirstOrder.Language.constantsOn"],"name":"FirstOrder.Language.constantsOnSelfStructure","className":"FirstOrder.Language.Structure"},{"typeNames":["FirstOrder.Language.withConstants"],"name":"FirstOrder.Language.withConstantsSelfStructure","className":"FirstOrder.Language.Structure"},{"typeNames":["FirstOrder.Language.lhomWithConstants"],"name":"FirstOrder.Language.withConstants_self_expansion","className":"FirstOrder.Language.LHom.IsExpansionOn"},{"typeNames":["FirstOrder.Language.withConstants"],"name":"FirstOrder.Language.withConstantsStructure","className":"FirstOrder.Language.Structure"},{"typeNames":["FirstOrder.Language.lhomWithConstants"],"name":"FirstOrder.Language.withConstants_expansion","className":"FirstOrder.Language.LHom.IsExpansionOn"},{"typeNames":["FirstOrder.Language.LEquiv.toLHom"],"name":"FirstOrder.Language.addEmptyConstants_is_expansion_on'","className":"FirstOrder.Language.LHom.IsExpansionOn"},{"typeNames":["FirstOrder.Language.LEquiv.toLHom"],"name":"FirstOrder.Language.addEmptyConstants_symm_isExpansionOn","className":"FirstOrder.Language.LHom.IsExpansionOn"},{"typeNames":["FirstOrder.Language.LHom.addConstants"],"name":"FirstOrder.Language.addConstants_expansion","className":"FirstOrder.Language.LHom.IsExpansionOn"},{"typeNames":["FirstOrder.Language.LHom.constantsOnMap"],"name":"FirstOrder.Language.constantsOnMap_inclusion_isExpansionOn","className":"FirstOrder.Language.LHom.IsExpansionOn"},{"typeNames":["FirstOrder.Language.lhomWithConstantsMap"],"name":"FirstOrder.Language.map_constants_inclusion_isExpansionOn","className":"FirstOrder.Language.LHom.IsExpansionOn"}],"imports":["Init","Mathlib.ModelTheory.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L506-L508","name":"FirstOrder.Language.map_constants_inclusion_isExpansionOn","line":506,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.map_constants_inclusion_isExpansionOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.map_constants_inclusion_isExpansionOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">map_constants_inclusion_isExpansionOn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">A</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstantsMap\">lhomWithConstantsMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Inclusion.html#Set.inclusion\">Set.inclusion</a> <span class=\"fn\">h</span>)</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L502-L504","name":"FirstOrder.Language.constantsOnMap_inclusion_isExpansionOn","line":502,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOnMap_inclusion_isExpansionOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOnMap_inclusion_isExpansionOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">constantsOnMap_inclusion_isExpansionOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">A</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.constantsOnMap\">LHom.constantsOnMap</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Inclusion.html#Set.inclusion\">Set.inclusion</a> <span class=\"fn\">h</span>)</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L496-L498","name":"FirstOrder.Language.coe_con","line":496,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.coe_con","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.coe_con\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">coe_con</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.con\">con</a></span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L491-L492","name":"FirstOrder.Language.withConstants_funMap_sum_inr","line":491,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_funMap_sum_inr","doc":"**Alias** of `FirstOrder.Language.withConstants_funMap_sumInr`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_funMap_sum_inr\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">withConstants_funMap_sum_inr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.con\">con</a></span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L485-L489","name":"FirstOrder.Language.withConstants_funMap_sumInr","line":485,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_funMap_sumInr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_funMap_sumInr\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">withConstants_funMap_sumInr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.con\">con</a></span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L481-L483","name":"FirstOrder.Language.addConstants_expansion","line":481,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.addConstants_expansion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.addConstants_expansion\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">addConstants_expansion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.addConstants\">LHom.addConstants</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L477-L479","name":"FirstOrder.Language.addEmptyConstants_symm_isExpansionOn","line":477,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.addEmptyConstants_symm_isExpansionOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.addEmptyConstants_symm_isExpansionOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">addEmptyConstants_symm_isExpansionOn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.addEmptyConstants\">LEquiv.addEmptyConstants</a> <span class=\"fn\">L</span> <span class=\"fn\">↑<a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.symm\">symm</a></span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.toLHom\">toLHom</a></span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L473-L475","name":"FirstOrder.Language.addEmptyConstants_is_expansion_on'","line":473,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.addEmptyConstants_is_expansion_on'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.addEmptyConstants_is_expansion_on'\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">addEmptyConstants_is_expansion_on'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.addEmptyConstants\">LEquiv.addEmptyConstants</a> <span class=\"fn\">L</span> <span class=\"fn\">↑<a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.toLHom\">toLHom</a></span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L470-L471","name":"FirstOrder.Language.withConstants_expansion","line":470,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_expansion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_expansion\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">withConstants_expansion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants\">lhomWithConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L467-L468","name":"FirstOrder.Language.withConstantsStructure","line":467,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstantsStructure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstantsStructure\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">withConstantsStructure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\">withConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L462-L463","name":"FirstOrder.Language.withConstants_self_expansion","line":462,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_self_expansion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_self_expansion\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">withConstants_self_expansion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants\">lhomWithConstants</a></span> <span class=\"fn\">M</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L459-L460","name":"FirstOrder.Language.withConstantsSelfStructure","line":459,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstantsSelfStructure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstantsSelfStructure\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">withConstantsSelfStructure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\">withConstants</a></span> <span class=\"fn\">M</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L456-L457","name":"FirstOrder.Language.constantsOnSelfStructure","line":456,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOnSelfStructure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOnSelfStructure\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">constantsOnSelfStructure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">M</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L448-L450","name":"FirstOrder.Language.LHom.map_constants_comp_sumInl","line":448,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.map_constants_comp_sumInl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.map_constants_comp_sumInl\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">map_constants_comp_sumInl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstantsMap\">lhomWithConstantsMap</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl\">LHom.sumInl</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants\">lhomWithConstants</a></span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L444-L446","name":"FirstOrder.Language.lhomWithConstantsMap","line":444,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstantsMap","doc":"The language map extending the constant set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstantsMap\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">lhomWithConstantsMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\">withConstants</a></span> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\">withConstants</a></span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L441-L442","name":"FirstOrder.Language.withConstants_relMap_sum_inl","line":441,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_relMap_sum_inl","doc":"**Alias** of `FirstOrder.Language.withConstants_relMap_sumInl`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_relMap_sum_inl\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">withConstants_relMap_sum_inl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\">withConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants\">lhomWithConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.RelMap\">Structure.RelMap</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.RelMap\">Structure.RelMap</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L439-L440","name":"FirstOrder.Language.withConstants_funMap_sum_inl","line":439,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_funMap_sum_inl","doc":"**Alias** of `FirstOrder.Language.withConstants_funMap_sumInl`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_funMap_sum_inl\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">withConstants_funMap_sum_inl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\">withConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants\">lhomWithConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L434-L437","name":"FirstOrder.Language.withConstants_relMap_sumInl","line":434,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_relMap_sumInl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_relMap_sumInl\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">withConstants_relMap_sumInl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\">withConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants\">lhomWithConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.RelMap\">Structure.RelMap</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.RelMap\">Structure.RelMap</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L429-L432","name":"FirstOrder.Language.withConstants_funMap_sumInl","line":429,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_funMap_sumInl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants_funMap_sumInl\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">withConstants_funMap_sumInl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\">withConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants\">lhomWithConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L418-L418","name":"FirstOrder.Language.LEquiv.addEmptyConstants_invLHom","line":418,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.addEmptyConstants_invLHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.addEmptyConstants_invLHom\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">addEmptyConstants_invLHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">ie</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.addEmptyConstants\">addEmptyConstants</a> <span class=\"fn\">L</span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.invLHom\">invLHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id\">LHom.id</a> <span class=\"fn\">L</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim\">sumElim</a></span> <span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.ofIsEmpty\">LHom.ofIsEmpty</a> <span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">L</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L418-L418","name":"FirstOrder.Language.LEquiv.addEmptyConstants_toLHom","line":418,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.addEmptyConstants_toLHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.addEmptyConstants_toLHom\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">addEmptyConstants_toLHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">ie</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.addEmptyConstants\">addEmptyConstants</a> <span class=\"fn\">L</span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.toLHom\">toLHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants\">lhomWithConstants</a></span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L417-L425","name":"FirstOrder.Language.LEquiv.addEmptyConstants","line":417,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.addEmptyConstants","doc":"The language map removing an empty constant set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.addEmptyConstants\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">addEmptyConstants</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">ie</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\">withConstants</a></span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L412-L413","name":"FirstOrder.Language.paramsStructure","line":412,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.paramsStructure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.paramsStructure\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">paramsStructure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">↑<span class=\"fn\">A</span></span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L408-L410","name":"FirstOrder.Language.LHom.addConstants","line":408,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.addConstants","doc":"Adds constants to a language map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.addConstants\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">addConstants</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\">withConstants</a></span> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\">withConstants</a></span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L402-L404","name":"FirstOrder.Language.con","line":402,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.con","doc":"The constant symbol indexed by a particular element. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.con\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">con</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w'}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\">withConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Constants\">Constants</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L397-L398","name":"FirstOrder.Language.lhomWithConstants_injective","line":397,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants_injective\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">lhomWithConstants_injective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants\">lhomWithConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective\">Injective</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L393-L393","name":"FirstOrder.Language.lhomWithConstants_onRelation","line":393,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants_onRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants_onRelation\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">lhomWithConstants_onRelation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants\">lhomWithConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">val</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L393-L393","name":"FirstOrder.Language.lhomWithConstants_onFunction","line":393,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants_onFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants_onFunction\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">lhomWithConstants_onFunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants\">lhomWithConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">val</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L392-L395","name":"FirstOrder.Language.lhomWithConstants","line":392,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants","doc":"The language map adding constants. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.lhomWithConstants\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">lhomWithConstants</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\">withConstants</a></span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L387-L390","name":"FirstOrder.Language.card_withConstants","line":387,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.card_withConstants","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.card_withConstants\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">card_withConstants</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\">withConstants</a></span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.card\">card</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">Cardinal.lift.{w', max u v}</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.card\">card</a></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">Cardinal.lift.{max u v, w'}</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L384-L385","name":"FirstOrder.«term_[[_]]»","line":384,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.«term_[[_]]»","doc":"Extends a language with a constant for each element of a parameter set in `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.«term_[[_]]»\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">«term_[[_]]»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L380-L382","name":"FirstOrder.Language.withConstants","line":380,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants","doc":"Extends a language with a constant for each element of a parameter set in `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.withConstants\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">withConstants</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w')</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L361-L368","name":"FirstOrder.Language.constantsOnMap_isExpansionOn","line":361,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOnMap_isExpansionOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOnMap_isExpansionOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">constantsOnMap_isExpansionOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">fα</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">fβ</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">fβ</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fα</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.constantsOnMap\">LHom.constantsOnMap</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L355-L359","name":"FirstOrder.Language.LHom.constantsOnMap","line":355,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.constantsOnMap","doc":"A map between index types induces a map between constant languages. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.constantsOnMap\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">constantsOnMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v'}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L347-L351","name":"FirstOrder.Language.constantsOn.structure","line":347,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn.structure","doc":"Gives a `constantsOn α` structure to a type by assigning each constant a value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn.structure\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">constantsOn</span>.<span class=\"name\">structure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L344-L345","name":"FirstOrder.Language.card_constantsOn","line":344,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.card_constantsOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.card_constantsOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">card_constantsOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.card\">card</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L341-L342","name":"FirstOrder.Language.isRelational_constantsOn","line":341,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.isRelational_constantsOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.isRelational_constantsOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">isRelational_constantsOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_ie</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.IsRelational\">IsRelational</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L338-L339","name":"FirstOrder.Language.isEmpty_functions_constantsOn_succ","line":338,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.isEmpty_functions_constantsOn_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.isEmpty_functions_constantsOn_succ\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">isEmpty_functions_constantsOn_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L334-L336","name":"FirstOrder.Language.isAlgebraic_constantsOn","line":334,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.isAlgebraic_constantsOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.isAlgebraic_constantsOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">isAlgebraic_constantsOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.IsAlgebraic\">IsAlgebraic</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L331-L332","name":"FirstOrder.Language.constantsOn_constants","line":331,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn_constants","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn_constants\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">constantsOn_constants</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Constants\">Constants</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L326-L326","name":"FirstOrder.Language.constantsOn_Relations","line":326,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn_Relations","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn_Relations\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">constantsOn_Relations</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u')</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">x✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Empty\">Empty</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L326-L326","name":"FirstOrder.Language.constantsOn_Functions","line":326,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn_Functions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn_Functions\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">constantsOn_Functions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u')</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\">constantsOn</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOnFunc\">constantsOnFunc</a> <span class=\"fn\">α</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L325-L327","name":"FirstOrder.Language.constantsOn","line":325,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn","doc":"A language with constants indexed by a type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">constantsOn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u')</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L319-L323","name":"FirstOrder.Language.constantsOnFunc","line":319,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOnFunc","doc":"The type of functions for a language consisting only of constant symbols. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.constantsOnFunc\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">constantsOnFunc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u')</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a> u'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L307-L307","name":"FirstOrder.Language.LEquiv.trans_invLHom","line":307,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.trans_invLHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.trans_invLHom\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">trans_invLHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L''</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e'</span> : <span class=\"fn\">L'</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L''</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.trans\">trans</a></span> <span class=\"fn\">e'</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.invLHom\">invLHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.invLHom\">invLHom</a></span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">e'</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.invLHom\">invLHom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L307-L307","name":"FirstOrder.Language.LEquiv.trans_toLHom","line":307,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.trans_toLHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.trans_toLHom\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">trans_toLHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L''</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e'</span> : <span class=\"fn\">L'</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L''</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.trans\">trans</a></span> <span class=\"fn\">e'</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.toLHom\">toLHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e'</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.toLHom\">toLHom</a></span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.toLHom\">toLHom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L306-L311","name":"FirstOrder.Language.LEquiv.trans","line":306,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.trans","doc":"The composition of equivalences of first-order languages. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.trans\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L''</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e'</span> : <span class=\"fn\">L'</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L''</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L''</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L302-L302","name":"FirstOrder.Language.LEquiv.symm_invLHom","line":302,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.symm_invLHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.symm_invLHom\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">symm_invLHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.symm\">symm</a></span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.invLHom\">invLHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.toLHom\">toLHom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L302-L302","name":"FirstOrder.Language.LEquiv.symm_toLHom","line":302,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.symm_toLHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.symm_toLHom\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">symm_toLHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.symm\">symm</a></span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.toLHom\">toLHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.invLHom\">invLHom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L301-L304","name":"FirstOrder.Language.LEquiv.symm","line":301,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.symm","doc":"The inverse of an equivalence of first-order languages. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.symm\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L'</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L296-L297","name":"FirstOrder.Language.LEquiv.instInhabited","line":296,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.instInhabited\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L292-L292","name":"FirstOrder.Language.LEquiv.refl_invLHom","line":292,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.refl_invLHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.refl_invLHom\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">refl_invLHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.refl\">LEquiv.refl</a> <span class=\"fn\">L</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.invLHom\">invLHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id\">LHom.id</a> <span class=\"fn\">L</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L292-L292","name":"FirstOrder.Language.LEquiv.refl_toLHom","line":292,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.refl_toLHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.refl_toLHom\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">refl_toLHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.refl\">LEquiv.refl</a> <span class=\"fn\">L</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.toLHom\">toLHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id\">LHom.id</a> <span class=\"fn\">L</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L291-L294","name":"FirstOrder.Language.LEquiv.refl","line":291,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.refl","doc":"The identity equivalence from a first-order language to itself. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.refl\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">refl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L285-L285","name":"FirstOrder.Language.«term_≃ᴸ_»","line":285,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.«term_≃ᴸ_»","doc":"A language equivalence maps the symbols of one language to symbols of another bijectively. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.«term_≃ᴸ_»\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">«term_≃ᴸ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L283-L283","name":"FirstOrder.Language.LEquiv.right_inv","line":283,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.right_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.right_inv\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">right_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.toLHom\">toLHom</a></span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.invLHom\">invLHom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id\">LHom.id</a> <span class=\"fn\">L'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L282-L282","name":"FirstOrder.Language.LEquiv.left_inv","line":282,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.left_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.left_inv\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">left_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.invLHom\">invLHom</a></span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.toLHom\">toLHom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id\">LHom.id</a> <span class=\"fn\">L</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L281-L281","name":"FirstOrder.Language.LEquiv.invLHom","line":281,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.invLHom","doc":"The inverse language homomorphism "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.invLHom\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">invLHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L'</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L279-L279","name":"FirstOrder.Language.LEquiv.toLHom","line":279,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.toLHom","doc":"The forward language homomorphism "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.toLHom\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">toLHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L277-L277","name":"FirstOrder.Language.LEquiv.mk","line":277,"kind":"ctor","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv.mk\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toLHom</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">invLHom</span> : <span class=\"fn\">L'</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">left_inv</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">invLHom</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">toLHom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id\">LHom.id</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">right_inv</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toLHom</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">invLHom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id\">LHom.id</a> <span class=\"fn\">L'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\">≃ᴸ</a> <span class=\"fn\">L'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L276-L283","name":"FirstOrder.Language.LEquiv","line":276,"kind":"structure","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv","doc":"A language equivalence maps the symbols of one language to symbols of another bijectively. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LEquiv\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max (max u_1 u_2) u_3) u_4)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L260-L272","name":"FirstOrder.Language.LHom.Injective.isExpansionOn_default","line":260,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective.isExpansionOn_default","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective.isExpansionOn_default\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">Injective</span>.<span class=\"name\">isExpansionOn_default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">f</span></span></span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">fun (<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">r</span></span></span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective\">Injective</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L255-L258","name":"FirstOrder.Language.LHom.isExpansionOn_reduct","line":255,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.isExpansionOn_reduct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.isExpansionOn_reduct\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">isExpansionOn_reduct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L252-L253","name":"FirstOrder.Language.LHom.sumInr_injective","line":252,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr_injective\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumInr_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr\">LHom.sumInr</a>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective\">Injective</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L249-L250","name":"FirstOrder.Language.LHom.sumInl_injective","line":249,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl_injective\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumInl_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl\">LHom.sumInl</a>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective\">Injective</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L244-L247","name":"FirstOrder.Language.LHom.funMap_sumInr","line":244,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.funMap_sumInr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.funMap_sumInr\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">funMap_sumInr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.sum\">sum</a></span> <span class=\"fn\">L</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr\">LHom.sumInr</a>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L239-L242","name":"FirstOrder.Language.LHom.funMap_sumInl","line":239,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.funMap_sumInl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.funMap_sumInl\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">funMap_sumInl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.sum\">sum</a></span> <span class=\"fn\">L'</span>)</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl\">LHom.sumInl</a>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L235-L237","name":"FirstOrder.Language.LHom.sumInr_isExpansionOn","line":235,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr_isExpansionOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr_isExpansionOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumInr_isExpansionOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr\">LHom.sumInr</a>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L231-L233","name":"FirstOrder.Language.LHom.sumInl_isExpansionOn","line":231,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl_isExpansionOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl_isExpansionOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumInl_isExpansionOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl\">LHom.sumInl</a>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L226-L229","name":"FirstOrder.Language.LHom.sumMap_isExpansionOn","line":226,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap_isExpansionOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap_isExpansionOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumMap_isExpansionOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₁</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₂</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">L₁</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L₁</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L₂</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap\">sumMap</a></span> <span class=\"fn\">ψ</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L221-L224","name":"FirstOrder.Language.LHom.sumElim_isExpansionOn","line":221,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim_isExpansionOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim_isExpansionOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumElim_isExpansionOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L''</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">L''</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L''</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim\">sumElim</a></span> <span class=\"fn\">ψ</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L218-L219","name":"FirstOrder.Language.LHom.ofIsEmpty_isExpansionOn","line":218,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.ofIsEmpty_isExpansionOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.ofIsEmpty_isExpansionOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">ofIsEmpty_isExpansionOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.IsAlgebraic\">IsAlgebraic</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.IsRelational\">IsRelational</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.ofIsEmpty\">LHom.ofIsEmpty</a> <span class=\"fn\">L</span> <span class=\"fn\">L'</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L215-L216","name":"FirstOrder.Language.LHom.id_isExpansionOn","line":215,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id_isExpansionOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id_isExpansionOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">id_isExpansionOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id\">LHom.id</a> <span class=\"fn\">L</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L210-L213","name":"FirstOrder.Language.LHom.map_onRelation","line":210,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.map_onRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.map_onRelation\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">map_onRelation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.RelMap\">Structure.RelMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">R</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.RelMap\">Structure.RelMap</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L205-L208","name":"FirstOrder.Language.LHom.map_onFunction","line":205,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.map_onFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.map_onFunction\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">map_onFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L201-L201","name":"FirstOrder.Language.LHom.IsExpansionOn.map_onRelation","line":201,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn.map_onRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn.map_onRelation\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">IsExpansionOn</span>.<span class=\"name\">map_onRelation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.RelMap\">Structure.RelMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">R</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.RelMap\">Structure.RelMap</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L198-L198","name":"FirstOrder.Language.LHom.IsExpansionOn.map_onFunction","line":198,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn.map_onFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn.map_onFunction\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">IsExpansionOn</span>.<span class=\"name\">map_onFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L197-L197","name":"FirstOrder.Language.LHom.IsExpansionOn.mk","line":197,"kind":"ctor","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn.mk\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">IsExpansionOn</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map_onFunction</span> :\n  <span class=\"fn\">∀ {<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>), <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.funMap\">Structure.funMap</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> := by\n  exact fun {n} =&gt; isEmptyElim)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map_onRelation</span> :\n  <span class=\"fn\">∀ {<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>} (<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>), <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.RelMap\">Structure.RelMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">R</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.RelMap\">Structure.RelMap</a> <span class=\"fn\">R</span> <span class=\"fn\">x</span></span></span> := by\n  exact fun {n} =&gt; isEmptyElim)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\">IsExpansionOn</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L195-L203","name":"FirstOrder.Language.LHom.IsExpansionOn","line":195,"kind":"class","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn","doc":"A language homomorphism is an expansion on a structure if it commutes with the interpretation of\nall symbols on that structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.IsExpansionOn\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">IsExpansionOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L182-L193","name":"FirstOrder.Language.LHom.defaultExpansion","line":182,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.defaultExpansion","doc":"Pulls an `L`-structure along a language map `ϕ : L →ᴸ L'`, and then expands it\nto an `L'`-structure arbitrarily. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.defaultExpansion\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">defaultExpansion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">f</span></span></span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">fun (<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">r</span></span></span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L180-L180","name":"FirstOrder.Language.LHom.Injective.onRelation","line":180,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective.onRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective.onRelation\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">Injective</span>.<span class=\"name\">onRelation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective\">Injective</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">R</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L179-L179","name":"FirstOrder.Language.LHom.Injective.onFunction","line":179,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective.onFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective.onFunction\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">Injective</span>.<span class=\"name\">onFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective\">Injective</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L178-L178","name":"FirstOrder.Language.LHom.Injective.mk","line":178,"kind":"ctor","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective.mk\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">Injective</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">onFunction</span> : <span class=\"fn\">∀ {<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">f</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">onRelation</span> : <span class=\"fn\">∀ {<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">R</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective\">Injective</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L177-L180","name":"FirstOrder.Language.LHom.Injective","line":177,"kind":"structure","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective","doc":"A language homomorphism is injective when all the maps between symbol types are. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.Injective\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">Injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L171-L173","name":"FirstOrder.Language.LHom.sumMap_comp_inr","line":171,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap_comp_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap_comp_inr\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumMap_comp_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₁</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₂</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">L₁</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap\">sumMap</a></span> <span class=\"fn\">ψ</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr\">LHom.sumInr</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr\">LHom.sumInr</a>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">ψ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L167-L169","name":"FirstOrder.Language.LHom.sumMap_comp_inl","line":167,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap_comp_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap_comp_inl\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumMap_comp_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₁</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₂</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">L₁</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap\">sumMap</a></span> <span class=\"fn\">ψ</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl\">LHom.sumInl</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl\">LHom.sumInl</a>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">ϕ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L162-L162","name":"FirstOrder.Language.LHom.sumMap_onRelation","line":162,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap_onRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap_onRelation\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumMap_onRelation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₁</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₂</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">L₁</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">_n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L₁</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap\">sumMap</a></span> <span class=\"fn\">ψ</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Data/Sum/Basic.html#Sum.map\">Sum.map</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">_n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L₁</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">_n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L162-L162","name":"FirstOrder.Language.LHom.sumMap_onFunction","line":162,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap_onFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap_onFunction\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumMap_onFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₁</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₂</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">L₁</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">_n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L₁</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap\">sumMap</a></span> <span class=\"fn\">ψ</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Data/Sum/Basic.html#Sum.map\">Sum.map</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">_n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L₁</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">_n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L161-L165","name":"FirstOrder.Language.LHom.sumMap","line":161,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap","doc":"The map between two sum-languages induced by maps on the two factors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumMap\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₁</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₂</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">L₁</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.sum\">sum</a></span> <span class=\"fn\">L₁</span></span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.sum\">sum</a></span> <span class=\"fn\">L₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L151-L153","name":"FirstOrder.Language.LHom.comp_sumElim","line":151,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp_sumElim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp_sumElim\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">comp_sumElim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L''</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">L''</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L3</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">L'</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L3</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">θ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim\">sumElim</a></span> <span class=\"fn\">ψ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">θ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">ϕ</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim\">sumElim</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">θ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">ψ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L148-L149","name":"FirstOrder.Language.LHom.sumElim_inl_inr","line":148,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim_inl_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim_inl_inr\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumElim_inl_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl\">LHom.sumInl</a>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim\">sumElim</a></span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr\">LHom.sumInr</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id\">LHom.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.sum\">sum</a></span> <span class=\"fn\">L'</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L145-L146","name":"FirstOrder.Language.LHom.sumElim_comp_inr","line":145,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim_comp_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim_comp_inr\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumElim_comp_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L''</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">L''</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim\">sumElim</a></span> <span class=\"fn\">ψ</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr\">LHom.sumInr</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ψ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L142-L143","name":"FirstOrder.Language.LHom.sumElim_comp_inl","line":142,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim_comp_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim_comp_inl\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumElim_comp_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L''</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">L''</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim\">sumElim</a></span> <span class=\"fn\">ψ</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl\">LHom.sumInl</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ϕ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L137-L137","name":"FirstOrder.Language.LHom.sumElim_onFunction","line":137,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim_onFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim_onFunction\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumElim_onFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L''</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">L''</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">_n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L''</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim\">sumElim</a></span> <span class=\"fn\">ψ</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Data/Sum/Basic.html#Sum.elim\">Sum.elim</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">_n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L''</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">_n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L137-L137","name":"FirstOrder.Language.LHom.sumElim_onRelation","line":137,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim_onRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim_onRelation\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumElim_onRelation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L''</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">L''</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">_n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L''</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim\">sumElim</a></span> <span class=\"fn\">ψ</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Data/Sum/Basic.html#Sum.elim\">Sum.elim</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">_n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ϕ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L''</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">_n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L136-L140","name":"FirstOrder.Language.LHom.sumElim","line":136,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim","doc":"A language map defined on two factors of a sum. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumElim\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumElim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L''</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">L''</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.sum\">sum</a></span> <span class=\"fn\">L''</span></span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L128-L130","name":"FirstOrder.Language.LHom.comp_assoc","line":128,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp_assoc\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">comp_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L''</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L3</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">L''</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L3</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\">L'</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L''</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">H</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L123-L126","name":"FirstOrder.Language.LHom.comp_id","line":123,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp_id\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">comp_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id\">LHom.id</a> <span class=\"fn\">L</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">F</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L118-L121","name":"FirstOrder.Language.LHom.id_comp","line":118,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id_comp\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">id_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id\">LHom.id</a> <span class=\"fn\">L'</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">F</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L110-L110","name":"FirstOrder.Language.LHom.comp_onRelation","line":110,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp_onRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp_onRelation\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">comp_onRelation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L''</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">L'</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L''</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">x✝</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L110-L110","name":"FirstOrder.Language.LHom.comp_onFunction","line":110,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp_onFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp_onFunction\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">comp_onFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L''</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">L'</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L''</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\">comp</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">F</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L109-L112","name":"FirstOrder.Language.LHom.comp","line":109,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp","doc":"The composition of two language homomorphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.comp\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L''</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">L'</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L''</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L''</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L106-L107","name":"FirstOrder.Language.LHom.instUniqueOfIsAlgebraicOfIsRelational","line":106,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.instUniqueOfIsAlgebraicOfIsRelational","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.instUniqueOfIsAlgebraicOfIsRelational\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">instUniqueOfIsAlgebraicOfIsRelational</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.IsAlgebraic\">IsAlgebraic</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.IsRelational\">IsRelational</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> (<span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L98-L98","name":"FirstOrder.Language.LHom.funext_iff","line":98,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.funext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.funext_iff\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">funext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">G</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L98-L104","name":"FirstOrder.Language.LHom.funext","line":98,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.funext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.funext\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">funext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_fun</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_rel</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">G</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L93-L93","name":"FirstOrder.Language.LHom.ofIsEmpty_onFunction","line":93,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.ofIsEmpty_onFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.ofIsEmpty_onFunction\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">ofIsEmpty_onFunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.IsAlgebraic\">IsAlgebraic</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.IsRelational\">IsRelational</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.ofIsEmpty\">LHom.ofIsEmpty</a> <span class=\"fn\">L</span> <span class=\"fn\">L'</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#isEmptyElim\">isEmptyElim</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L93-L93","name":"FirstOrder.Language.LHom.ofIsEmpty_onRelation","line":93,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.ofIsEmpty_onRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.ofIsEmpty_onRelation\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">ofIsEmpty_onRelation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.IsAlgebraic\">IsAlgebraic</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.IsRelational\">IsRelational</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.ofIsEmpty\">LHom.ofIsEmpty</a> <span class=\"fn\">L</span> <span class=\"fn\">L'</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#isEmptyElim\">isEmptyElim</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L92-L94","name":"FirstOrder.Language.LHom.ofIsEmpty","line":92,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.ofIsEmpty","doc":"The inclusion of an empty language into any other language. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.ofIsEmpty\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">ofIsEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.IsAlgebraic\">IsAlgebraic</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.IsRelational\">IsRelational</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L86-L86","name":"FirstOrder.Language.LHom.sumInr_onFunction","line":86,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr_onFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr_onFunction\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumInr_onFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr\">LHom.sumInr</a>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">val</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L86-L86","name":"FirstOrder.Language.LHom.sumInr_onRelation","line":86,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr_onRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr_onRelation\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumInr_onRelation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr\">LHom.sumInr</a>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">val</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L85-L88","name":"FirstOrder.Language.LHom.sumInr","line":85,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr","doc":"The inclusion of the right factor into the sum of two languages. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInr\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumInr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L'</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.sum\">sum</a></span> <span class=\"fn\">L'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L81-L81","name":"FirstOrder.Language.LHom.sumInl_onFunction","line":81,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl_onFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl_onFunction\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumInl_onFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl\">LHom.sumInl</a>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">val</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L81-L81","name":"FirstOrder.Language.LHom.sumInl_onRelation","line":81,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl_onRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl_onRelation\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumInl_onRelation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl\">LHom.sumInl</a>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">val</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L80-L83","name":"FirstOrder.Language.LHom.sumInl","line":80,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl","doc":"The inclusion of the left factor into the sum of two languages. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.sumInl\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">sumInl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.sum\">sum</a></span> <span class=\"fn\">L'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L77-L78","name":"FirstOrder.Language.LHom.instInhabited","line":77,"kind":"instance","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.instInhabited\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L73-L73","name":"FirstOrder.Language.LHom.id_onRelation","line":73,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id_onRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id_onRelation\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">id_onRelation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id\">LHom.id</a> <span class=\"fn\">L</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\">onRelation</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L73-L73","name":"FirstOrder.Language.LHom.id_onFunction","line":73,"kind":"theorem","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id_onFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id_onFunction\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">id_onFunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">_n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id\">LHom.id</a> <span class=\"fn\">L</span>)</span>.<a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\">onFunction</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L72-L75","name":"FirstOrder.Language.LHom.id","line":72,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id","doc":"The identity language homomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.id\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L67-L70","name":"FirstOrder.Language.LHom.reduct","line":67,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.reduct","doc":"Pulls a structure back along a language map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.reduct\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">reduct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ϕ</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L57-L58","name":"FirstOrder.Language.«term_→ᴸ_»","line":57,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.«term_→ᴸ_»","doc":"A language homomorphism maps the symbols of one language to symbols of another. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.«term_→ᴸ_»\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">«term_→ᴸ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L54-L54","name":"FirstOrder.Language.LHom.onRelation","line":54,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation","doc":"The mapping of relations "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onRelation\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">onRelation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>⦄</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L51-L51","name":"FirstOrder.Language.LHom.onFunction","line":51,"kind":"def","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction","doc":"The mapping of functions "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.onFunction\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">onFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>⦄</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L49-L49","name":"FirstOrder.Language.LHom.mk","line":49,"kind":"ctor","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom.mk\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">onFunction</span> : <span class=\"fn\">⦃<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>⦄ → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">n</span></span></span></span> := by exact fun {n} =&gt; isEmptyElim)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">onRelation</span> : <span class=\"fn\">⦃<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>⦄ → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span></span></span></span> := by exact fun {n} =&gt; isEmptyElim)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/ModelTheory/LanguageMap.lean#L48-L55","name":"FirstOrder.Language.LHom","line":48,"kind":"structure","docLink":"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom","doc":"A language homomorphism maps the symbols of one language to symbols of another. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">LHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L'</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max (max u u') v) v')</div></div>"}]}