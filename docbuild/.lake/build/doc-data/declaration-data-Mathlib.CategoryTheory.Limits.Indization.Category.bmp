{"name":"Mathlib.CategoryTheory.Limits.Indization.Category","instances":[{"typeNames":["CategoryTheory.Ind"],"name":"CategoryTheory.instCategoryInd","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Ind.inclusion"],"name":"CategoryTheory.instFullIndFunctorOppositeTypeInclusion","className":"CategoryTheory.Functor.Full"},{"typeNames":["CategoryTheory.Ind.inclusion"],"name":"CategoryTheory.instFaithfulIndFunctorOppositeTypeInclusion","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["CategoryTheory.Ind.yoneda"],"name":"CategoryTheory.instFullIndYoneda","className":"CategoryTheory.Functor.Full"},{"typeNames":["CategoryTheory.Ind.yoneda"],"name":"CategoryTheory.instFaithfulIndYoneda","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["CategoryTheory.Ind.inclusion"],"name":"CategoryTheory.instCreatesColimitsOfShapeIndFunctorOppositeTypeInclusionOfIsFiltered","className":"CategoryTheory.CreatesColimitsOfShape"},{"typeNames":["CategoryTheory.Ind"],"name":"CategoryTheory.instHasFilteredColimitsInd","className":"CategoryTheory.Limits.HasFilteredColimitsOfSize"},{"typeNames":["CategoryTheory.Discrete","CategoryTheory.Ind.inclusion"],"name":"CategoryTheory.instCreatesLimitsOfShapeIndFunctorOppositeTypeDiscreteInclusionOfHasLimitsOfShape","className":"CategoryTheory.CreatesLimitsOfShape"},{"typeNames":["CategoryTheory.Discrete","CategoryTheory.Ind"],"name":"CategoryTheory.instHasLimitsOfShapeDiscreteInd","className":"CategoryTheory.Limits.HasLimitsOfShape"},{"typeNames":["CategoryTheory.Limits.WalkingParallelPair","CategoryTheory.Ind.inclusion"],"name":"CategoryTheory.instCreatesLimitsOfShapeIndFunctorOppositeTypeWalkingParallelPairInclusionOfHasLimitsOfShape","className":"CategoryTheory.CreatesLimitsOfShape"},{"typeNames":["CategoryTheory.Limits.WalkingParallelPair","CategoryTheory.Ind"],"name":"CategoryTheory.instHasLimitsOfShapeWalkingParallelPairInd","className":"CategoryTheory.Limits.HasLimitsOfShape"},{"typeNames":["CategoryTheory.Ind.inclusion"],"name":"CategoryTheory.instCreatesFiniteLimitsIndFunctorOppositeTypeInclusionOfHasFiniteLimits","className":"CategoryTheory.Limits.CreatesFiniteLimits"},{"typeNames":["CategoryTheory.Ind"],"name":"CategoryTheory.instHasFiniteLimitsInd","className":"CategoryTheory.Limits.HasFiniteLimits"},{"typeNames":["CategoryTheory.Ind.inclusion"],"name":"CategoryTheory.instCreatesLimitsOfSizeIndFunctorOppositeTypeInclusionOfHasLimits","className":"CategoryTheory.CreatesLimitsOfSize"},{"typeNames":["CategoryTheory.Ind"],"name":"CategoryTheory.instHasLimitsInd","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["CategoryTheory.Ind.yoneda"],"name":"CategoryTheory.instPreservesLimitsIndYoneda","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["CategoryTheory.Ind.yoneda"],"name":"CategoryTheory.instRepresentablyCoflatIndYoneda","className":"CategoryTheory.RepresentablyCoflat"},{"typeNames":["CategoryTheory.Ind.yoneda"],"name":"CategoryTheory.instPreservesFiniteColimitsIndYoneda","className":"CategoryTheory.Limits.PreservesFiniteColimits"},{"typeNames":["CategoryTheory.Ind.lim"],"name":"CategoryTheory.instPreservesLimitsOfShapeFunctorIndLimOfFinCategoryOfHasLimitsOfShape","className":"CategoryTheory.Limits.PreservesLimitsOfShape"},{"typeNames":["CategoryTheory.Ind.lim"],"name":"CategoryTheory.instPreservesColimitsOfShapeFunctorIndLimOfFinCategoryOfHasColimitsOfShape","className":"CategoryTheory.Limits.PreservesColimitsOfShape"},{"typeNames":["CategoryTheory.Discrete","CategoryTheory.Ind"],"name":"CategoryTheory.instHasColimitsOfShapeDiscreteIndOfFinite","className":"CategoryTheory.Limits.HasColimitsOfShape"},{"typeNames":["CategoryTheory.Discrete","CategoryTheory.Ind"],"name":"CategoryTheory.instHasCoproductsIndOfHasFiniteCoproducts","className":"CategoryTheory.Limits.HasColimitsOfShape"},{"typeNames":["CategoryTheory.Limits.WalkingParallelPair","CategoryTheory.Ind"],"name":"CategoryTheory.instHasColimitsOfShapeWalkingParallelPairInd","className":"CategoryTheory.Limits.HasColimitsOfShape"},{"typeNames":["CategoryTheory.Ind"],"name":"CategoryTheory.instHasColimitsIndOfHasFiniteColimits","className":"CategoryTheory.Limits.HasColimitsOfSize"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Constructions.Filtered","Mathlib.CategoryTheory.Limits.FullSubcategory","Mathlib.CategoryTheory.Limits.ExactFunctor","Mathlib.CategoryTheory.Limits.Indization.Equalizers","Mathlib.CategoryTheory.Limits.Indization.LocallySmall","Mathlib.CategoryTheory.Limits.Indization.Products","Mathlib.CategoryTheory.Limits.Preserves.Presheaf"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L298-L302","name":"CategoryTheory.Ind.leftExactFunctorEquivalence","line":298,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.leftExactFunctorEquivalence","doc":"For small finitely cocomplete categories `C : Type u`, the category of Ind-objects `Ind C` is\nequivalent to the category of left-exact functors `Cᵒᵖ ⥤ Type u` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.leftExactFunctorEquivalence\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Ind</span>.<span class=\"name\">leftExactFunctorEquivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteLimits.html#CategoryTheory.Limits.HasFiniteColimits\">Limits.HasFiniteColimits</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./Mathlib/CategoryTheory/Limits/ExactFunctor.html#CategoryTheory.LeftExactFunctor\">⥤ₗ</a> <a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L281-L292","name":"CategoryTheory.Ind.exists_nonempty_arrow_mk_iso_ind_lim","line":281,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.exists_nonempty_arrow_mk_iso_ind_lim","doc":"A way to understand morphisms in `Ind C`: every morphism is induced by a natural transformation\nof diagrams. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.exists_nonempty_arrow_mk_iso_ind_lim\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Ind</span>.<span class=\"name\">exists_nonempty_arrow_mk_iso_ind_lim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> v) (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">I</span></span>) (<span class=\"fn\">x_1</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">IsFiltered</a> <span class=\"fn\">I</span></span>) (<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">I</span> <span class=\"fn\">C</span></span>) (<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">I</span> <span class=\"fn\">C</span></span>) (<span class=\"fn\">φ</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span>),\n  <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> (<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.lim\">Ind.lim</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">φ</span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L278-L279","name":"CategoryTheory.instHasColimitsIndOfHasFiniteColimits","line":278,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasColimitsIndOfHasFiniteColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasColimitsIndOfHasFiniteColimits\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instHasColimitsIndOfHasFiniteColimits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteLimits.html#CategoryTheory.Limits.HasFiniteColimits\">Limits.HasFiniteColimits</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimits\">Limits.HasColimits</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L270-L276","name":"CategoryTheory.instHasColimitsOfShapeWalkingParallelPairInd","line":270,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasColimitsOfShapeWalkingParallelPairInd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasColimitsOfShapeWalkingParallelPairInd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instHasColimitsOfShapeWalkingParallelPairInd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">Limits.WalkingParallelPair</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">Limits.WalkingParallelPair</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L259-L268","name":"CategoryTheory.IndParallelPairPresentation.parallelPairIsoParallelPairCompIndYoneda","line":259,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.IndParallelPairPresentation.parallelPairIsoParallelPairCompIndYoneda","doc":"Given an `IndParallelPairPresentation f g`, we can understand the parallel pair `(f, g)` as\nthe colimit of `(P.φ, P.ψ)` in `Ind C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.IndParallelPairPresentation.parallelPairIsoParallelPairCompIndYoneda\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">parallelPairIsoParallelPairCompIndYoneda</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\">Ind.inclusion</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\">Ind.inclusion</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">g</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">Limits.parallelPair</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.φ\">φ</a></span> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ψ\">ψ</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.lim\">Ind.lim</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.I\">I</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L254-L257","name":"CategoryTheory.instHasCoproductsIndOfHasFiniteCoproducts","line":254,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasCoproductsIndOfHasFiniteCoproducts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasCoproductsIndOfHasFiniteCoproducts\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instHasCoproductsIndOfHasFiniteCoproducts</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproducts\">Limits.HasCoproducts</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L235-L252","name":"CategoryTheory.instHasColimitsOfShapeDiscreteIndOfFinite","line":235,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasColimitsOfShapeDiscreteIndOfFinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasColimitsOfShapeDiscreteIndOfFinite\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instHasColimitsOfShapeDiscreteIndOfFinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L230-L233","name":"CategoryTheory.instPreservesColimitsOfShapeFunctorIndLimOfFinCategoryOfHasColimitsOfShape","line":230,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instPreservesColimitsOfShapeFunctorIndLimOfFinCategoryOfHasColimitsOfShape","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instPreservesColimitsOfShapeFunctorIndLimOfFinCategoryOfHasColimitsOfShape\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instPreservesColimitsOfShapeFunctorIndLimOfFinCategoryOfHasColimitsOfShape</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FinCategory/Basic.html#CategoryTheory.FinCategory\">FinCategory</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">α</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">IsFiltered</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimitsOfShape\">Limits.PreservesColimitsOfShape</a> <span class=\"fn\">α</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.lim\">Ind.lim</a> <span class=\"fn\">I</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L223-L228","name":"CategoryTheory.instPreservesLimitsOfShapeFunctorIndLimOfFinCategoryOfHasLimitsOfShape","line":223,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instPreservesLimitsOfShapeFunctorIndLimOfFinCategoryOfHasLimitsOfShape","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instPreservesLimitsOfShapeFunctorIndLimOfFinCategoryOfHasLimitsOfShape\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instPreservesLimitsOfShapeFunctorIndLimOfFinCategoryOfHasLimitsOfShape</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FinCategory/Basic.html#CategoryTheory.FinCategory\">FinCategory</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">Limits.HasLimitsOfShape</a> <span class=\"fn\">α</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">IsFiltered</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimitsOfShape\">Limits.PreservesLimitsOfShape</a> <span class=\"fn\">α</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.lim\">Ind.lim</a> <span class=\"fn\">I</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L208-L221","name":"CategoryTheory.Ind.limCompInclusion","line":208,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.limCompInclusion","doc":"Computing ind-lims in `Ind C` is the same as computing them in `Cᵒᵖ ⥤ Type v`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.limCompInclusion\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Ind</span>.<span class=\"name\">limCompInclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">IsFiltered</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.lim\">Ind.lim</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\">Ind.inclusion</a> <span class=\"fn\">C</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskeringRight\">whiskeringRight</a> <span class=\"fn\">I</span> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v))</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colim\">Limits.colim</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L202-L206","name":"CategoryTheory.Ind.lim","line":202,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.lim","doc":"This is the functor `(I ⥤ C) ⥤ Ind C` that sends a functor `F` to `colim (Y ∘ F)`, where `Y`\nis the Yoneda embedding. It is known as \"ind-lim\" and denoted `“colim”` in [Kashiwara2006]. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.lim\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Ind</span>.<span class=\"name\">lim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">IsFiltered</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">I</span> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L199-L200","name":"CategoryTheory.instPreservesFiniteColimitsIndYoneda","line":199,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instPreservesFiniteColimitsIndYoneda","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instPreservesFiniteColimitsIndYoneda\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instPreservesFiniteColimitsIndYoneda</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Finite.html#CategoryTheory.Limits.PreservesFiniteColimits\">Limits.PreservesFiniteColimits</a> <a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.yoneda\">Ind.yoneda</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L191-L197","name":"CategoryTheory.instRepresentablyCoflatIndYoneda","line":191,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instRepresentablyCoflatIndYoneda","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instRepresentablyCoflatIndYoneda\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instRepresentablyCoflatIndYoneda</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Flat.html#CategoryTheory.RepresentablyCoflat\">RepresentablyCoflat</a> <a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.yoneda\">Ind.yoneda</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L180-L189","name":"CategoryTheory.Ind.colimitPresentationCompYoneda","line":180,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.colimitPresentationCompYoneda","doc":"An ind-object `X` is the colimit (in `Ind C`!) of the filtered diagram presenting it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.colimitPresentationCompYoneda\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Ind</span>.<span class=\"name\">colimitPresentationCompYoneda</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit\">Limits.colimit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.presentation\">presentation</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation.F\">F</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.yoneda\">Ind.yoneda</a>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L176-L178","name":"CategoryTheory.Ind.presentation","line":176,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.presentation","doc":"Pick a presentation of an ind-object `X` using choice. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.presentation\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Ind</span>.<span class=\"name\">presentation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\">Ind.inclusion</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L173-L174","name":"CategoryTheory.Ind.isIndObject_inclusion_obj","line":173,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.isIndObject_inclusion_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.isIndObject_inclusion_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Ind</span>.<span class=\"name\">isIndObject_inclusion_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IsIndObject\">Limits.IsIndObject</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\">Ind.inclusion</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L168-L171","name":"CategoryTheory.instPreservesLimitsIndYoneda","line":168,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instPreservesLimitsIndYoneda","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instPreservesLimitsIndYoneda\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instPreservesLimitsIndYoneda</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimits\">Limits.PreservesLimits</a> <a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.yoneda\">Ind.yoneda</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L165-L166","name":"CategoryTheory.instHasLimitsInd","line":165,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasLimitsInd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasLimitsInd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instHasLimitsInd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">Limits.HasLimits</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">Limits.HasLimits</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L162-L163","name":"CategoryTheory.instCreatesLimitsOfSizeIndFunctorOppositeTypeInclusionOfHasLimits","line":162,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instCreatesLimitsOfSizeIndFunctorOppositeTypeInclusionOfHasLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instCreatesLimitsOfSizeIndFunctorOppositeTypeInclusionOfHasLimits\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instCreatesLimitsOfSizeIndFunctorOppositeTypeInclusionOfHasLimits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">Limits.HasLimits</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimitsOfSize\">CreatesLimitsOfSize.{v, v, v, max u v, max u (v + 1), max u (v + 1)}</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\">Ind.inclusion</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L159-L160","name":"CategoryTheory.instHasFiniteLimitsInd","line":159,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasFiniteLimitsInd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasFiniteLimitsInd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instHasFiniteLimitsInd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteLimits.html#CategoryTheory.Limits.HasFiniteLimits\">Limits.HasFiniteLimits</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteLimits.html#CategoryTheory.Limits.HasFiniteLimits\">Limits.HasFiniteLimits</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L154-L157","name":"CategoryTheory.instCreatesFiniteLimitsIndFunctorOppositeTypeInclusionOfHasFiniteLimits","line":154,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instCreatesFiniteLimitsIndFunctorOppositeTypeInclusionOfHasFiniteLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instCreatesFiniteLimitsIndFunctorOppositeTypeInclusionOfHasFiniteLimits\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instCreatesFiniteLimitsIndFunctorOppositeTypeInclusionOfHasFiniteLimits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteLimits.html#CategoryTheory.Limits.HasFiniteLimits\">Limits.HasFiniteLimits</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Creates/Finite.html#CategoryTheory.Limits.CreatesFiniteLimits\">Limits.CreatesFiniteLimits</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\">Ind.inclusion</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L150-L152","name":"CategoryTheory.instHasLimitsOfShapeWalkingParallelPairInd","line":150,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasLimitsOfShapeWalkingParallelPairInd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasLimitsOfShapeWalkingParallelPairInd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instHasLimitsOfShapeWalkingParallelPairInd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">Limits.HasLimitsOfShape</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">Limits.WalkingParallelPair</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">Limits.HasLimitsOfShape</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">Limits.WalkingParallelPair</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L140-L148","name":"CategoryTheory.instCreatesLimitsOfShapeIndFunctorOppositeTypeWalkingParallelPairInclusionOfHasLimitsOfShape","line":140,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instCreatesLimitsOfShapeIndFunctorOppositeTypeWalkingParallelPairInclusionOfHasLimitsOfShape","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instCreatesLimitsOfShapeIndFunctorOppositeTypeWalkingParallelPairInclusionOfHasLimitsOfShape\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instCreatesLimitsOfShapeIndFunctorOppositeTypeWalkingParallelPairInclusionOfHasLimitsOfShape</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">Limits.HasLimitsOfShape</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">Limits.WalkingParallelPair</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimitsOfShape\">CreatesLimitsOfShape</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">Limits.WalkingParallelPair</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\">Ind.inclusion</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L136-L138","name":"CategoryTheory.instHasLimitsOfShapeDiscreteInd","line":136,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasLimitsOfShapeDiscreteInd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasLimitsOfShapeDiscreteInd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instHasLimitsOfShapeDiscreteInd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">Limits.HasLimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">J</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">Limits.HasLimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">J</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L128-L134","name":"CategoryTheory.instCreatesLimitsOfShapeIndFunctorOppositeTypeDiscreteInclusionOfHasLimitsOfShape","line":128,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instCreatesLimitsOfShapeIndFunctorOppositeTypeDiscreteInclusionOfHasLimitsOfShape","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instCreatesLimitsOfShapeIndFunctorOppositeTypeDiscreteInclusionOfHasLimitsOfShape\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instCreatesLimitsOfShapeIndFunctorOppositeTypeDiscreteInclusionOfHasLimitsOfShape</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">Limits.HasLimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">J</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimitsOfShape\">CreatesLimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">J</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\">Ind.inclusion</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L124-L126","name":"CategoryTheory.instHasFilteredColimitsInd","line":124,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasFilteredColimitsInd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instHasFilteredColimitsInd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instHasFilteredColimitsInd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Filtered.html#CategoryTheory.Limits.HasFilteredColimits\">Limits.HasFilteredColimits</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L116-L122","name":"CategoryTheory.instCreatesColimitsOfShapeIndFunctorOppositeTypeInclusionOfIsFiltered","line":116,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instCreatesColimitsOfShapeIndFunctorOppositeTypeInclusionOfIsFiltered","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instCreatesColimitsOfShapeIndFunctorOppositeTypeInclusionOfIsFiltered\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instCreatesColimitsOfShapeIndFunctorOppositeTypeInclusionOfIsFiltered</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">IsFiltered</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesColimitsOfShape\">CreatesColimitsOfShape</a> <span class=\"fn\">J</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\">Ind.inclusion</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L111-L114","name":"CategoryTheory.Ind.yonedaCompInclusion","line":111,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.yonedaCompInclusion","doc":"The composition `C ⥤ Ind C ⥤ (Cᵒᵖ ⥤ Type v)` is just the Yoneda embedding. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.yonedaCompInclusion\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Ind</span>.<span class=\"name\">yonedaCompInclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.yoneda\">Ind.yoneda</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\">Ind.inclusion</a> <span class=\"fn\">C</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L107-L109","name":"CategoryTheory.Ind.yoneda.fullyFaithful","line":107,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.yoneda.fullyFaithful","doc":"The functor `C ⥤ Ind C` is fully faithful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.yoneda.fullyFaithful\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Ind</span>.<span class=\"name\">yoneda</span>.<span class=\"name\">fullyFaithful</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.yoneda\">Ind.yoneda</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.FullyFaithful\">FullyFaithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L103-L105","name":"CategoryTheory.instFaithfulIndYoneda","line":103,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instFaithfulIndYoneda","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instFaithfulIndYoneda\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instFaithfulIndYoneda</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.yoneda\">Ind.yoneda</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L99-L101","name":"CategoryTheory.instFullIndYoneda","line":99,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instFullIndYoneda","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instFullIndYoneda\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instFullIndYoneda</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.yoneda\">Ind.yoneda</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L95-L97","name":"CategoryTheory.Ind.yoneda","line":95,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.yoneda","doc":"The inclusion of `C` into `Ind C` induced by the Yoneda embedding. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.yoneda\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Ind</span>.<span class=\"name\">yoneda</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L91-L93","name":"CategoryTheory.Ind.inclusion.fullyFaithful","line":91,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion.fullyFaithful","doc":"The functor `Ind C ⥤ Cᵒᵖ ⥤ Type v` is fully faithful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion.fullyFaithful\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Ind</span>.<span class=\"name\">inclusion</span>.<span class=\"name\">fullyFaithful</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\">Ind.inclusion</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.FullyFaithful\">FullyFaithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L88-L89","name":"CategoryTheory.instFaithfulIndFunctorOppositeTypeInclusion","line":88,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instFaithfulIndFunctorOppositeTypeInclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instFaithfulIndFunctorOppositeTypeInclusion\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instFaithfulIndFunctorOppositeTypeInclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\">Ind.inclusion</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L85-L86","name":"CategoryTheory.instFullIndFunctorOppositeTypeInclusion","line":85,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instFullIndFunctorOppositeTypeInclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instFullIndFunctorOppositeTypeInclusion\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instFullIndFunctorOppositeTypeInclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\">Ind.inclusion</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L81-L83","name":"CategoryTheory.Ind.inclusion","line":81,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion","doc":"The canonical inclusion of ind-objects into presheaves. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.inclusion\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Ind</span>.<span class=\"name\">inclusion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L74-L78","name":"CategoryTheory.Ind.equivalence","line":74,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.equivalence","doc":"The defining properties of `Ind C` are that its morphisms live in `v` and that it is equivalent\nto the full subcategory of `Cᵒᵖ ⥤ Type v` containing the ind-objects. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind.equivalence\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Ind</span>.<span class=\"name\">equivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/FullSubcategory.html#CategoryTheory.ObjectProperty.FullSubcategory\">ObjectProperty.FullSubcategory</a> <a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IsIndObject\">Limits.IsIndObject</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L69-L71","name":"CategoryTheory.instCategoryInd","line":69,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instCategoryInd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.instCategoryInd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instCategoryInd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, max u (v + 1)}</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/e9db98beeec1b415e419a3a8f0d96ed55b0f29ab/Mathlib/CategoryTheory/Limits/Indization/Category.lean#L65-L67","name":"CategoryTheory.Ind","line":65,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind","doc":"The category of Ind-objects of `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Ind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u (v + 1))</div></div>"}]}